/*! For license information please see main.cad8a1d6.js.LICENSE.txt */
!function() {
    "use strict";
    var e = {
        194: function(e, t, n) {
            var r = n(995)
              , i = n(938);
            function a(e) {
                for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++)
                    t += "&args[]=" + encodeURIComponent(arguments[n]);
                return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
            }
            var o = new Set
              , s = {};
            function l(e, t) {
                u(e, t),
                u(e + "Capture", t)
            }
            function u(e, t) {
                for (s[e] = t,
                e = 0; e < t.length; e++)
                    o.add(t[e])
            }
            var c = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement)
              , d = Object.prototype.hasOwnProperty
              , f = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/
              , h = {}
              , p = {};
            function m(e, t, n, r, i, a, o) {
                this.acceptsBooleans = 2 === t || 3 === t || 4 === t,
                this.attributeName = r,
                this.attributeNamespace = i,
                this.mustUseProperty = n,
                this.propertyName = e,
                this.type = t,
                this.sanitizeURL = a,
                this.removeEmptyString = o
            }
            var v = {};
            "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e) {
                v[e] = new m(e,0,!1,e,null,!1,!1)
            }
            )),
            [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach((function(e) {
                var t = e[0];
                v[t] = new m(t,1,!1,e[1],null,!1,!1)
            }
            )),
            ["contentEditable", "draggable", "spellCheck", "value"].forEach((function(e) {
                v[e] = new m(e,2,!1,e.toLowerCase(),null,!1,!1)
            }
            )),
            ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach((function(e) {
                v[e] = new m(e,2,!1,e,null,!1,!1)
            }
            )),
            "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e) {
                v[e] = new m(e,3,!1,e.toLowerCase(),null,!1,!1)
            }
            )),
            ["checked", "multiple", "muted", "selected"].forEach((function(e) {
                v[e] = new m(e,3,!0,e,null,!1,!1)
            }
            )),
            ["capture", "download"].forEach((function(e) {
                v[e] = new m(e,4,!1,e,null,!1,!1)
            }
            )),
            ["cols", "rows", "size", "span"].forEach((function(e) {
                v[e] = new m(e,6,!1,e,null,!1,!1)
            }
            )),
            ["rowSpan", "start"].forEach((function(e) {
                v[e] = new m(e,5,!1,e.toLowerCase(),null,!1,!1)
            }
            ));
            var g = /[\-:]([a-z])/g;
            function _(e) {
                return e[1].toUpperCase()
            }
            function y(e, t, n, r) {
                var i = v.hasOwnProperty(t) ? v[t] : null;
                (null !== i ? 0 !== i.type : r || !(2 < t.length) || "o" !== t[0] && "O" !== t[0] || "n" !== t[1] && "N" !== t[1]) && (function(e, t, n, r) {
                    if (null === t || "undefined" === typeof t || function(e, t, n, r) {
                        if (null !== n && 0 === n.type)
                            return !1;
                        switch (typeof t) {
                        case "function":
                        case "symbol":
                            return !0;
                        case "boolean":
                            return !r && (null !== n ? !n.acceptsBooleans : "data-" !== (e = e.toLowerCase().slice(0, 5)) && "aria-" !== e);
                        default:
                            return !1
                        }
                    }(e, t, n, r))
                        return !0;
                    if (r)
                        return !1;
                    if (null !== n)
                        switch (n.type) {
                        case 3:
                            return !t;
                        case 4:
                            return !1 === t;
                        case 5:
                            return isNaN(t);
                        case 6:
                            return isNaN(t) || 1 > t
                        }
                    return !1
                }(t, n, i, r) && (n = null),
                r || null === i ? function(e) {
                    return !!d.call(p, e) || !d.call(h, e) && (f.test(e) ? p[e] = !0 : (h[e] = !0,
                    !1))
                }(t) && (null === n ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : i.mustUseProperty ? e[i.propertyName] = null === n ? 3 !== i.type && "" : n : (t = i.attributeName,
                r = i.attributeNamespace,
                null === n ? e.removeAttribute(t) : (n = 3 === (i = i.type) || 4 === i && !0 === n ? "" : "" + n,
                r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
            }
            "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e) {
                var t = e.replace(g, _);
                v[t] = new m(t,1,!1,e,null,!1,!1)
            }
            )),
            "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e) {
                var t = e.replace(g, _);
                v[t] = new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)
            }
            )),
            ["xml:base", "xml:lang", "xml:space"].forEach((function(e) {
                var t = e.replace(g, _);
                v[t] = new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)
            }
            )),
            ["tabIndex", "crossOrigin"].forEach((function(e) {
                v[e] = new m(e,1,!1,e.toLowerCase(),null,!1,!1)
            }
            )),
            v.xlinkHref = new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),
            ["src", "href", "action", "formAction"].forEach((function(e) {
                v[e] = new m(e,1,!1,e.toLowerCase(),null,!0,!0)
            }
            ));
            var x = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
              , b = Symbol.for("react.element")
              , S = Symbol.for("react.portal")
              , M = Symbol.for("react.fragment")
              , E = Symbol.for("react.strict_mode")
              , T = Symbol.for("react.profiler")
              , w = Symbol.for("react.provider")
              , A = Symbol.for("react.context")
              , R = Symbol.for("react.forward_ref")
              , C = Symbol.for("react.suspense")
              , k = Symbol.for("react.suspense_list")
              , P = Symbol.for("react.memo")
              , L = Symbol.for("react.lazy");
            Symbol.for("react.scope"),
            Symbol.for("react.debug_trace_mode");
            var U = Symbol.for("react.offscreen");
            Symbol.for("react.legacy_hidden"),
            Symbol.for("react.cache"),
            Symbol.for("react.tracing_marker");
            var D = Symbol.iterator;
            function N(e) {
                return null === e || "object" !== typeof e ? null : "function" === typeof (e = D && e[D] || e["@@iterator"]) ? e : null
            }
            var I, O = Object.assign;
            function F(e) {
                if (void 0 === I)
                    try {
                        throw Error()
                    } catch (n) {
                        var t = n.stack.trim().match(/\n( *(at )?)/);
                        I = t && t[1] || ""
                    }
                return "\n" + I + e
            }
            var z = !1;
            function B(e, t) {
                if (!e || z)
                    return "";
                z = !0;
                var n = Error.prepareStackTrace;
                Error.prepareStackTrace = void 0;
                try {
                    if (t)
                        if (t = function() {
                            throw Error()
                        }
                        ,
                        Object.defineProperty(t.prototype, "props", {
                            set: function() {
                                throw Error()
                            }
                        }),
                        "object" === typeof Reflect && Reflect.construct) {
                            try {
                                Reflect.construct(t, [])
                            } catch (u) {
                                var r = u
                            }
                            Reflect.construct(e, [], t)
                        } else {
                            try {
                                t.call()
                            } catch (u) {
                                r = u
                            }
                            e.call(t.prototype)
                        }
                    else {
                        try {
                            throw Error()
                        } catch (u) {
                            r = u
                        }
                        e()
                    }
                } catch (u) {
                    if (u && r && "string" === typeof u.stack) {
                        for (var i = u.stack.split("\n"), a = r.stack.split("\n"), o = i.length - 1, s = a.length - 1; 1 <= o && 0 <= s && i[o] !== a[s]; )
                            s--;
                        for (; 1 <= o && 0 <= s; o--,
                        s--)
                            if (i[o] !== a[s]) {
                                if (1 !== o || 1 !== s)
                                    do {
                                        if (o--,
                                        0 > --s || i[o] !== a[s]) {
                                            var l = "\n" + i[o].replace(" at new ", " at ");
                                            return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)),
                                            l
                                        }
                                    } while (1 <= o && 0 <= s);
                                break
                            }
                    }
                } finally {
                    z = !1,
                    Error.prepareStackTrace = n
                }
                return (e = e ? e.displayName || e.name : "") ? F(e) : ""
            }
            function V(e) {
                switch (e.tag) {
                case 5:
                    return F(e.type);
                case 16:
                    return F("Lazy");
                case 13:
                    return F("Suspense");
                case 19:
                    return F("SuspenseList");
                case 0:
                case 2:
                case 15:
                    return e = B(e.type, !1);
                case 11:
                    return e = B(e.type.render, !1);
                case 1:
                    return e = B(e.type, !0);
                default:
                    return ""
                }
            }
            function H(e) {
                if (null == e)
                    return null;
                if ("function" === typeof e)
                    return e.displayName || e.name || null;
                if ("string" === typeof e)
                    return e;
                switch (e) {
                case M:
                    return "Fragment";
                case S:
                    return "Portal";
                case T:
                    return "Profiler";
                case E:
                    return "StrictMode";
                case C:
                    return "Suspense";
                case k:
                    return "SuspenseList"
                }
                if ("object" === typeof e)
                    switch (e.$$typeof) {
                    case A:
                        return (e.displayName || "Context") + ".Consumer";
                    case w:
                        return (e._context.displayName || "Context") + ".Provider";
                    case R:
                        var t = e.render;
                        return (e = e.displayName) || (e = "" !== (e = t.displayName || t.name || "") ? "ForwardRef(" + e + ")" : "ForwardRef"),
                        e;
                    case P:
                        return null !== (t = e.displayName || null) ? t : H(e.type) || "Memo";
                    case L:
                        t = e._payload,
                        e = e._init;
                        try {
                            return H(e(t))
                        } catch (n) {}
                    }
                return null
            }
            function G(e) {
                var t = e.type;
                switch (e.tag) {
                case 24:
                    return "Cache";
                case 9:
                    return (t.displayName || "Context") + ".Consumer";
                case 10:
                    return (t._context.displayName || "Context") + ".Provider";
                case 18:
                    return "DehydratedFragment";
                case 11:
                    return e = (e = t.render).displayName || e.name || "",
                    t.displayName || ("" !== e ? "ForwardRef(" + e + ")" : "ForwardRef");
                case 7:
                    return "Fragment";
                case 5:
                    return t;
                case 4:
                    return "Portal";
                case 3:
                    return "Root";
                case 6:
                    return "Text";
                case 16:
                    return H(t);
                case 8:
                    return t === E ? "StrictMode" : "Mode";
                case 22:
                    return "Offscreen";
                case 12:
                    return "Profiler";
                case 21:
                    return "Scope";
                case 13:
                    return "Suspense";
                case 19:
                    return "SuspenseList";
                case 25:
                    return "TracingMarker";
                case 1:
                case 0:
                case 17:
                case 2:
                case 14:
                case 15:
                    if ("function" === typeof t)
                        return t.displayName || t.name || null;
                    if ("string" === typeof t)
                        return t
                }
                return null
            }
            function W(e) {
                switch (typeof e) {
                case "boolean":
                case "number":
                case "string":
                case "undefined":
                case "object":
                    return e;
                default:
                    return ""
                }
            }
            function X(e) {
                var t = e.type;
                return (e = e.nodeName) && "input" === e.toLowerCase() && ("checkbox" === t || "radio" === t)
            }
            function j(e) {
                e._valueTracker || (e._valueTracker = function(e) {
                    var t = X(e) ? "checked" : "value"
                      , n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t)
                      , r = "" + e[t];
                    if (!e.hasOwnProperty(t) && "undefined" !== typeof n && "function" === typeof n.get && "function" === typeof n.set) {
                        var i = n.get
                          , a = n.set;
                        return Object.defineProperty(e, t, {
                            configurable: !0,
                            get: function() {
                                return i.call(this)
                            },
                            set: function(e) {
                                r = "" + e,
                                a.call(this, e)
                            }
                        }),
                        Object.defineProperty(e, t, {
                            enumerable: n.enumerable
                        }),
                        {
                            getValue: function() {
                                return r
                            },
                            setValue: function(e) {
                                r = "" + e
                            },
                            stopTracking: function() {
                                e._valueTracker = null,
                                delete e[t]
                            }
                        }
                    }
                }(e))
            }
            function q(e) {
                if (!e)
                    return !1;
                var t = e._valueTracker;
                if (!t)
                    return !0;
                var n = t.getValue()
                  , r = "";
                return e && (r = X(e) ? e.checked ? "true" : "false" : e.value),
                (e = r) !== n && (t.setValue(e),
                !0)
            }
            function Y(e) {
                if ("undefined" === typeof (e = e || ("undefined" !== typeof document ? document : void 0)))
                    return null;
                try {
                    return e.activeElement || e.body
                } catch (t) {
                    return e.body
                }
            }
            function K(e, t) {
                var n = t.checked;
                return O({}, t, {
                    defaultChecked: void 0,
                    defaultValue: void 0,
                    value: void 0,
                    checked: null != n ? n : e._wrapperState.initialChecked
                })
            }
            function Z(e, t) {
                var n = null == t.defaultValue ? "" : t.defaultValue
                  , r = null != t.checked ? t.checked : t.defaultChecked;
                n = W(null != t.value ? t.value : n),
                e._wrapperState = {
                    initialChecked: r,
                    initialValue: n,
                    controlled: "checkbox" === t.type || "radio" === t.type ? null != t.checked : null != t.value
                }
            }
            function Q(e, t) {
                null != (t = t.checked) && y(e, "checked", t, !1)
            }
            function J(e, t) {
                Q(e, t);
                var n = W(t.value)
                  , r = t.type;
                if (null != n)
                    "number" === r ? (0 === n && "" === e.value || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
                else if ("submit" === r || "reset" === r)
                    return void e.removeAttribute("value");
                t.hasOwnProperty("value") ? ee(e, t.type, n) : t.hasOwnProperty("defaultValue") && ee(e, t.type, W(t.defaultValue)),
                null == t.checked && null != t.defaultChecked && (e.defaultChecked = !!t.defaultChecked)
            }
            function $(e, t, n) {
                if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
                    var r = t.type;
                    if (!("submit" !== r && "reset" !== r || void 0 !== t.value && null !== t.value))
                        return;
                    t = "" + e._wrapperState.initialValue,
                    n || t === e.value || (e.value = t),
                    e.defaultValue = t
                }
                "" !== (n = e.name) && (e.name = ""),
                e.defaultChecked = !!e._wrapperState.initialChecked,
                "" !== n && (e.name = n)
            }
            function ee(e, t, n) {
                "number" === t && Y(e.ownerDocument) === e || (null == n ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
            }
            var te = Array.isArray;
            function ne(e, t, n, r) {
                if (e = e.options,
                t) {
                    t = {};
                    for (var i = 0; i < n.length; i++)
                        t["$" + n[i]] = !0;
                    for (n = 0; n < e.length; n++)
                        i = t.hasOwnProperty("$" + e[n].value),
                        e[n].selected !== i && (e[n].selected = i),
                        i && r && (e[n].defaultSelected = !0)
                } else {
                    for (n = "" + W(n),
                    t = null,
                    i = 0; i < e.length; i++) {
                        if (e[i].value === n)
                            return e[i].selected = !0,
                            void (r && (e[i].defaultSelected = !0));
                        null !== t || e[i].disabled || (t = e[i])
                    }
                    null !== t && (t.selected = !0)
                }
            }
            function re(e, t) {
                if (null != t.dangerouslySetInnerHTML)
                    throw Error(a(91));
                return O({}, t, {
                    value: void 0,
                    defaultValue: void 0,
                    children: "" + e._wrapperState.initialValue
                })
            }
            function ie(e, t) {
                var n = t.value;
                if (null == n) {
                    if (n = t.children,
                    t = t.defaultValue,
                    null != n) {
                        if (null != t)
                            throw Error(a(92));
                        if (te(n)) {
                            if (1 < n.length)
                                throw Error(a(93));
                            n = n[0]
                        }
                        t = n
                    }
                    null == t && (t = ""),
                    n = t
                }
                e._wrapperState = {
                    initialValue: W(n)
                }
            }
            function ae(e, t) {
                var n = W(t.value)
                  , r = W(t.defaultValue);
                null != n && ((n = "" + n) !== e.value && (e.value = n),
                null == t.defaultValue && e.defaultValue !== n && (e.defaultValue = n)),
                null != r && (e.defaultValue = "" + r)
            }
            function oe(e) {
                var t = e.textContent;
                t === e._wrapperState.initialValue && "" !== t && null !== t && (e.value = t)
            }
            function se(e) {
                switch (e) {
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml"
                }
            }
            function le(e, t) {
                return null == e || "http://www.w3.org/1999/xhtml" === e ? se(t) : "http://www.w3.org/2000/svg" === e && "foreignObject" === t ? "http://www.w3.org/1999/xhtml" : e
            }
            var ue, ce, de = (ce = function(e, t) {
                if ("http://www.w3.org/2000/svg" !== e.namespaceURI || "innerHTML"in e)
                    e.innerHTML = t;
                else {
                    for ((ue = ue || document.createElement("div")).innerHTML = "<svg>" + t.valueOf().toString() + "</svg>",
                    t = ue.firstChild; e.firstChild; )
                        e.removeChild(e.firstChild);
                    for (; t.firstChild; )
                        e.appendChild(t.firstChild)
                }
            }
            ,
            "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(e, t, n, r) {
                MSApp.execUnsafeLocalFunction((function() {
                    return ce(e, t)
                }
                ))
            }
            : ce);
            function fe(e, t) {
                if (t) {
                    var n = e.firstChild;
                    if (n && n === e.lastChild && 3 === n.nodeType)
                        return void (n.nodeValue = t)
                }
                e.textContent = t
            }
            var he = {
                animationIterationCount: !0,
                aspectRatio: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridArea: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0
            }
              , pe = ["Webkit", "ms", "Moz", "O"];
            function me(e, t, n) {
                return null == t || "boolean" === typeof t || "" === t ? "" : n || "number" !== typeof t || 0 === t || he.hasOwnProperty(e) && he[e] ? ("" + t).trim() : t + "px"
            }
            function ve(e, t) {
                for (var n in e = e.style,
                t)
                    if (t.hasOwnProperty(n)) {
                        var r = 0 === n.indexOf("--")
                          , i = me(n, t[n], r);
                        "float" === n && (n = "cssFloat"),
                        r ? e.setProperty(n, i) : e[n] = i
                    }
            }
            Object.keys(he).forEach((function(e) {
                pe.forEach((function(t) {
                    t = t + e.charAt(0).toUpperCase() + e.substring(1),
                    he[t] = he[e]
                }
                ))
            }
            ));
            var ge = O({
                menuitem: !0
            }, {
                area: !0,
                base: !0,
                br: !0,
                col: !0,
                embed: !0,
                hr: !0,
                img: !0,
                input: !0,
                keygen: !0,
                link: !0,
                meta: !0,
                param: !0,
                source: !0,
                track: !0,
                wbr: !0
            });
            function _e(e, t) {
                if (t) {
                    if (ge[e] && (null != t.children || null != t.dangerouslySetInnerHTML))
                        throw Error(a(137, e));
                    if (null != t.dangerouslySetInnerHTML) {
                        if (null != t.children)
                            throw Error(a(60));
                        if ("object" !== typeof t.dangerouslySetInnerHTML || !("__html"in t.dangerouslySetInnerHTML))
                            throw Error(a(61))
                    }
                    if (null != t.style && "object" !== typeof t.style)
                        throw Error(a(62))
                }
            }
            function ye(e, t) {
                if (-1 === e.indexOf("-"))
                    return "string" === typeof t.is;
                switch (e) {
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0
                }
            }
            var xe = null;
            function be(e) {
                return (e = e.target || e.srcElement || window).correspondingUseElement && (e = e.correspondingUseElement),
                3 === e.nodeType ? e.parentNode : e
            }
            var Se = null
              , Me = null
              , Ee = null;
            function Te(e) {
                if (e = yi(e)) {
                    if ("function" !== typeof Se)
                        throw Error(a(280));
                    var t = e.stateNode;
                    t && (t = bi(t),
                    Se(e.stateNode, e.type, t))
                }
            }
            function we(e) {
                Me ? Ee ? Ee.push(e) : Ee = [e] : Me = e
            }
            function Ae() {
                if (Me) {
                    var e = Me
                      , t = Ee;
                    if (Ee = Me = null,
                    Te(e),
                    t)
                        for (e = 0; e < t.length; e++)
                            Te(t[e])
                }
            }
            function Re(e, t) {
                return e(t)
            }
            function Ce() {}
            var ke = !1;
            function Pe(e, t, n) {
                if (ke)
                    return e(t, n);
                ke = !0;
                try {
                    return Re(e, t, n)
                } finally {
                    ke = !1,
                    (null !== Me || null !== Ee) && (Ce(),
                    Ae())
                }
            }
            function Le(e, t) {
                var n = e.stateNode;
                if (null === n)
                    return null;
                var r = bi(n);
                if (null === r)
                    return null;
                n = r[t];
                e: switch (t) {
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                case "onMouseEnter":
                    (r = !r.disabled) || (r = !("button" === (e = e.type) || "input" === e || "select" === e || "textarea" === e)),
                    e = !r;
                    break e;
                default:
                    e = !1
                }
                if (e)
                    return null;
                if (n && "function" !== typeof n)
                    throw Error(a(231, t, typeof n));
                return n
            }
            var Ue = !1;
            if (c)
                try {
                    var De = {};
                    Object.defineProperty(De, "passive", {
                        get: function() {
                            Ue = !0
                        }
                    }),
                    window.addEventListener("test", De, De),
                    window.removeEventListener("test", De, De)
                } catch (ce) {
                    Ue = !1
                }
            function Ne(e, t, n, r, i, a, o, s, l) {
                var u = Array.prototype.slice.call(arguments, 3);
                try {
                    t.apply(n, u)
                } catch (c) {
                    this.onError(c)
                }
            }
            var Ie = !1
              , Oe = null
              , Fe = !1
              , ze = null
              , Be = {
                onError: function(e) {
                    Ie = !0,
                    Oe = e
                }
            };
            function Ve(e, t, n, r, i, a, o, s, l) {
                Ie = !1,
                Oe = null,
                Ne.apply(Be, arguments)
            }
            function He(e) {
                var t = e
                  , n = e;
                if (e.alternate)
                    for (; t.return; )
                        t = t.return;
                else {
                    e = t;
                    do {
                        0 !== (4098 & (t = e).flags) && (n = t.return),
                        e = t.return
                    } while (e)
                }
                return 3 === t.tag ? n : null
            }
            function Ge(e) {
                if (13 === e.tag) {
                    var t = e.memoizedState;
                    if (null === t && (null !== (e = e.alternate) && (t = e.memoizedState)),
                    null !== t)
                        return t.dehydrated
                }
                return null
            }
            function We(e) {
                if (He(e) !== e)
                    throw Error(a(188))
            }
            function Xe(e) {
                return null !== (e = function(e) {
                    var t = e.alternate;
                    if (!t) {
                        if (null === (t = He(e)))
                            throw Error(a(188));
                        return t !== e ? null : e
                    }
                    for (var n = e, r = t; ; ) {
                        var i = n.return;
                        if (null === i)
                            break;
                        var o = i.alternate;
                        if (null === o) {
                            if (null !== (r = i.return)) {
                                n = r;
                                continue
                            }
                            break
                        }
                        if (i.child === o.child) {
                            for (o = i.child; o; ) {
                                if (o === n)
                                    return We(i),
                                    e;
                                if (o === r)
                                    return We(i),
                                    t;
                                o = o.sibling
                            }
                            throw Error(a(188))
                        }
                        if (n.return !== r.return)
                            n = i,
                            r = o;
                        else {
                            for (var s = !1, l = i.child; l; ) {
                                if (l === n) {
                                    s = !0,
                                    n = i,
                                    r = o;
                                    break
                                }
                                if (l === r) {
                                    s = !0,
                                    r = i,
                                    n = o;
                                    break
                                }
                                l = l.sibling
                            }
                            if (!s) {
                                for (l = o.child; l; ) {
                                    if (l === n) {
                                        s = !0,
                                        n = o,
                                        r = i;
                                        break
                                    }
                                    if (l === r) {
                                        s = !0,
                                        r = o,
                                        n = i;
                                        break
                                    }
                                    l = l.sibling
                                }
                                if (!s)
                                    throw Error(a(189))
                            }
                        }
                        if (n.alternate !== r)
                            throw Error(a(190))
                    }
                    if (3 !== n.tag)
                        throw Error(a(188));
                    return n.stateNode.current === n ? e : t
                }(e)) ? je(e) : null
            }
            function je(e) {
                if (5 === e.tag || 6 === e.tag)
                    return e;
                for (e = e.child; null !== e; ) {
                    var t = je(e);
                    if (null !== t)
                        return t;
                    e = e.sibling
                }
                return null
            }
            var qe = i.unstable_scheduleCallback
              , Ye = i.unstable_cancelCallback
              , Ke = i.unstable_shouldYield
              , Ze = i.unstable_requestPaint
              , Qe = i.unstable_now
              , Je = i.unstable_getCurrentPriorityLevel
              , $e = i.unstable_ImmediatePriority
              , et = i.unstable_UserBlockingPriority
              , tt = i.unstable_NormalPriority
              , nt = i.unstable_LowPriority
              , rt = i.unstable_IdlePriority
              , it = null
              , at = null;
            var ot = Math.clz32 ? Math.clz32 : function(e) {
                return 0 === (e >>>= 0) ? 32 : 31 - (st(e) / lt | 0) | 0
            }
              , st = Math.log
              , lt = Math.LN2;
            var ut = 64
              , ct = 4194304;
            function dt(e) {
                switch (e & -e) {
                case 1:
                    return 1;
                case 2:
                    return 2;
                case 4:
                    return 4;
                case 8:
                    return 8;
                case 16:
                    return 16;
                case 32:
                    return 32;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return 4194240 & e;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return 130023424 & e;
                case 134217728:
                    return 134217728;
                case 268435456:
                    return 268435456;
                case 536870912:
                    return 536870912;
                case 1073741824:
                    return 1073741824;
                default:
                    return e
                }
            }
            function ft(e, t) {
                var n = e.pendingLanes;
                if (0 === n)
                    return 0;
                var r = 0
                  , i = e.suspendedLanes
                  , a = e.pingedLanes
                  , o = 268435455 & n;
                if (0 !== o) {
                    var s = o & ~i;
                    0 !== s ? r = dt(s) : 0 !== (a &= o) && (r = dt(a))
                } else
                    0 !== (o = n & ~i) ? r = dt(o) : 0 !== a && (r = dt(a));
                if (0 === r)
                    return 0;
                if (0 !== t && t !== r && 0 === (t & i) && ((i = r & -r) >= (a = t & -t) || 16 === i && 0 !== (4194240 & a)))
                    return t;
                if (0 !== (4 & r) && (r |= 16 & n),
                0 !== (t = e.entangledLanes))
                    for (e = e.entanglements,
                    t &= r; 0 < t; )
                        i = 1 << (n = 31 - ot(t)),
                        r |= e[n],
                        t &= ~i;
                return r
            }
            function ht(e, t) {
                switch (e) {
                case 1:
                case 2:
                case 4:
                    return t + 250;
                case 8:
                case 16:
                case 32:
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return t + 5e3;
                default:
                    return -1
                }
            }
            function pt(e) {
                return 0 !== (e = -1073741825 & e.pendingLanes) ? e : 1073741824 & e ? 1073741824 : 0
            }
            function mt() {
                var e = ut;
                return 0 === (4194240 & (ut <<= 1)) && (ut = 64),
                e
            }
            function vt(e) {
                for (var t = [], n = 0; 31 > n; n++)
                    t.push(e);
                return t
            }
            function gt(e, t, n) {
                e.pendingLanes |= t,
                536870912 !== t && (e.suspendedLanes = 0,
                e.pingedLanes = 0),
                (e = e.eventTimes)[t = 31 - ot(t)] = n
            }
            function _t(e, t) {
                var n = e.entangledLanes |= t;
                for (e = e.entanglements; n; ) {
                    var r = 31 - ot(n)
                      , i = 1 << r;
                    i & t | e[r] & t && (e[r] |= t),
                    n &= ~i
                }
            }
            var yt = 0;
            function xt(e) {
                return 1 < (e &= -e) ? 4 < e ? 0 !== (268435455 & e) ? 16 : 536870912 : 4 : 1
            }
            var bt, St, Mt, Et, Tt, wt = !1, At = [], Rt = null, Ct = null, kt = null, Pt = new Map, Lt = new Map, Ut = [], Dt = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
            function Nt(e, t) {
                switch (e) {
                case "focusin":
                case "focusout":
                    Rt = null;
                    break;
                case "dragenter":
                case "dragleave":
                    Ct = null;
                    break;
                case "mouseover":
                case "mouseout":
                    kt = null;
                    break;
                case "pointerover":
                case "pointerout":
                    Pt.delete(t.pointerId);
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                    Lt.delete(t.pointerId)
                }
            }
            function It(e, t, n, r, i, a) {
                return null === e || e.nativeEvent !== a ? (e = {
                    blockedOn: t,
                    domEventName: n,
                    eventSystemFlags: r,
                    nativeEvent: a,
                    targetContainers: [i]
                },
                null !== t && (null !== (t = yi(t)) && St(t)),
                e) : (e.eventSystemFlags |= r,
                t = e.targetContainers,
                null !== i && -1 === t.indexOf(i) && t.push(i),
                e)
            }
            function Ot(e) {
                var t = _i(e.target);
                if (null !== t) {
                    var n = He(t);
                    if (null !== n)
                        if (13 === (t = n.tag)) {
                            if (null !== (t = Ge(n)))
                                return e.blockedOn = t,
                                void Tt(e.priority, (function() {
                                    Mt(n)
                                }
                                ))
                        } else if (3 === t && n.stateNode.current.memoizedState.isDehydrated)
                            return void (e.blockedOn = 3 === n.tag ? n.stateNode.containerInfo : null)
                }
                e.blockedOn = null
            }
            function Ft(e) {
                if (null !== e.blockedOn)
                    return !1;
                for (var t = e.targetContainers; 0 < t.length; ) {
                    var n = Kt(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                    if (null !== n)
                        return null !== (t = yi(n)) && St(t),
                        e.blockedOn = n,
                        !1;
                    var r = new (n = e.nativeEvent).constructor(n.type,n);
                    xe = r,
                    n.target.dispatchEvent(r),
                    xe = null,
                    t.shift()
                }
                return !0
            }
            function zt(e, t, n) {
                Ft(e) && n.delete(t)
            }
            function Bt() {
                wt = !1,
                null !== Rt && Ft(Rt) && (Rt = null),
                null !== Ct && Ft(Ct) && (Ct = null),
                null !== kt && Ft(kt) && (kt = null),
                Pt.forEach(zt),
                Lt.forEach(zt)
            }
            function Vt(e, t) {
                e.blockedOn === t && (e.blockedOn = null,
                wt || (wt = !0,
                i.unstable_scheduleCallback(i.unstable_NormalPriority, Bt)))
            }
            function Ht(e) {
                function t(t) {
                    return Vt(t, e)
                }
                if (0 < At.length) {
                    Vt(At[0], e);
                    for (var n = 1; n < At.length; n++) {
                        var r = At[n];
                        r.blockedOn === e && (r.blockedOn = null)
                    }
                }
                for (null !== Rt && Vt(Rt, e),
                null !== Ct && Vt(Ct, e),
                null !== kt && Vt(kt, e),
                Pt.forEach(t),
                Lt.forEach(t),
                n = 0; n < Ut.length; n++)
                    (r = Ut[n]).blockedOn === e && (r.blockedOn = null);
                for (; 0 < Ut.length && null === (n = Ut[0]).blockedOn; )
                    Ot(n),
                    null === n.blockedOn && Ut.shift()
            }
            var Gt = x.ReactCurrentBatchConfig
              , Wt = !0;
            function Xt(e, t, n, r) {
                var i = yt
                  , a = Gt.transition;
                Gt.transition = null;
                try {
                    yt = 1,
                    qt(e, t, n, r)
                } finally {
                    yt = i,
                    Gt.transition = a
                }
            }
            function jt(e, t, n, r) {
                var i = yt
                  , a = Gt.transition;
                Gt.transition = null;
                try {
                    yt = 4,
                    qt(e, t, n, r)
                } finally {
                    yt = i,
                    Gt.transition = a
                }
            }
            function qt(e, t, n, r) {
                if (Wt) {
                    var i = Kt(e, t, n, r);
                    if (null === i)
                        Wr(e, t, r, Yt, n),
                        Nt(e, r);
                    else if (function(e, t, n, r, i) {
                        switch (t) {
                        case "focusin":
                            return Rt = It(Rt, e, t, n, r, i),
                            !0;
                        case "dragenter":
                            return Ct = It(Ct, e, t, n, r, i),
                            !0;
                        case "mouseover":
                            return kt = It(kt, e, t, n, r, i),
                            !0;
                        case "pointerover":
                            var a = i.pointerId;
                            return Pt.set(a, It(Pt.get(a) || null, e, t, n, r, i)),
                            !0;
                        case "gotpointercapture":
                            return a = i.pointerId,
                            Lt.set(a, It(Lt.get(a) || null, e, t, n, r, i)),
                            !0
                        }
                        return !1
                    }(i, e, t, n, r))
                        r.stopPropagation();
                    else if (Nt(e, r),
                    4 & t && -1 < Dt.indexOf(e)) {
                        for (; null !== i; ) {
                            var a = yi(i);
                            if (null !== a && bt(a),
                            null === (a = Kt(e, t, n, r)) && Wr(e, t, r, Yt, n),
                            a === i)
                                break;
                            i = a
                        }
                        null !== i && r.stopPropagation()
                    } else
                        Wr(e, t, r, null, n)
                }
            }
            var Yt = null;
            function Kt(e, t, n, r) {
                if (Yt = null,
                null !== (e = _i(e = be(r))))
                    if (null === (t = He(e)))
                        e = null;
                    else if (13 === (n = t.tag)) {
                        if (null !== (e = Ge(t)))
                            return e;
                        e = null
                    } else if (3 === n) {
                        if (t.stateNode.current.memoizedState.isDehydrated)
                            return 3 === t.tag ? t.stateNode.containerInfo : null;
                        e = null
                    } else
                        t !== e && (e = null);
                return Yt = e,
                null
            }
            function Zt(e) {
                switch (e) {
                case "cancel":
                case "click":
                case "close":
                case "contextmenu":
                case "copy":
                case "cut":
                case "auxclick":
                case "dblclick":
                case "dragend":
                case "dragstart":
                case "drop":
                case "focusin":
                case "focusout":
                case "input":
                case "invalid":
                case "keydown":
                case "keypress":
                case "keyup":
                case "mousedown":
                case "mouseup":
                case "paste":
                case "pause":
                case "play":
                case "pointercancel":
                case "pointerdown":
                case "pointerup":
                case "ratechange":
                case "reset":
                case "resize":
                case "seeked":
                case "submit":
                case "touchcancel":
                case "touchend":
                case "touchstart":
                case "volumechange":
                case "change":
                case "selectionchange":
                case "textInput":
                case "compositionstart":
                case "compositionend":
                case "compositionupdate":
                case "beforeblur":
                case "afterblur":
                case "beforeinput":
                case "blur":
                case "fullscreenchange":
                case "focus":
                case "hashchange":
                case "popstate":
                case "select":
                case "selectstart":
                    return 1;
                case "drag":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "mousemove":
                case "mouseout":
                case "mouseover":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "scroll":
                case "toggle":
                case "touchmove":
                case "wheel":
                case "mouseenter":
                case "mouseleave":
                case "pointerenter":
                case "pointerleave":
                    return 4;
                case "message":
                    switch (Je()) {
                    case $e:
                        return 1;
                    case et:
                        return 4;
                    case tt:
                    case nt:
                        return 16;
                    case rt:
                        return 536870912;
                    default:
                        return 16
                    }
                default:
                    return 16
                }
            }
            var Qt = null
              , Jt = null
              , $t = null;
            function en() {
                if ($t)
                    return $t;
                var e, t, n = Jt, r = n.length, i = "value"in Qt ? Qt.value : Qt.textContent, a = i.length;
                for (e = 0; e < r && n[e] === i[e]; e++)
                    ;
                var o = r - e;
                for (t = 1; t <= o && n[r - t] === i[a - t]; t++)
                    ;
                return $t = i.slice(e, 1 < t ? 1 - t : void 0)
            }
            function tn(e) {
                var t = e.keyCode;
                return "charCode"in e ? 0 === (e = e.charCode) && 13 === t && (e = 13) : e = t,
                10 === e && (e = 13),
                32 <= e || 13 === e ? e : 0
            }
            function nn() {
                return !0
            }
            function rn() {
                return !1
            }
            function an(e) {
                function t(t, n, r, i, a) {
                    for (var o in this._reactName = t,
                    this._targetInst = r,
                    this.type = n,
                    this.nativeEvent = i,
                    this.target = a,
                    this.currentTarget = null,
                    e)
                        e.hasOwnProperty(o) && (t = e[o],
                        this[o] = t ? t(i) : i[o]);
                    return this.isDefaultPrevented = (null != i.defaultPrevented ? i.defaultPrevented : !1 === i.returnValue) ? nn : rn,
                    this.isPropagationStopped = rn,
                    this
                }
                return O(t.prototype, {
                    preventDefault: function() {
                        this.defaultPrevented = !0;
                        var e = this.nativeEvent;
                        e && (e.preventDefault ? e.preventDefault() : "unknown" !== typeof e.returnValue && (e.returnValue = !1),
                        this.isDefaultPrevented = nn)
                    },
                    stopPropagation: function() {
                        var e = this.nativeEvent;
                        e && (e.stopPropagation ? e.stopPropagation() : "unknown" !== typeof e.cancelBubble && (e.cancelBubble = !0),
                        this.isPropagationStopped = nn)
                    },
                    persist: function() {},
                    isPersistent: nn
                }),
                t
            }
            var on, sn, ln, un = {
                eventPhase: 0,
                bubbles: 0,
                cancelable: 0,
                timeStamp: function(e) {
                    return e.timeStamp || Date.now()
                },
                defaultPrevented: 0,
                isTrusted: 0
            }, cn = an(un), dn = O({}, un, {
                view: 0,
                detail: 0
            }), fn = an(dn), hn = O({}, dn, {
                screenX: 0,
                screenY: 0,
                clientX: 0,
                clientY: 0,
                pageX: 0,
                pageY: 0,
                ctrlKey: 0,
                shiftKey: 0,
                altKey: 0,
                metaKey: 0,
                getModifierState: Tn,
                button: 0,
                buttons: 0,
                relatedTarget: function(e) {
                    return void 0 === e.relatedTarget ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
                },
                movementX: function(e) {
                    return "movementX"in e ? e.movementX : (e !== ln && (ln && "mousemove" === e.type ? (on = e.screenX - ln.screenX,
                    sn = e.screenY - ln.screenY) : sn = on = 0,
                    ln = e),
                    on)
                },
                movementY: function(e) {
                    return "movementY"in e ? e.movementY : sn
                }
            }), pn = an(hn), mn = an(O({}, hn, {
                dataTransfer: 0
            })), vn = an(O({}, dn, {
                relatedTarget: 0
            })), gn = an(O({}, un, {
                animationName: 0,
                elapsedTime: 0,
                pseudoElement: 0
            })), _n = O({}, un, {
                clipboardData: function(e) {
                    return "clipboardData"in e ? e.clipboardData : window.clipboardData
                }
            }), yn = an(_n), xn = an(O({}, un, {
                data: 0
            })), bn = {
                Esc: "Escape",
                Spacebar: " ",
                Left: "ArrowLeft",
                Up: "ArrowUp",
                Right: "ArrowRight",
                Down: "ArrowDown",
                Del: "Delete",
                Win: "OS",
                Menu: "ContextMenu",
                Apps: "ContextMenu",
                Scroll: "ScrollLock",
                MozPrintableKey: "Unidentified"
            }, Sn = {
                8: "Backspace",
                9: "Tab",
                12: "Clear",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                19: "Pause",
                20: "CapsLock",
                27: "Escape",
                32: " ",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "ArrowLeft",
                38: "ArrowUp",
                39: "ArrowRight",
                40: "ArrowDown",
                45: "Insert",
                46: "Delete",
                112: "F1",
                113: "F2",
                114: "F3",
                115: "F4",
                116: "F5",
                117: "F6",
                118: "F7",
                119: "F8",
                120: "F9",
                121: "F10",
                122: "F11",
                123: "F12",
                144: "NumLock",
                145: "ScrollLock",
                224: "Meta"
            }, Mn = {
                Alt: "altKey",
                Control: "ctrlKey",
                Meta: "metaKey",
                Shift: "shiftKey"
            };
            function En(e) {
                var t = this.nativeEvent;
                return t.getModifierState ? t.getModifierState(e) : !!(e = Mn[e]) && !!t[e]
            }
            function Tn() {
                return En
            }
            var wn = O({}, dn, {
                key: function(e) {
                    if (e.key) {
                        var t = bn[e.key] || e.key;
                        if ("Unidentified" !== t)
                            return t
                    }
                    return "keypress" === e.type ? 13 === (e = tn(e)) ? "Enter" : String.fromCharCode(e) : "keydown" === e.type || "keyup" === e.type ? Sn[e.keyCode] || "Unidentified" : ""
                },
                code: 0,
                location: 0,
                ctrlKey: 0,
                shiftKey: 0,
                altKey: 0,
                metaKey: 0,
                repeat: 0,
                locale: 0,
                getModifierState: Tn,
                charCode: function(e) {
                    return "keypress" === e.type ? tn(e) : 0
                },
                keyCode: function(e) {
                    return "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                },
                which: function(e) {
                    return "keypress" === e.type ? tn(e) : "keydown" === e.type || "keyup" === e.type ? e.keyCode : 0
                }
            })
              , An = an(wn)
              , Rn = an(O({}, hn, {
                pointerId: 0,
                width: 0,
                height: 0,
                pressure: 0,
                tangentialPressure: 0,
                tiltX: 0,
                tiltY: 0,
                twist: 0,
                pointerType: 0,
                isPrimary: 0
            }))
              , Cn = an(O({}, dn, {
                touches: 0,
                targetTouches: 0,
                changedTouches: 0,
                altKey: 0,
                metaKey: 0,
                ctrlKey: 0,
                shiftKey: 0,
                getModifierState: Tn
            }))
              , kn = an(O({}, un, {
                propertyName: 0,
                elapsedTime: 0,
                pseudoElement: 0
            }))
              , Pn = O({}, hn, {
                deltaX: function(e) {
                    return "deltaX"in e ? e.deltaX : "wheelDeltaX"in e ? -e.wheelDeltaX : 0
                },
                deltaY: function(e) {
                    return "deltaY"in e ? e.deltaY : "wheelDeltaY"in e ? -e.wheelDeltaY : "wheelDelta"in e ? -e.wheelDelta : 0
                },
                deltaZ: 0,
                deltaMode: 0
            })
              , Ln = an(Pn)
              , Un = [9, 13, 27, 32]
              , Dn = c && "CompositionEvent"in window
              , Nn = null;
            c && "documentMode"in document && (Nn = document.documentMode);
            var In = c && "TextEvent"in window && !Nn
              , On = c && (!Dn || Nn && 8 < Nn && 11 >= Nn)
              , Fn = String.fromCharCode(32)
              , zn = !1;
            function Bn(e, t) {
                switch (e) {
                case "keyup":
                    return -1 !== Un.indexOf(t.keyCode);
                case "keydown":
                    return 229 !== t.keyCode;
                case "keypress":
                case "mousedown":
                case "focusout":
                    return !0;
                default:
                    return !1
                }
            }
            function Vn(e) {
                return "object" === typeof (e = e.detail) && "data"in e ? e.data : null
            }
            var Hn = !1;
            var Gn = {
                color: !0,
                date: !0,
                datetime: !0,
                "datetime-local": !0,
                email: !0,
                month: !0,
                number: !0,
                password: !0,
                range: !0,
                search: !0,
                tel: !0,
                text: !0,
                time: !0,
                url: !0,
                week: !0
            };
            function Wn(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return "input" === t ? !!Gn[e.type] : "textarea" === t
            }
            function Xn(e, t, n, r) {
                we(r),
                0 < (t = jr(t, "onChange")).length && (n = new cn("onChange","change",null,n,r),
                e.push({
                    event: n,
                    listeners: t
                }))
            }
            var jn = null
              , qn = null;
            function Yn(e) {
                Fr(e, 0)
            }
            function Kn(e) {
                if (q(xi(e)))
                    return e
            }
            function Zn(e, t) {
                if ("change" === e)
                    return t
            }
            var Qn = !1;
            if (c) {
                var Jn;
                if (c) {
                    var $n = "oninput"in document;
                    if (!$n) {
                        var er = document.createElement("div");
                        er.setAttribute("oninput", "return;"),
                        $n = "function" === typeof er.oninput
                    }
                    Jn = $n
                } else
                    Jn = !1;
                Qn = Jn && (!document.documentMode || 9 < document.documentMode)
            }
            function tr() {
                jn && (jn.detachEvent("onpropertychange", nr),
                qn = jn = null)
            }
            function nr(e) {
                if ("value" === e.propertyName && Kn(qn)) {
                    var t = [];
                    Xn(t, qn, e, be(e)),
                    Pe(Yn, t)
                }
            }
            function rr(e, t, n) {
                "focusin" === e ? (tr(),
                qn = n,
                (jn = t).attachEvent("onpropertychange", nr)) : "focusout" === e && tr()
            }
            function ir(e) {
                if ("selectionchange" === e || "keyup" === e || "keydown" === e)
                    return Kn(qn)
            }
            function ar(e, t) {
                if ("click" === e)
                    return Kn(t)
            }
            function or(e, t) {
                if ("input" === e || "change" === e)
                    return Kn(t)
            }
            var sr = "function" === typeof Object.is ? Object.is : function(e, t) {
                return e === t && (0 !== e || 1 / e === 1 / t) || e !== e && t !== t
            }
            ;
            function lr(e, t) {
                if (sr(e, t))
                    return !0;
                if ("object" !== typeof e || null === e || "object" !== typeof t || null === t)
                    return !1;
                var n = Object.keys(e)
                  , r = Object.keys(t);
                if (n.length !== r.length)
                    return !1;
                for (r = 0; r < n.length; r++) {
                    var i = n[r];
                    if (!d.call(t, i) || !sr(e[i], t[i]))
                        return !1
                }
                return !0
            }
            function ur(e) {
                for (; e && e.firstChild; )
                    e = e.firstChild;
                return e
            }
            function cr(e, t) {
                var n, r = ur(e);
                for (e = 0; r; ) {
                    if (3 === r.nodeType) {
                        if (n = e + r.textContent.length,
                        e <= t && n >= t)
                            return {
                                node: r,
                                offset: t - e
                            };
                        e = n
                    }
                    e: {
                        for (; r; ) {
                            if (r.nextSibling) {
                                r = r.nextSibling;
                                break e
                            }
                            r = r.parentNode
                        }
                        r = void 0
                    }
                    r = ur(r)
                }
            }
            function dr(e, t) {
                return !(!e || !t) && (e === t || (!e || 3 !== e.nodeType) && (t && 3 === t.nodeType ? dr(e, t.parentNode) : "contains"in e ? e.contains(t) : !!e.compareDocumentPosition && !!(16 & e.compareDocumentPosition(t))))
            }
            function fr() {
                for (var e = window, t = Y(); t instanceof e.HTMLIFrameElement; ) {
                    try {
                        var n = "string" === typeof t.contentWindow.location.href
                    } catch (r) {
                        n = !1
                    }
                    if (!n)
                        break;
                    t = Y((e = t.contentWindow).document)
                }
                return t
            }
            function hr(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return t && ("input" === t && ("text" === e.type || "search" === e.type || "tel" === e.type || "url" === e.type || "password" === e.type) || "textarea" === t || "true" === e.contentEditable)
            }
            function pr(e) {
                var t = fr()
                  , n = e.focusedElem
                  , r = e.selectionRange;
                if (t !== n && n && n.ownerDocument && dr(n.ownerDocument.documentElement, n)) {
                    if (null !== r && hr(n))
                        if (t = r.start,
                        void 0 === (e = r.end) && (e = t),
                        "selectionStart"in n)
                            n.selectionStart = t,
                            n.selectionEnd = Math.min(e, n.value.length);
                        else if ((e = (t = n.ownerDocument || document) && t.defaultView || window).getSelection) {
                            e = e.getSelection();
                            var i = n.textContent.length
                              , a = Math.min(r.start, i);
                            r = void 0 === r.end ? a : Math.min(r.end, i),
                            !e.extend && a > r && (i = r,
                            r = a,
                            a = i),
                            i = cr(n, a);
                            var o = cr(n, r);
                            i && o && (1 !== e.rangeCount || e.anchorNode !== i.node || e.anchorOffset !== i.offset || e.focusNode !== o.node || e.focusOffset !== o.offset) && ((t = t.createRange()).setStart(i.node, i.offset),
                            e.removeAllRanges(),
                            a > r ? (e.addRange(t),
                            e.extend(o.node, o.offset)) : (t.setEnd(o.node, o.offset),
                            e.addRange(t)))
                        }
                    for (t = [],
                    e = n; e = e.parentNode; )
                        1 === e.nodeType && t.push({
                            element: e,
                            left: e.scrollLeft,
                            top: e.scrollTop
                        });
                    for ("function" === typeof n.focus && n.focus(),
                    n = 0; n < t.length; n++)
                        (e = t[n]).element.scrollLeft = e.left,
                        e.element.scrollTop = e.top
                }
            }
            var mr = c && "documentMode"in document && 11 >= document.documentMode
              , vr = null
              , gr = null
              , _r = null
              , yr = !1;
            function xr(e, t, n) {
                var r = n.window === n ? n.document : 9 === n.nodeType ? n : n.ownerDocument;
                yr || null == vr || vr !== Y(r) || ("selectionStart"in (r = vr) && hr(r) ? r = {
                    start: r.selectionStart,
                    end: r.selectionEnd
                } : r = {
                    anchorNode: (r = (r.ownerDocument && r.ownerDocument.defaultView || window).getSelection()).anchorNode,
                    anchorOffset: r.anchorOffset,
                    focusNode: r.focusNode,
                    focusOffset: r.focusOffset
                },
                _r && lr(_r, r) || (_r = r,
                0 < (r = jr(gr, "onSelect")).length && (t = new cn("onSelect","select",null,t,n),
                e.push({
                    event: t,
                    listeners: r
                }),
                t.target = vr)))
            }
            function br(e, t) {
                var n = {};
                return n[e.toLowerCase()] = t.toLowerCase(),
                n["Webkit" + e] = "webkit" + t,
                n["Moz" + e] = "moz" + t,
                n
            }
            var Sr = {
                animationend: br("Animation", "AnimationEnd"),
                animationiteration: br("Animation", "AnimationIteration"),
                animationstart: br("Animation", "AnimationStart"),
                transitionend: br("Transition", "TransitionEnd")
            }
              , Mr = {}
              , Er = {};
            function Tr(e) {
                if (Mr[e])
                    return Mr[e];
                if (!Sr[e])
                    return e;
                var t, n = Sr[e];
                for (t in n)
                    if (n.hasOwnProperty(t) && t in Er)
                        return Mr[e] = n[t];
                return e
            }
            c && (Er = document.createElement("div").style,
            "AnimationEvent"in window || (delete Sr.animationend.animation,
            delete Sr.animationiteration.animation,
            delete Sr.animationstart.animation),
            "TransitionEvent"in window || delete Sr.transitionend.transition);
            var wr = Tr("animationend")
              , Ar = Tr("animationiteration")
              , Rr = Tr("animationstart")
              , Cr = Tr("transitionend")
              , kr = new Map
              , Pr = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
            function Lr(e, t) {
                kr.set(e, t),
                l(t, [e])
            }
            for (var Ur = 0; Ur < Pr.length; Ur++) {
                var Dr = Pr[Ur];
                Lr(Dr.toLowerCase(), "on" + (Dr[0].toUpperCase() + Dr.slice(1)))
            }
            Lr(wr, "onAnimationEnd"),
            Lr(Ar, "onAnimationIteration"),
            Lr(Rr, "onAnimationStart"),
            Lr("dblclick", "onDoubleClick"),
            Lr("focusin", "onFocus"),
            Lr("focusout", "onBlur"),
            Lr(Cr, "onTransitionEnd"),
            u("onMouseEnter", ["mouseout", "mouseover"]),
            u("onMouseLeave", ["mouseout", "mouseover"]),
            u("onPointerEnter", ["pointerout", "pointerover"]),
            u("onPointerLeave", ["pointerout", "pointerover"]),
            l("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")),
            l("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),
            l("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]),
            l("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")),
            l("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")),
            l("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
            var Nr = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" ")
              , Ir = new Set("cancel close invalid load scroll toggle".split(" ").concat(Nr));
            function Or(e, t, n) {
                var r = e.type || "unknown-event";
                e.currentTarget = n,
                function(e, t, n, r, i, o, s, l, u) {
                    if (Ve.apply(this, arguments),
                    Ie) {
                        if (!Ie)
                            throw Error(a(198));
                        var c = Oe;
                        Ie = !1,
                        Oe = null,
                        Fe || (Fe = !0,
                        ze = c)
                    }
                }(r, t, void 0, e),
                e.currentTarget = null
            }
            function Fr(e, t) {
                t = 0 !== (4 & t);
                for (var n = 0; n < e.length; n++) {
                    var r = e[n]
                      , i = r.event;
                    r = r.listeners;
                    e: {
                        var a = void 0;
                        if (t)
                            for (var o = r.length - 1; 0 <= o; o--) {
                                var s = r[o]
                                  , l = s.instance
                                  , u = s.currentTarget;
                                if (s = s.listener,
                                l !== a && i.isPropagationStopped())
                                    break e;
                                Or(i, s, u),
                                a = l
                            }
                        else
                            for (o = 0; o < r.length; o++) {
                                if (l = (s = r[o]).instance,
                                u = s.currentTarget,
                                s = s.listener,
                                l !== a && i.isPropagationStopped())
                                    break e;
                                Or(i, s, u),
                                a = l
                            }
                    }
                }
                if (Fe)
                    throw e = ze,
                    Fe = !1,
                    ze = null,
                    e
            }
            function zr(e, t) {
                var n = t[mi];
                void 0 === n && (n = t[mi] = new Set);
                var r = e + "__bubble";
                n.has(r) || (Gr(t, e, 2, !1),
                n.add(r))
            }
            function Br(e, t, n) {
                var r = 0;
                t && (r |= 4),
                Gr(n, e, r, t)
            }
            var Vr = "_reactListening" + Math.random().toString(36).slice(2);
            function Hr(e) {
                if (!e[Vr]) {
                    e[Vr] = !0,
                    o.forEach((function(t) {
                        "selectionchange" !== t && (Ir.has(t) || Br(t, !1, e),
                        Br(t, !0, e))
                    }
                    ));
                    var t = 9 === e.nodeType ? e : e.ownerDocument;
                    null === t || t[Vr] || (t[Vr] = !0,
                    Br("selectionchange", !1, t))
                }
            }
            function Gr(e, t, n, r) {
                switch (Zt(t)) {
                case 1:
                    var i = Xt;
                    break;
                case 4:
                    i = jt;
                    break;
                default:
                    i = qt
                }
                n = i.bind(null, t, n, e),
                i = void 0,
                !Ue || "touchstart" !== t && "touchmove" !== t && "wheel" !== t || (i = !0),
                r ? void 0 !== i ? e.addEventListener(t, n, {
                    capture: !0,
                    passive: i
                }) : e.addEventListener(t, n, !0) : void 0 !== i ? e.addEventListener(t, n, {
                    passive: i
                }) : e.addEventListener(t, n, !1)
            }
            function Wr(e, t, n, r, i) {
                var a = r;
                if (0 === (1 & t) && 0 === (2 & t) && null !== r)
                    e: for (; ; ) {
                        if (null === r)
                            return;
                        var o = r.tag;
                        if (3 === o || 4 === o) {
                            var s = r.stateNode.containerInfo;
                            if (s === i || 8 === s.nodeType && s.parentNode === i)
                                break;
                            if (4 === o)
                                for (o = r.return; null !== o; ) {
                                    var l = o.tag;
                                    if ((3 === l || 4 === l) && ((l = o.stateNode.containerInfo) === i || 8 === l.nodeType && l.parentNode === i))
                                        return;
                                    o = o.return
                                }
                            for (; null !== s; ) {
                                if (null === (o = _i(s)))
                                    return;
                                if (5 === (l = o.tag) || 6 === l) {
                                    r = a = o;
                                    continue e
                                }
                                s = s.parentNode
                            }
                        }
                        r = r.return
                    }
                Pe((function() {
                    var r = a
                      , i = be(n)
                      , o = [];
                    e: {
                        var s = kr.get(e);
                        if (void 0 !== s) {
                            var l = cn
                              , u = e;
                            switch (e) {
                            case "keypress":
                                if (0 === tn(n))
                                    break e;
                            case "keydown":
                            case "keyup":
                                l = An;
                                break;
                            case "focusin":
                                u = "focus",
                                l = vn;
                                break;
                            case "focusout":
                                u = "blur",
                                l = vn;
                                break;
                            case "beforeblur":
                            case "afterblur":
                                l = vn;
                                break;
                            case "click":
                                if (2 === n.button)
                                    break e;
                            case "auxclick":
                            case "dblclick":
                            case "mousedown":
                            case "mousemove":
                            case "mouseup":
                            case "mouseout":
                            case "mouseover":
                            case "contextmenu":
                                l = pn;
                                break;
                            case "drag":
                            case "dragend":
                            case "dragenter":
                            case "dragexit":
                            case "dragleave":
                            case "dragover":
                            case "dragstart":
                            case "drop":
                                l = mn;
                                break;
                            case "touchcancel":
                            case "touchend":
                            case "touchmove":
                            case "touchstart":
                                l = Cn;
                                break;
                            case wr:
                            case Ar:
                            case Rr:
                                l = gn;
                                break;
                            case Cr:
                                l = kn;
                                break;
                            case "scroll":
                                l = fn;
                                break;
                            case "wheel":
                                l = Ln;
                                break;
                            case "copy":
                            case "cut":
                            case "paste":
                                l = yn;
                                break;
                            case "gotpointercapture":
                            case "lostpointercapture":
                            case "pointercancel":
                            case "pointerdown":
                            case "pointermove":
                            case "pointerout":
                            case "pointerover":
                            case "pointerup":
                                l = Rn
                            }
                            var c = 0 !== (4 & t)
                              , d = !c && "scroll" === e
                              , f = c ? null !== s ? s + "Capture" : null : s;
                            c = [];
                            for (var h, p = r; null !== p; ) {
                                var m = (h = p).stateNode;
                                if (5 === h.tag && null !== m && (h = m,
                                null !== f && (null != (m = Le(p, f)) && c.push(Xr(p, m, h)))),
                                d)
                                    break;
                                p = p.return
                            }
                            0 < c.length && (s = new l(s,u,null,n,i),
                            o.push({
                                event: s,
                                listeners: c
                            }))
                        }
                    }
                    if (0 === (7 & t)) {
                        if (l = "mouseout" === e || "pointerout" === e,
                        (!(s = "mouseover" === e || "pointerover" === e) || n === xe || !(u = n.relatedTarget || n.fromElement) || !_i(u) && !u[pi]) && (l || s) && (s = i.window === i ? i : (s = i.ownerDocument) ? s.defaultView || s.parentWindow : window,
                        l ? (l = r,
                        null !== (u = (u = n.relatedTarget || n.toElement) ? _i(u) : null) && (u !== (d = He(u)) || 5 !== u.tag && 6 !== u.tag) && (u = null)) : (l = null,
                        u = r),
                        l !== u)) {
                            if (c = pn,
                            m = "onMouseLeave",
                            f = "onMouseEnter",
                            p = "mouse",
                            "pointerout" !== e && "pointerover" !== e || (c = Rn,
                            m = "onPointerLeave",
                            f = "onPointerEnter",
                            p = "pointer"),
                            d = null == l ? s : xi(l),
                            h = null == u ? s : xi(u),
                            (s = new c(m,p + "leave",l,n,i)).target = d,
                            s.relatedTarget = h,
                            m = null,
                            _i(i) === r && ((c = new c(f,p + "enter",u,n,i)).target = h,
                            c.relatedTarget = d,
                            m = c),
                            d = m,
                            l && u)
                                e: {
                                    for (f = u,
                                    p = 0,
                                    h = c = l; h; h = qr(h))
                                        p++;
                                    for (h = 0,
                                    m = f; m; m = qr(m))
                                        h++;
                                    for (; 0 < p - h; )
                                        c = qr(c),
                                        p--;
                                    for (; 0 < h - p; )
                                        f = qr(f),
                                        h--;
                                    for (; p--; ) {
                                        if (c === f || null !== f && c === f.alternate)
                                            break e;
                                        c = qr(c),
                                        f = qr(f)
                                    }
                                    c = null
                                }
                            else
                                c = null;
                            null !== l && Yr(o, s, l, c, !1),
                            null !== u && null !== d && Yr(o, d, u, c, !0)
                        }
                        if ("select" === (l = (s = r ? xi(r) : window).nodeName && s.nodeName.toLowerCase()) || "input" === l && "file" === s.type)
                            var v = Zn;
                        else if (Wn(s))
                            if (Qn)
                                v = or;
                            else {
                                v = ir;
                                var g = rr
                            }
                        else
                            (l = s.nodeName) && "input" === l.toLowerCase() && ("checkbox" === s.type || "radio" === s.type) && (v = ar);
                        switch (v && (v = v(e, r)) ? Xn(o, v, n, i) : (g && g(e, s, r),
                        "focusout" === e && (g = s._wrapperState) && g.controlled && "number" === s.type && ee(s, "number", s.value)),
                        g = r ? xi(r) : window,
                        e) {
                        case "focusin":
                            (Wn(g) || "true" === g.contentEditable) && (vr = g,
                            gr = r,
                            _r = null);
                            break;
                        case "focusout":
                            _r = gr = vr = null;
                            break;
                        case "mousedown":
                            yr = !0;
                            break;
                        case "contextmenu":
                        case "mouseup":
                        case "dragend":
                            yr = !1,
                            xr(o, n, i);
                            break;
                        case "selectionchange":
                            if (mr)
                                break;
                        case "keydown":
                        case "keyup":
                            xr(o, n, i)
                        }
                        var _;
                        if (Dn)
                            e: {
                                switch (e) {
                                case "compositionstart":
                                    var y = "onCompositionStart";
                                    break e;
                                case "compositionend":
                                    y = "onCompositionEnd";
                                    break e;
                                case "compositionupdate":
                                    y = "onCompositionUpdate";
                                    break e
                                }
                                y = void 0
                            }
                        else
                            Hn ? Bn(e, n) && (y = "onCompositionEnd") : "keydown" === e && 229 === n.keyCode && (y = "onCompositionStart");
                        y && (On && "ko" !== n.locale && (Hn || "onCompositionStart" !== y ? "onCompositionEnd" === y && Hn && (_ = en()) : (Jt = "value"in (Qt = i) ? Qt.value : Qt.textContent,
                        Hn = !0)),
                        0 < (g = jr(r, y)).length && (y = new xn(y,e,null,n,i),
                        o.push({
                            event: y,
                            listeners: g
                        }),
                        _ ? y.data = _ : null !== (_ = Vn(n)) && (y.data = _))),
                        (_ = In ? function(e, t) {
                            switch (e) {
                            case "compositionend":
                                return Vn(t);
                            case "keypress":
                                return 32 !== t.which ? null : (zn = !0,
                                Fn);
                            case "textInput":
                                return (e = t.data) === Fn && zn ? null : e;
                            default:
                                return null
                            }
                        }(e, n) : function(e, t) {
                            if (Hn)
                                return "compositionend" === e || !Dn && Bn(e, t) ? (e = en(),
                                $t = Jt = Qt = null,
                                Hn = !1,
                                e) : null;
                            switch (e) {
                            case "paste":
                            default:
                                return null;
                            case "keypress":
                                if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                                    if (t.char && 1 < t.char.length)
                                        return t.char;
                                    if (t.which)
                                        return String.fromCharCode(t.which)
                                }
                                return null;
                            case "compositionend":
                                return On && "ko" !== t.locale ? null : t.data
                            }
                        }(e, n)) && (0 < (r = jr(r, "onBeforeInput")).length && (i = new xn("onBeforeInput","beforeinput",null,n,i),
                        o.push({
                            event: i,
                            listeners: r
                        }),
                        i.data = _))
                    }
                    Fr(o, t)
                }
                ))
            }
            function Xr(e, t, n) {
                return {
                    instance: e,
                    listener: t,
                    currentTarget: n
                }
            }
            function jr(e, t) {
                for (var n = t + "Capture", r = []; null !== e; ) {
                    var i = e
                      , a = i.stateNode;
                    5 === i.tag && null !== a && (i = a,
                    null != (a = Le(e, n)) && r.unshift(Xr(e, a, i)),
                    null != (a = Le(e, t)) && r.push(Xr(e, a, i))),
                    e = e.return
                }
                return r
            }
            function qr(e) {
                if (null === e)
                    return null;
                do {
                    e = e.return
                } while (e && 5 !== e.tag);
                return e || null
            }
            function Yr(e, t, n, r, i) {
                for (var a = t._reactName, o = []; null !== n && n !== r; ) {
                    var s = n
                      , l = s.alternate
                      , u = s.stateNode;
                    if (null !== l && l === r)
                        break;
                    5 === s.tag && null !== u && (s = u,
                    i ? null != (l = Le(n, a)) && o.unshift(Xr(n, l, s)) : i || null != (l = Le(n, a)) && o.push(Xr(n, l, s))),
                    n = n.return
                }
                0 !== o.length && e.push({
                    event: t,
                    listeners: o
                })
            }
            var Kr = /\r\n?/g
              , Zr = /\u0000|\uFFFD/g;
            function Qr(e) {
                return ("string" === typeof e ? e : "" + e).replace(Kr, "\n").replace(Zr, "")
            }
            function Jr(e, t, n) {
                if (t = Qr(t),
                Qr(e) !== t && n)
                    throw Error(a(425))
            }
            function $r() {}
            var ei = null
              , ti = null;
            function ni(e, t) {
                return "textarea" === e || "noscript" === e || "string" === typeof t.children || "number" === typeof t.children || "object" === typeof t.dangerouslySetInnerHTML && null !== t.dangerouslySetInnerHTML && null != t.dangerouslySetInnerHTML.__html
            }
            var ri = "function" === typeof setTimeout ? setTimeout : void 0
              , ii = "function" === typeof clearTimeout ? clearTimeout : void 0
              , ai = "function" === typeof Promise ? Promise : void 0
              , oi = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof ai ? function(e) {
                return ai.resolve(null).then(e).catch(si)
            }
            : ri;
            function si(e) {
                setTimeout((function() {
                    throw e
                }
                ))
            }
            function li(e, t) {
                var n = t
                  , r = 0;
                do {
                    var i = n.nextSibling;
                    if (e.removeChild(n),
                    i && 8 === i.nodeType)
                        if ("/$" === (n = i.data)) {
                            if (0 === r)
                                return e.removeChild(i),
                                void Ht(t);
                            r--
                        } else
                            "$" !== n && "$?" !== n && "$!" !== n || r++;
                    n = i
                } while (n);
                Ht(t)
            }
            function ui(e) {
                for (; null != e; e = e.nextSibling) {
                    var t = e.nodeType;
                    if (1 === t || 3 === t)
                        break;
                    if (8 === t) {
                        if ("$" === (t = e.data) || "$!" === t || "$?" === t)
                            break;
                        if ("/$" === t)
                            return null
                    }
                }
                return e
            }
            function ci(e) {
                e = e.previousSibling;
                for (var t = 0; e; ) {
                    if (8 === e.nodeType) {
                        var n = e.data;
                        if ("$" === n || "$!" === n || "$?" === n) {
                            if (0 === t)
                                return e;
                            t--
                        } else
                            "/$" === n && t++
                    }
                    e = e.previousSibling
                }
                return null
            }
            var di = Math.random().toString(36).slice(2)
              , fi = "__reactFiber$" + di
              , hi = "__reactProps$" + di
              , pi = "__reactContainer$" + di
              , mi = "__reactEvents$" + di
              , vi = "__reactListeners$" + di
              , gi = "__reactHandles$" + di;
            function _i(e) {
                var t = e[fi];
                if (t)
                    return t;
                for (var n = e.parentNode; n; ) {
                    if (t = n[pi] || n[fi]) {
                        if (n = t.alternate,
                        null !== t.child || null !== n && null !== n.child)
                            for (e = ci(e); null !== e; ) {
                                if (n = e[fi])
                                    return n;
                                e = ci(e)
                            }
                        return t
                    }
                    n = (e = n).parentNode
                }
                return null
            }
            function yi(e) {
                return !(e = e[fi] || e[pi]) || 5 !== e.tag && 6 !== e.tag && 13 !== e.tag && 3 !== e.tag ? null : e
            }
            function xi(e) {
                if (5 === e.tag || 6 === e.tag)
                    return e.stateNode;
                throw Error(a(33))
            }
            function bi(e) {
                return e[hi] || null
            }
            var Si = []
              , Mi = -1;
            function Ei(e) {
                return {
                    current: e
                }
            }
            function Ti(e) {
                0 > Mi || (e.current = Si[Mi],
                Si[Mi] = null,
                Mi--)
            }
            function wi(e, t) {
                Mi++,
                Si[Mi] = e.current,
                e.current = t
            }
            var Ai = {}
              , Ri = Ei(Ai)
              , Ci = Ei(!1)
              , ki = Ai;
            function Pi(e, t) {
                var n = e.type.contextTypes;
                if (!n)
                    return Ai;
                var r = e.stateNode;
                if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
                    return r.__reactInternalMemoizedMaskedChildContext;
                var i, a = {};
                for (i in n)
                    a[i] = t[i];
                return r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = t,
                e.__reactInternalMemoizedMaskedChildContext = a),
                a
            }
            function Li(e) {
                return null !== (e = e.childContextTypes) && void 0 !== e
            }
            function Ui() {
                Ti(Ci),
                Ti(Ri)
            }
            function Di(e, t, n) {
                if (Ri.current !== Ai)
                    throw Error(a(168));
                wi(Ri, t),
                wi(Ci, n)
            }
            function Ni(e, t, n) {
                var r = e.stateNode;
                if (t = t.childContextTypes,
                "function" !== typeof r.getChildContext)
                    return n;
                for (var i in r = r.getChildContext())
                    if (!(i in t))
                        throw Error(a(108, G(e) || "Unknown", i));
                return O({}, n, r)
            }
            function Ii(e) {
                return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || Ai,
                ki = Ri.current,
                wi(Ri, e),
                wi(Ci, Ci.current),
                !0
            }
            function Oi(e, t, n) {
                var r = e.stateNode;
                if (!r)
                    throw Error(a(169));
                n ? (e = Ni(e, t, ki),
                r.__reactInternalMemoizedMergedChildContext = e,
                Ti(Ci),
                Ti(Ri),
                wi(Ri, e)) : Ti(Ci),
                wi(Ci, n)
            }
            var Fi = null
              , zi = !1
              , Bi = !1;
            function Vi(e) {
                null === Fi ? Fi = [e] : Fi.push(e)
            }
            function Hi() {
                if (!Bi && null !== Fi) {
                    Bi = !0;
                    var e = 0
                      , t = yt;
                    try {
                        var n = Fi;
                        for (yt = 1; e < n.length; e++) {
                            var r = n[e];
                            do {
                                r = r(!0)
                            } while (null !== r)
                        }
                        Fi = null,
                        zi = !1
                    } catch (i) {
                        throw null !== Fi && (Fi = Fi.slice(e + 1)),
                        qe($e, Hi),
                        i
                    } finally {
                        yt = t,
                        Bi = !1
                    }
                }
                return null
            }
            var Gi = []
              , Wi = 0
              , Xi = null
              , ji = 0
              , qi = []
              , Yi = 0
              , Ki = null
              , Zi = 1
              , Qi = "";
            function Ji(e, t) {
                Gi[Wi++] = ji,
                Gi[Wi++] = Xi,
                Xi = e,
                ji = t
            }
            function $i(e, t, n) {
                qi[Yi++] = Zi,
                qi[Yi++] = Qi,
                qi[Yi++] = Ki,
                Ki = e;
                var r = Zi;
                e = Qi;
                var i = 32 - ot(r) - 1;
                r &= ~(1 << i),
                n += 1;
                var a = 32 - ot(t) + i;
                if (30 < a) {
                    var o = i - i % 5;
                    a = (r & (1 << o) - 1).toString(32),
                    r >>= o,
                    i -= o,
                    Zi = 1 << 32 - ot(t) + i | n << i | r,
                    Qi = a + e
                } else
                    Zi = 1 << a | n << i | r,
                    Qi = e
            }
            function ea(e) {
                null !== e.return && (Ji(e, 1),
                $i(e, 1, 0))
            }
            function ta(e) {
                for (; e === Xi; )
                    Xi = Gi[--Wi],
                    Gi[Wi] = null,
                    ji = Gi[--Wi],
                    Gi[Wi] = null;
                for (; e === Ki; )
                    Ki = qi[--Yi],
                    qi[Yi] = null,
                    Qi = qi[--Yi],
                    qi[Yi] = null,
                    Zi = qi[--Yi],
                    qi[Yi] = null
            }
            var na = null
              , ra = null
              , ia = !1
              , aa = null;
            function oa(e, t) {
                var n = Pu(5, null, null, 0);
                n.elementType = "DELETED",
                n.stateNode = t,
                n.return = e,
                null === (t = e.deletions) ? (e.deletions = [n],
                e.flags |= 16) : t.push(n)
            }
            function sa(e, t) {
                switch (e.tag) {
                case 5:
                    var n = e.type;
                    return null !== (t = 1 !== t.nodeType || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t) && (e.stateNode = t,
                    na = e,
                    ra = ui(t.firstChild),
                    !0);
                case 6:
                    return null !== (t = "" === e.pendingProps || 3 !== t.nodeType ? null : t) && (e.stateNode = t,
                    na = e,
                    ra = null,
                    !0);
                case 13:
                    return null !== (t = 8 !== t.nodeType ? null : t) && (n = null !== Ki ? {
                        id: Zi,
                        overflow: Qi
                    } : null,
                    e.memoizedState = {
                        dehydrated: t,
                        treeContext: n,
                        retryLane: 1073741824
                    },
                    (n = Pu(18, null, null, 0)).stateNode = t,
                    n.return = e,
                    e.child = n,
                    na = e,
                    ra = null,
                    !0);
                default:
                    return !1
                }
            }
            function la(e) {
                return 0 !== (1 & e.mode) && 0 === (128 & e.flags)
            }
            function ua(e) {
                if (ia) {
                    var t = ra;
                    if (t) {
                        var n = t;
                        if (!sa(e, t)) {
                            if (la(e))
                                throw Error(a(418));
                            t = ui(n.nextSibling);
                            var r = na;
                            t && sa(e, t) ? oa(r, n) : (e.flags = -4097 & e.flags | 2,
                            ia = !1,
                            na = e)
                        }
                    } else {
                        if (la(e))
                            throw Error(a(418));
                        e.flags = -4097 & e.flags | 2,
                        ia = !1,
                        na = e
                    }
                }
            }
            function ca(e) {
                for (e = e.return; null !== e && 5 !== e.tag && 3 !== e.tag && 13 !== e.tag; )
                    e = e.return;
                na = e
            }
            function da(e) {
                if (e !== na)
                    return !1;
                if (!ia)
                    return ca(e),
                    ia = !0,
                    !1;
                var t;
                if ((t = 3 !== e.tag) && !(t = 5 !== e.tag) && (t = "head" !== (t = e.type) && "body" !== t && !ni(e.type, e.memoizedProps)),
                t && (t = ra)) {
                    if (la(e))
                        throw fa(),
                        Error(a(418));
                    for (; t; )
                        oa(e, t),
                        t = ui(t.nextSibling)
                }
                if (ca(e),
                13 === e.tag) {
                    if (!(e = null !== (e = e.memoizedState) ? e.dehydrated : null))
                        throw Error(a(317));
                    e: {
                        for (e = e.nextSibling,
                        t = 0; e; ) {
                            if (8 === e.nodeType) {
                                var n = e.data;
                                if ("/$" === n) {
                                    if (0 === t) {
                                        ra = ui(e.nextSibling);
                                        break e
                                    }
                                    t--
                                } else
                                    "$" !== n && "$!" !== n && "$?" !== n || t++
                            }
                            e = e.nextSibling
                        }
                        ra = null
                    }
                } else
                    ra = na ? ui(e.stateNode.nextSibling) : null;
                return !0
            }
            function fa() {
                for (var e = ra; e; )
                    e = ui(e.nextSibling)
            }
            function ha() {
                ra = na = null,
                ia = !1
            }
            function pa(e) {
                null === aa ? aa = [e] : aa.push(e)
            }
            var ma = x.ReactCurrentBatchConfig;
            function va(e, t) {
                if (e && e.defaultProps) {
                    for (var n in t = O({}, t),
                    e = e.defaultProps)
                        void 0 === t[n] && (t[n] = e[n]);
                    return t
                }
                return t
            }
            var ga = Ei(null)
              , _a = null
              , ya = null
              , xa = null;
            function ba() {
                xa = ya = _a = null
            }
            function Sa(e) {
                var t = ga.current;
                Ti(ga),
                e._currentValue = t
            }
            function Ma(e, t, n) {
                for (; null !== e; ) {
                    var r = e.alternate;
                    if ((e.childLanes & t) !== t ? (e.childLanes |= t,
                    null !== r && (r.childLanes |= t)) : null !== r && (r.childLanes & t) !== t && (r.childLanes |= t),
                    e === n)
                        break;
                    e = e.return
                }
            }
            function Ea(e, t) {
                _a = e,
                xa = ya = null,
                null !== (e = e.dependencies) && null !== e.firstContext && (0 !== (e.lanes & t) && (xs = !0),
                e.firstContext = null)
            }
            function Ta(e) {
                var t = e._currentValue;
                if (xa !== e)
                    if (e = {
                        context: e,
                        memoizedValue: t,
                        next: null
                    },
                    null === ya) {
                        if (null === _a)
                            throw Error(a(308));
                        ya = e,
                        _a.dependencies = {
                            lanes: 0,
                            firstContext: e
                        }
                    } else
                        ya = ya.next = e;
                return t
            }
            var wa = null;
            function Aa(e) {
                null === wa ? wa = [e] : wa.push(e)
            }
            function Ra(e, t, n, r) {
                var i = t.interleaved;
                return null === i ? (n.next = n,
                Aa(t)) : (n.next = i.next,
                i.next = n),
                t.interleaved = n,
                Ca(e, r)
            }
            function Ca(e, t) {
                e.lanes |= t;
                var n = e.alternate;
                for (null !== n && (n.lanes |= t),
                n = e,
                e = e.return; null !== e; )
                    e.childLanes |= t,
                    null !== (n = e.alternate) && (n.childLanes |= t),
                    n = e,
                    e = e.return;
                return 3 === n.tag ? n.stateNode : null
            }
            var ka = !1;
            function Pa(e) {
                e.updateQueue = {
                    baseState: e.memoizedState,
                    firstBaseUpdate: null,
                    lastBaseUpdate: null,
                    shared: {
                        pending: null,
                        interleaved: null,
                        lanes: 0
                    },
                    effects: null
                }
            }
            function La(e, t) {
                e = e.updateQueue,
                t.updateQueue === e && (t.updateQueue = {
                    baseState: e.baseState,
                    firstBaseUpdate: e.firstBaseUpdate,
                    lastBaseUpdate: e.lastBaseUpdate,
                    shared: e.shared,
                    effects: e.effects
                })
            }
            function Ua(e, t) {
                return {
                    eventTime: e,
                    lane: t,
                    tag: 0,
                    payload: null,
                    callback: null,
                    next: null
                }
            }
            function Da(e, t, n) {
                var r = e.updateQueue;
                if (null === r)
                    return null;
                if (r = r.shared,
                0 !== (2 & Rl)) {
                    var i = r.pending;
                    return null === i ? t.next = t : (t.next = i.next,
                    i.next = t),
                    r.pending = t,
                    Ca(e, n)
                }
                return null === (i = r.interleaved) ? (t.next = t,
                Aa(r)) : (t.next = i.next,
                i.next = t),
                r.interleaved = t,
                Ca(e, n)
            }
            function Na(e, t, n) {
                if (null !== (t = t.updateQueue) && (t = t.shared,
                0 !== (4194240 & n))) {
                    var r = t.lanes;
                    n |= r &= e.pendingLanes,
                    t.lanes = n,
                    _t(e, n)
                }
            }
            function Ia(e, t) {
                var n = e.updateQueue
                  , r = e.alternate;
                if (null !== r && n === (r = r.updateQueue)) {
                    var i = null
                      , a = null;
                    if (null !== (n = n.firstBaseUpdate)) {
                        do {
                            var o = {
                                eventTime: n.eventTime,
                                lane: n.lane,
                                tag: n.tag,
                                payload: n.payload,
                                callback: n.callback,
                                next: null
                            };
                            null === a ? i = a = o : a = a.next = o,
                            n = n.next
                        } while (null !== n);
                        null === a ? i = a = t : a = a.next = t
                    } else
                        i = a = t;
                    return n = {
                        baseState: r.baseState,
                        firstBaseUpdate: i,
                        lastBaseUpdate: a,
                        shared: r.shared,
                        effects: r.effects
                    },
                    void (e.updateQueue = n)
                }
                null === (e = n.lastBaseUpdate) ? n.firstBaseUpdate = t : e.next = t,
                n.lastBaseUpdate = t
            }
            function Oa(e, t, n, r) {
                var i = e.updateQueue;
                ka = !1;
                var a = i.firstBaseUpdate
                  , o = i.lastBaseUpdate
                  , s = i.shared.pending;
                if (null !== s) {
                    i.shared.pending = null;
                    var l = s
                      , u = l.next;
                    l.next = null,
                    null === o ? a = u : o.next = u,
                    o = l;
                    var c = e.alternate;
                    null !== c && ((s = (c = c.updateQueue).lastBaseUpdate) !== o && (null === s ? c.firstBaseUpdate = u : s.next = u,
                    c.lastBaseUpdate = l))
                }
                if (null !== a) {
                    var d = i.baseState;
                    for (o = 0,
                    c = u = l = null,
                    s = a; ; ) {
                        var f = s.lane
                          , h = s.eventTime;
                        if ((r & f) === f) {
                            null !== c && (c = c.next = {
                                eventTime: h,
                                lane: 0,
                                tag: s.tag,
                                payload: s.payload,
                                callback: s.callback,
                                next: null
                            });
                            e: {
                                var p = e
                                  , m = s;
                                switch (f = t,
                                h = n,
                                m.tag) {
                                case 1:
                                    if ("function" === typeof (p = m.payload)) {
                                        d = p.call(h, d, f);
                                        break e
                                    }
                                    d = p;
                                    break e;
                                case 3:
                                    p.flags = -65537 & p.flags | 128;
                                case 0:
                                    if (null === (f = "function" === typeof (p = m.payload) ? p.call(h, d, f) : p) || void 0 === f)
                                        break e;
                                    d = O({}, d, f);
                                    break e;
                                case 2:
                                    ka = !0
                                }
                            }
                            null !== s.callback && 0 !== s.lane && (e.flags |= 64,
                            null === (f = i.effects) ? i.effects = [s] : f.push(s))
                        } else
                            h = {
                                eventTime: h,
                                lane: f,
                                tag: s.tag,
                                payload: s.payload,
                                callback: s.callback,
                                next: null
                            },
                            null === c ? (u = c = h,
                            l = d) : c = c.next = h,
                            o |= f;
                        if (null === (s = s.next)) {
                            if (null === (s = i.shared.pending))
                                break;
                            s = (f = s).next,
                            f.next = null,
                            i.lastBaseUpdate = f,
                            i.shared.pending = null
                        }
                    }
                    if (null === c && (l = d),
                    i.baseState = l,
                    i.firstBaseUpdate = u,
                    i.lastBaseUpdate = c,
                    null !== (t = i.shared.interleaved)) {
                        i = t;
                        do {
                            o |= i.lane,
                            i = i.next
                        } while (i !== t)
                    } else
                        null === a && (i.shared.lanes = 0);
                    Il |= o,
                    e.lanes = o,
                    e.memoizedState = d
                }
            }
            function Fa(e, t, n) {
                if (e = t.effects,
                t.effects = null,
                null !== e)
                    for (t = 0; t < e.length; t++) {
                        var r = e[t]
                          , i = r.callback;
                        if (null !== i) {
                            if (r.callback = null,
                            r = n,
                            "function" !== typeof i)
                                throw Error(a(191, i));
                            i.call(r)
                        }
                    }
            }
            var za = (new r.Component).refs;
            function Ba(e, t, n, r) {
                n = null === (n = n(r, t = e.memoizedState)) || void 0 === n ? t : O({}, t, n),
                e.memoizedState = n,
                0 === e.lanes && (e.updateQueue.baseState = n)
            }
            var Va = {
                isMounted: function(e) {
                    return !!(e = e._reactInternals) && He(e) === e
                },
                enqueueSetState: function(e, t, n) {
                    e = e._reactInternals;
                    var r = eu()
                      , i = tu(e)
                      , a = Ua(r, i);
                    a.payload = t,
                    void 0 !== n && null !== n && (a.callback = n),
                    null !== (t = Da(e, a, i)) && (nu(t, e, i, r),
                    Na(t, e, i))
                },
                enqueueReplaceState: function(e, t, n) {
                    e = e._reactInternals;
                    var r = eu()
                      , i = tu(e)
                      , a = Ua(r, i);
                    a.tag = 1,
                    a.payload = t,
                    void 0 !== n && null !== n && (a.callback = n),
                    null !== (t = Da(e, a, i)) && (nu(t, e, i, r),
                    Na(t, e, i))
                },
                enqueueForceUpdate: function(e, t) {
                    e = e._reactInternals;
                    var n = eu()
                      , r = tu(e)
                      , i = Ua(n, r);
                    i.tag = 2,
                    void 0 !== t && null !== t && (i.callback = t),
                    null !== (t = Da(e, i, r)) && (nu(t, e, r, n),
                    Na(t, e, r))
                }
            };
            function Ha(e, t, n, r, i, a, o) {
                return "function" === typeof (e = e.stateNode).shouldComponentUpdate ? e.shouldComponentUpdate(r, a, o) : !t.prototype || !t.prototype.isPureReactComponent || (!lr(n, r) || !lr(i, a))
            }
            function Ga(e, t, n) {
                var r = !1
                  , i = Ai
                  , a = t.contextType;
                return "object" === typeof a && null !== a ? a = Ta(a) : (i = Li(t) ? ki : Ri.current,
                a = (r = null !== (r = t.contextTypes) && void 0 !== r) ? Pi(e, i) : Ai),
                t = new t(n,a),
                e.memoizedState = null !== t.state && void 0 !== t.state ? t.state : null,
                t.updater = Va,
                e.stateNode = t,
                t._reactInternals = e,
                r && ((e = e.stateNode).__reactInternalMemoizedUnmaskedChildContext = i,
                e.__reactInternalMemoizedMaskedChildContext = a),
                t
            }
            function Wa(e, t, n, r) {
                e = t.state,
                "function" === typeof t.componentWillReceiveProps && t.componentWillReceiveProps(n, r),
                "function" === typeof t.UNSAFE_componentWillReceiveProps && t.UNSAFE_componentWillReceiveProps(n, r),
                t.state !== e && Va.enqueueReplaceState(t, t.state, null)
            }
            function Xa(e, t, n, r) {
                var i = e.stateNode;
                i.props = n,
                i.state = e.memoizedState,
                i.refs = za,
                Pa(e);
                var a = t.contextType;
                "object" === typeof a && null !== a ? i.context = Ta(a) : (a = Li(t) ? ki : Ri.current,
                i.context = Pi(e, a)),
                i.state = e.memoizedState,
                "function" === typeof (a = t.getDerivedStateFromProps) && (Ba(e, t, a, n),
                i.state = e.memoizedState),
                "function" === typeof t.getDerivedStateFromProps || "function" === typeof i.getSnapshotBeforeUpdate || "function" !== typeof i.UNSAFE_componentWillMount && "function" !== typeof i.componentWillMount || (t = i.state,
                "function" === typeof i.componentWillMount && i.componentWillMount(),
                "function" === typeof i.UNSAFE_componentWillMount && i.UNSAFE_componentWillMount(),
                t !== i.state && Va.enqueueReplaceState(i, i.state, null),
                Oa(e, n, i, r),
                i.state = e.memoizedState),
                "function" === typeof i.componentDidMount && (e.flags |= 4194308)
            }
            function ja(e, t, n) {
                if (null !== (e = n.ref) && "function" !== typeof e && "object" !== typeof e) {
                    if (n._owner) {
                        if (n = n._owner) {
                            if (1 !== n.tag)
                                throw Error(a(309));
                            var r = n.stateNode
                        }
                        if (!r)
                            throw Error(a(147, e));
                        var i = r
                          , o = "" + e;
                        return null !== t && null !== t.ref && "function" === typeof t.ref && t.ref._stringRef === o ? t.ref : (t = function(e) {
                            var t = i.refs;
                            t === za && (t = i.refs = {}),
                            null === e ? delete t[o] : t[o] = e
                        }
                        ,
                        t._stringRef = o,
                        t)
                    }
                    if ("string" !== typeof e)
                        throw Error(a(284));
                    if (!n._owner)
                        throw Error(a(290, e))
                }
                return e
            }
            function qa(e, t) {
                throw e = Object.prototype.toString.call(t),
                Error(a(31, "[object Object]" === e ? "object with keys {" + Object.keys(t).join(", ") + "}" : e))
            }
            function Ya(e) {
                return (0,
                e._init)(e._payload)
            }
            function Ka(e) {
                function t(t, n) {
                    if (e) {
                        var r = t.deletions;
                        null === r ? (t.deletions = [n],
                        t.flags |= 16) : r.push(n)
                    }
                }
                function n(n, r) {
                    if (!e)
                        return null;
                    for (; null !== r; )
                        t(n, r),
                        r = r.sibling;
                    return null
                }
                function r(e, t) {
                    for (e = new Map; null !== t; )
                        null !== t.key ? e.set(t.key, t) : e.set(t.index, t),
                        t = t.sibling;
                    return e
                }
                function i(e, t) {
                    return (e = Uu(e, t)).index = 0,
                    e.sibling = null,
                    e
                }
                function o(t, n, r) {
                    return t.index = r,
                    e ? null !== (r = t.alternate) ? (r = r.index) < n ? (t.flags |= 2,
                    n) : r : (t.flags |= 2,
                    n) : (t.flags |= 1048576,
                    n)
                }
                function s(t) {
                    return e && null === t.alternate && (t.flags |= 2),
                    t
                }
                function l(e, t, n, r) {
                    return null === t || 6 !== t.tag ? ((t = Ou(n, e.mode, r)).return = e,
                    t) : ((t = i(t, n)).return = e,
                    t)
                }
                function u(e, t, n, r) {
                    var a = n.type;
                    return a === M ? d(e, t, n.props.children, r, n.key) : null !== t && (t.elementType === a || "object" === typeof a && null !== a && a.$$typeof === L && Ya(a) === t.type) ? ((r = i(t, n.props)).ref = ja(e, t, n),
                    r.return = e,
                    r) : ((r = Du(n.type, n.key, n.props, null, e.mode, r)).ref = ja(e, t, n),
                    r.return = e,
                    r)
                }
                function c(e, t, n, r) {
                    return null === t || 4 !== t.tag || t.stateNode.containerInfo !== n.containerInfo || t.stateNode.implementation !== n.implementation ? ((t = Fu(n, e.mode, r)).return = e,
                    t) : ((t = i(t, n.children || [])).return = e,
                    t)
                }
                function d(e, t, n, r, a) {
                    return null === t || 7 !== t.tag ? ((t = Nu(n, e.mode, r, a)).return = e,
                    t) : ((t = i(t, n)).return = e,
                    t)
                }
                function f(e, t, n) {
                    if ("string" === typeof t && "" !== t || "number" === typeof t)
                        return (t = Ou("" + t, e.mode, n)).return = e,
                        t;
                    if ("object" === typeof t && null !== t) {
                        switch (t.$$typeof) {
                        case b:
                            return (n = Du(t.type, t.key, t.props, null, e.mode, n)).ref = ja(e, null, t),
                            n.return = e,
                            n;
                        case S:
                            return (t = Fu(t, e.mode, n)).return = e,
                            t;
                        case L:
                            return f(e, (0,
                            t._init)(t._payload), n)
                        }
                        if (te(t) || N(t))
                            return (t = Nu(t, e.mode, n, null)).return = e,
                            t;
                        qa(e, t)
                    }
                    return null
                }
                function h(e, t, n, r) {
                    var i = null !== t ? t.key : null;
                    if ("string" === typeof n && "" !== n || "number" === typeof n)
                        return null !== i ? null : l(e, t, "" + n, r);
                    if ("object" === typeof n && null !== n) {
                        switch (n.$$typeof) {
                        case b:
                            return n.key === i ? u(e, t, n, r) : null;
                        case S:
                            return n.key === i ? c(e, t, n, r) : null;
                        case L:
                            return h(e, t, (i = n._init)(n._payload), r)
                        }
                        if (te(n) || N(n))
                            return null !== i ? null : d(e, t, n, r, null);
                        qa(e, n)
                    }
                    return null
                }
                function p(e, t, n, r, i) {
                    if ("string" === typeof r && "" !== r || "number" === typeof r)
                        return l(t, e = e.get(n) || null, "" + r, i);
                    if ("object" === typeof r && null !== r) {
                        switch (r.$$typeof) {
                        case b:
                            return u(t, e = e.get(null === r.key ? n : r.key) || null, r, i);
                        case S:
                            return c(t, e = e.get(null === r.key ? n : r.key) || null, r, i);
                        case L:
                            return p(e, t, n, (0,
                            r._init)(r._payload), i)
                        }
                        if (te(r) || N(r))
                            return d(t, e = e.get(n) || null, r, i, null);
                        qa(t, r)
                    }
                    return null
                }
                function m(i, a, s, l) {
                    for (var u = null, c = null, d = a, m = a = 0, v = null; null !== d && m < s.length; m++) {
                        d.index > m ? (v = d,
                        d = null) : v = d.sibling;
                        var g = h(i, d, s[m], l);
                        if (null === g) {
                            null === d && (d = v);
                            break
                        }
                        e && d && null === g.alternate && t(i, d),
                        a = o(g, a, m),
                        null === c ? u = g : c.sibling = g,
                        c = g,
                        d = v
                    }
                    if (m === s.length)
                        return n(i, d),
                        ia && Ji(i, m),
                        u;
                    if (null === d) {
                        for (; m < s.length; m++)
                            null !== (d = f(i, s[m], l)) && (a = o(d, a, m),
                            null === c ? u = d : c.sibling = d,
                            c = d);
                        return ia && Ji(i, m),
                        u
                    }
                    for (d = r(i, d); m < s.length; m++)
                        null !== (v = p(d, i, m, s[m], l)) && (e && null !== v.alternate && d.delete(null === v.key ? m : v.key),
                        a = o(v, a, m),
                        null === c ? u = v : c.sibling = v,
                        c = v);
                    return e && d.forEach((function(e) {
                        return t(i, e)
                    }
                    )),
                    ia && Ji(i, m),
                    u
                }
                function v(i, s, l, u) {
                    var c = N(l);
                    if ("function" !== typeof c)
                        throw Error(a(150));
                    if (null == (l = c.call(l)))
                        throw Error(a(151));
                    for (var d = c = null, m = s, v = s = 0, g = null, _ = l.next(); null !== m && !_.done; v++,
                    _ = l.next()) {
                        m.index > v ? (g = m,
                        m = null) : g = m.sibling;
                        var y = h(i, m, _.value, u);
                        if (null === y) {
                            null === m && (m = g);
                            break
                        }
                        e && m && null === y.alternate && t(i, m),
                        s = o(y, s, v),
                        null === d ? c = y : d.sibling = y,
                        d = y,
                        m = g
                    }
                    if (_.done)
                        return n(i, m),
                        ia && Ji(i, v),
                        c;
                    if (null === m) {
                        for (; !_.done; v++,
                        _ = l.next())
                            null !== (_ = f(i, _.value, u)) && (s = o(_, s, v),
                            null === d ? c = _ : d.sibling = _,
                            d = _);
                        return ia && Ji(i, v),
                        c
                    }
                    for (m = r(i, m); !_.done; v++,
                    _ = l.next())
                        null !== (_ = p(m, i, v, _.value, u)) && (e && null !== _.alternate && m.delete(null === _.key ? v : _.key),
                        s = o(_, s, v),
                        null === d ? c = _ : d.sibling = _,
                        d = _);
                    return e && m.forEach((function(e) {
                        return t(i, e)
                    }
                    )),
                    ia && Ji(i, v),
                    c
                }
                return function e(r, a, o, l) {
                    if ("object" === typeof o && null !== o && o.type === M && null === o.key && (o = o.props.children),
                    "object" === typeof o && null !== o) {
                        switch (o.$$typeof) {
                        case b:
                            e: {
                                for (var u = o.key, c = a; null !== c; ) {
                                    if (c.key === u) {
                                        if ((u = o.type) === M) {
                                            if (7 === c.tag) {
                                                n(r, c.sibling),
                                                (a = i(c, o.props.children)).return = r,
                                                r = a;
                                                break e
                                            }
                                        } else if (c.elementType === u || "object" === typeof u && null !== u && u.$$typeof === L && Ya(u) === c.type) {
                                            n(r, c.sibling),
                                            (a = i(c, o.props)).ref = ja(r, c, o),
                                            a.return = r,
                                            r = a;
                                            break e
                                        }
                                        n(r, c);
                                        break
                                    }
                                    t(r, c),
                                    c = c.sibling
                                }
                                o.type === M ? ((a = Nu(o.props.children, r.mode, l, o.key)).return = r,
                                r = a) : ((l = Du(o.type, o.key, o.props, null, r.mode, l)).ref = ja(r, a, o),
                                l.return = r,
                                r = l)
                            }
                            return s(r);
                        case S:
                            e: {
                                for (c = o.key; null !== a; ) {
                                    if (a.key === c) {
                                        if (4 === a.tag && a.stateNode.containerInfo === o.containerInfo && a.stateNode.implementation === o.implementation) {
                                            n(r, a.sibling),
                                            (a = i(a, o.children || [])).return = r,
                                            r = a;
                                            break e
                                        }
                                        n(r, a);
                                        break
                                    }
                                    t(r, a),
                                    a = a.sibling
                                }
                                (a = Fu(o, r.mode, l)).return = r,
                                r = a
                            }
                            return s(r);
                        case L:
                            return e(r, a, (c = o._init)(o._payload), l)
                        }
                        if (te(o))
                            return m(r, a, o, l);
                        if (N(o))
                            return v(r, a, o, l);
                        qa(r, o)
                    }
                    return "string" === typeof o && "" !== o || "number" === typeof o ? (o = "" + o,
                    null !== a && 6 === a.tag ? (n(r, a.sibling),
                    (a = i(a, o)).return = r,
                    r = a) : (n(r, a),
                    (a = Ou(o, r.mode, l)).return = r,
                    r = a),
                    s(r)) : n(r, a)
                }
            }
            var Za = Ka(!0)
              , Qa = Ka(!1)
              , Ja = {}
              , $a = Ei(Ja)
              , eo = Ei(Ja)
              , to = Ei(Ja);
            function no(e) {
                if (e === Ja)
                    throw Error(a(174));
                return e
            }
            function ro(e, t) {
                switch (wi(to, t),
                wi(eo, e),
                wi($a, Ja),
                e = t.nodeType) {
                case 9:
                case 11:
                    t = (t = t.documentElement) ? t.namespaceURI : le(null, "");
                    break;
                default:
                    t = le(t = (e = 8 === e ? t.parentNode : t).namespaceURI || null, e = e.tagName)
                }
                Ti($a),
                wi($a, t)
            }
            function io() {
                Ti($a),
                Ti(eo),
                Ti(to)
            }
            function ao(e) {
                no(to.current);
                var t = no($a.current)
                  , n = le(t, e.type);
                t !== n && (wi(eo, e),
                wi($a, n))
            }
            function oo(e) {
                eo.current === e && (Ti($a),
                Ti(eo))
            }
            var so = Ei(0);
            function lo(e) {
                for (var t = e; null !== t; ) {
                    if (13 === t.tag) {
                        var n = t.memoizedState;
                        if (null !== n && (null === (n = n.dehydrated) || "$?" === n.data || "$!" === n.data))
                            return t
                    } else if (19 === t.tag && void 0 !== t.memoizedProps.revealOrder) {
                        if (0 !== (128 & t.flags))
                            return t
                    } else if (null !== t.child) {
                        t.child.return = t,
                        t = t.child;
                        continue
                    }
                    if (t === e)
                        break;
                    for (; null === t.sibling; ) {
                        if (null === t.return || t.return === e)
                            return null;
                        t = t.return
                    }
                    t.sibling.return = t.return,
                    t = t.sibling
                }
                return null
            }
            var uo = [];
            function co() {
                for (var e = 0; e < uo.length; e++)
                    uo[e]._workInProgressVersionPrimary = null;
                uo.length = 0
            }
            var fo = x.ReactCurrentDispatcher
              , ho = x.ReactCurrentBatchConfig
              , po = 0
              , mo = null
              , vo = null
              , go = null
              , _o = !1
              , yo = !1
              , xo = 0
              , bo = 0;
            function So() {
                throw Error(a(321))
            }
            function Mo(e, t) {
                if (null === t)
                    return !1;
                for (var n = 0; n < t.length && n < e.length; n++)
                    if (!sr(e[n], t[n]))
                        return !1;
                return !0
            }
            function Eo(e, t, n, r, i, o) {
                if (po = o,
                mo = t,
                t.memoizedState = null,
                t.updateQueue = null,
                t.lanes = 0,
                fo.current = null === e || null === e.memoizedState ? ss : ls,
                e = n(r, i),
                yo) {
                    o = 0;
                    do {
                        if (yo = !1,
                        xo = 0,
                        25 <= o)
                            throw Error(a(301));
                        o += 1,
                        go = vo = null,
                        t.updateQueue = null,
                        fo.current = us,
                        e = n(r, i)
                    } while (yo)
                }
                if (fo.current = os,
                t = null !== vo && null !== vo.next,
                po = 0,
                go = vo = mo = null,
                _o = !1,
                t)
                    throw Error(a(300));
                return e
            }
            function To() {
                var e = 0 !== xo;
                return xo = 0,
                e
            }
            function wo() {
                var e = {
                    memoizedState: null,
                    baseState: null,
                    baseQueue: null,
                    queue: null,
                    next: null
                };
                return null === go ? mo.memoizedState = go = e : go = go.next = e,
                go
            }
            function Ao() {
                if (null === vo) {
                    var e = mo.alternate;
                    e = null !== e ? e.memoizedState : null
                } else
                    e = vo.next;
                var t = null === go ? mo.memoizedState : go.next;
                if (null !== t)
                    go = t,
                    vo = e;
                else {
                    if (null === e)
                        throw Error(a(310));
                    e = {
                        memoizedState: (vo = e).memoizedState,
                        baseState: vo.baseState,
                        baseQueue: vo.baseQueue,
                        queue: vo.queue,
                        next: null
                    },
                    null === go ? mo.memoizedState = go = e : go = go.next = e
                }
                return go
            }
            function Ro(e, t) {
                return "function" === typeof t ? t(e) : t
            }
            function Co(e) {
                var t = Ao()
                  , n = t.queue;
                if (null === n)
                    throw Error(a(311));
                n.lastRenderedReducer = e;
                var r = vo
                  , i = r.baseQueue
                  , o = n.pending;
                if (null !== o) {
                    if (null !== i) {
                        var s = i.next;
                        i.next = o.next,
                        o.next = s
                    }
                    r.baseQueue = i = o,
                    n.pending = null
                }
                if (null !== i) {
                    o = i.next,
                    r = r.baseState;
                    var l = s = null
                      , u = null
                      , c = o;
                    do {
                        var d = c.lane;
                        if ((po & d) === d)
                            null !== u && (u = u.next = {
                                lane: 0,
                                action: c.action,
                                hasEagerState: c.hasEagerState,
                                eagerState: c.eagerState,
                                next: null
                            }),
                            r = c.hasEagerState ? c.eagerState : e(r, c.action);
                        else {
                            var f = {
                                lane: d,
                                action: c.action,
                                hasEagerState: c.hasEagerState,
                                eagerState: c.eagerState,
                                next: null
                            };
                            null === u ? (l = u = f,
                            s = r) : u = u.next = f,
                            mo.lanes |= d,
                            Il |= d
                        }
                        c = c.next
                    } while (null !== c && c !== o);
                    null === u ? s = r : u.next = l,
                    sr(r, t.memoizedState) || (xs = !0),
                    t.memoizedState = r,
                    t.baseState = s,
                    t.baseQueue = u,
                    n.lastRenderedState = r
                }
                if (null !== (e = n.interleaved)) {
                    i = e;
                    do {
                        o = i.lane,
                        mo.lanes |= o,
                        Il |= o,
                        i = i.next
                    } while (i !== e)
                } else
                    null === i && (n.lanes = 0);
                return [t.memoizedState, n.dispatch]
            }
            function ko(e) {
                var t = Ao()
                  , n = t.queue;
                if (null === n)
                    throw Error(a(311));
                n.lastRenderedReducer = e;
                var r = n.dispatch
                  , i = n.pending
                  , o = t.memoizedState;
                if (null !== i) {
                    n.pending = null;
                    var s = i = i.next;
                    do {
                        o = e(o, s.action),
                        s = s.next
                    } while (s !== i);
                    sr(o, t.memoizedState) || (xs = !0),
                    t.memoizedState = o,
                    null === t.baseQueue && (t.baseState = o),
                    n.lastRenderedState = o
                }
                return [o, r]
            }
            function Po() {}
            function Lo(e, t) {
                var n = mo
                  , r = Ao()
                  , i = t()
                  , o = !sr(r.memoizedState, i);
                if (o && (r.memoizedState = i,
                xs = !0),
                r = r.queue,
                Wo(No.bind(null, n, r, e), [e]),
                r.getSnapshot !== t || o || null !== go && 1 & go.memoizedState.tag) {
                    if (n.flags |= 2048,
                    zo(9, Do.bind(null, n, r, i, t), void 0, null),
                    null === Cl)
                        throw Error(a(349));
                    0 !== (30 & po) || Uo(n, t, i)
                }
                return i
            }
            function Uo(e, t, n) {
                e.flags |= 16384,
                e = {
                    getSnapshot: t,
                    value: n
                },
                null === (t = mo.updateQueue) ? (t = {
                    lastEffect: null,
                    stores: null
                },
                mo.updateQueue = t,
                t.stores = [e]) : null === (n = t.stores) ? t.stores = [e] : n.push(e)
            }
            function Do(e, t, n, r) {
                t.value = n,
                t.getSnapshot = r,
                Io(t) && Oo(e)
            }
            function No(e, t, n) {
                return n((function() {
                    Io(t) && Oo(e)
                }
                ))
            }
            function Io(e) {
                var t = e.getSnapshot;
                e = e.value;
                try {
                    var n = t();
                    return !sr(e, n)
                } catch (r) {
                    return !0
                }
            }
            function Oo(e) {
                var t = Ca(e, 1);
                null !== t && nu(t, e, 1, -1)
            }
            function Fo(e) {
                var t = wo();
                return "function" === typeof e && (e = e()),
                t.memoizedState = t.baseState = e,
                e = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: Ro,
                    lastRenderedState: e
                },
                t.queue = e,
                e = e.dispatch = ns.bind(null, mo, e),
                [t.memoizedState, e]
            }
            function zo(e, t, n, r) {
                return e = {
                    tag: e,
                    create: t,
                    destroy: n,
                    deps: r,
                    next: null
                },
                null === (t = mo.updateQueue) ? (t = {
                    lastEffect: null,
                    stores: null
                },
                mo.updateQueue = t,
                t.lastEffect = e.next = e) : null === (n = t.lastEffect) ? t.lastEffect = e.next = e : (r = n.next,
                n.next = e,
                e.next = r,
                t.lastEffect = e),
                e
            }
            function Bo() {
                return Ao().memoizedState
            }
            function Vo(e, t, n, r) {
                var i = wo();
                mo.flags |= e,
                i.memoizedState = zo(1 | t, n, void 0, void 0 === r ? null : r)
            }
            function Ho(e, t, n, r) {
                var i = Ao();
                r = void 0 === r ? null : r;
                var a = void 0;
                if (null !== vo) {
                    var o = vo.memoizedState;
                    if (a = o.destroy,
                    null !== r && Mo(r, o.deps))
                        return void (i.memoizedState = zo(t, n, a, r))
                }
                mo.flags |= e,
                i.memoizedState = zo(1 | t, n, a, r)
            }
            function Go(e, t) {
                return Vo(8390656, 8, e, t)
            }
            function Wo(e, t) {
                return Ho(2048, 8, e, t)
            }
            function Xo(e, t) {
                return Ho(4, 2, e, t)
            }
            function jo(e, t) {
                return Ho(4, 4, e, t)
            }
            function qo(e, t) {
                return "function" === typeof t ? (e = e(),
                t(e),
                function() {
                    t(null)
                }
                ) : null !== t && void 0 !== t ? (e = e(),
                t.current = e,
                function() {
                    t.current = null
                }
                ) : void 0
            }
            function Yo(e, t, n) {
                return n = null !== n && void 0 !== n ? n.concat([e]) : null,
                Ho(4, 4, qo.bind(null, t, e), n)
            }
            function Ko() {}
            function Zo(e, t) {
                var n = Ao();
                t = void 0 === t ? null : t;
                var r = n.memoizedState;
                return null !== r && null !== t && Mo(t, r[1]) ? r[0] : (n.memoizedState = [e, t],
                e)
            }
            function Qo(e, t) {
                var n = Ao();
                t = void 0 === t ? null : t;
                var r = n.memoizedState;
                return null !== r && null !== t && Mo(t, r[1]) ? r[0] : (e = e(),
                n.memoizedState = [e, t],
                e)
            }
            function Jo(e, t, n) {
                return 0 === (21 & po) ? (e.baseState && (e.baseState = !1,
                xs = !0),
                e.memoizedState = n) : (sr(n, t) || (n = mt(),
                mo.lanes |= n,
                Il |= n,
                e.baseState = !0),
                t)
            }
            function $o(e, t) {
                var n = yt;
                yt = 0 !== n && 4 > n ? n : 4,
                e(!0);
                var r = ho.transition;
                ho.transition = {};
                try {
                    e(!1),
                    t()
                } finally {
                    yt = n,
                    ho.transition = r
                }
            }
            function es() {
                return Ao().memoizedState
            }
            function ts(e, t, n) {
                var r = tu(e);
                if (n = {
                    lane: r,
                    action: n,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                },
                rs(e))
                    is(t, n);
                else if (null !== (n = Ra(e, t, n, r))) {
                    nu(n, e, r, eu()),
                    as(n, t, r)
                }
            }
            function ns(e, t, n) {
                var r = tu(e)
                  , i = {
                    lane: r,
                    action: n,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null
                };
                if (rs(e))
                    is(t, i);
                else {
                    var a = e.alternate;
                    if (0 === e.lanes && (null === a || 0 === a.lanes) && null !== (a = t.lastRenderedReducer))
                        try {
                            var o = t.lastRenderedState
                              , s = a(o, n);
                            if (i.hasEagerState = !0,
                            i.eagerState = s,
                            sr(s, o)) {
                                var l = t.interleaved;
                                return null === l ? (i.next = i,
                                Aa(t)) : (i.next = l.next,
                                l.next = i),
                                void (t.interleaved = i)
                            }
                        } catch (u) {}
                    null !== (n = Ra(e, t, i, r)) && (nu(n, e, r, i = eu()),
                    as(n, t, r))
                }
            }
            function rs(e) {
                var t = e.alternate;
                return e === mo || null !== t && t === mo
            }
            function is(e, t) {
                yo = _o = !0;
                var n = e.pending;
                null === n ? t.next = t : (t.next = n.next,
                n.next = t),
                e.pending = t
            }
            function as(e, t, n) {
                if (0 !== (4194240 & n)) {
                    var r = t.lanes;
                    n |= r &= e.pendingLanes,
                    t.lanes = n,
                    _t(e, n)
                }
            }
            var os = {
                readContext: Ta,
                useCallback: So,
                useContext: So,
                useEffect: So,
                useImperativeHandle: So,
                useInsertionEffect: So,
                useLayoutEffect: So,
                useMemo: So,
                useReducer: So,
                useRef: So,
                useState: So,
                useDebugValue: So,
                useDeferredValue: So,
                useTransition: So,
                useMutableSource: So,
                useSyncExternalStore: So,
                useId: So,
                unstable_isNewReconciler: !1
            }
              , ss = {
                readContext: Ta,
                useCallback: function(e, t) {
                    return wo().memoizedState = [e, void 0 === t ? null : t],
                    e
                },
                useContext: Ta,
                useEffect: Go,
                useImperativeHandle: function(e, t, n) {
                    return n = null !== n && void 0 !== n ? n.concat([e]) : null,
                    Vo(4194308, 4, qo.bind(null, t, e), n)
                },
                useLayoutEffect: function(e, t) {
                    return Vo(4194308, 4, e, t)
                },
                useInsertionEffect: function(e, t) {
                    return Vo(4, 2, e, t)
                },
                useMemo: function(e, t) {
                    var n = wo();
                    return t = void 0 === t ? null : t,
                    e = e(),
                    n.memoizedState = [e, t],
                    e
                },
                useReducer: function(e, t, n) {
                    var r = wo();
                    return t = void 0 !== n ? n(t) : t,
                    r.memoizedState = r.baseState = t,
                    e = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: e,
                        lastRenderedState: t
                    },
                    r.queue = e,
                    e = e.dispatch = ts.bind(null, mo, e),
                    [r.memoizedState, e]
                },
                useRef: function(e) {
                    return e = {
                        current: e
                    },
                    wo().memoizedState = e
                },
                useState: Fo,
                useDebugValue: Ko,
                useDeferredValue: function(e) {
                    return wo().memoizedState = e
                },
                useTransition: function() {
                    var e = Fo(!1)
                      , t = e[0];
                    return e = $o.bind(null, e[1]),
                    wo().memoizedState = e,
                    [t, e]
                },
                useMutableSource: function() {},
                useSyncExternalStore: function(e, t, n) {
                    var r = mo
                      , i = wo();
                    if (ia) {
                        if (void 0 === n)
                            throw Error(a(407));
                        n = n()
                    } else {
                        if (n = t(),
                        null === Cl)
                            throw Error(a(349));
                        0 !== (30 & po) || Uo(r, t, n)
                    }
                    i.memoizedState = n;
                    var o = {
                        value: n,
                        getSnapshot: t
                    };
                    return i.queue = o,
                    Go(No.bind(null, r, o, e), [e]),
                    r.flags |= 2048,
                    zo(9, Do.bind(null, r, o, n, t), void 0, null),
                    n
                },
                useId: function() {
                    var e = wo()
                      , t = Cl.identifierPrefix;
                    if (ia) {
                        var n = Qi;
                        t = ":" + t + "R" + (n = (Zi & ~(1 << 32 - ot(Zi) - 1)).toString(32) + n),
                        0 < (n = xo++) && (t += "H" + n.toString(32)),
                        t += ":"
                    } else
                        t = ":" + t + "r" + (n = bo++).toString(32) + ":";
                    return e.memoizedState = t
                },
                unstable_isNewReconciler: !1
            }
              , ls = {
                readContext: Ta,
                useCallback: Zo,
                useContext: Ta,
                useEffect: Wo,
                useImperativeHandle: Yo,
                useInsertionEffect: Xo,
                useLayoutEffect: jo,
                useMemo: Qo,
                useReducer: Co,
                useRef: Bo,
                useState: function() {
                    return Co(Ro)
                },
                useDebugValue: Ko,
                useDeferredValue: function(e) {
                    return Jo(Ao(), vo.memoizedState, e)
                },
                useTransition: function() {
                    return [Co(Ro)[0], Ao().memoizedState]
                },
                useMutableSource: Po,
                useSyncExternalStore: Lo,
                useId: es,
                unstable_isNewReconciler: !1
            }
              , us = {
                readContext: Ta,
                useCallback: Zo,
                useContext: Ta,
                useEffect: Wo,
                useImperativeHandle: Yo,
                useInsertionEffect: Xo,
                useLayoutEffect: jo,
                useMemo: Qo,
                useReducer: ko,
                useRef: Bo,
                useState: function() {
                    return ko(Ro)
                },
                useDebugValue: Ko,
                useDeferredValue: function(e) {
                    var t = Ao();
                    return null === vo ? t.memoizedState = e : Jo(t, vo.memoizedState, e)
                },
                useTransition: function() {
                    return [ko(Ro)[0], Ao().memoizedState]
                },
                useMutableSource: Po,
                useSyncExternalStore: Lo,
                useId: es,
                unstable_isNewReconciler: !1
            };
            function cs(e, t) {
                try {
                    var n = ""
                      , r = t;
                    do {
                        n += V(r),
                        r = r.return
                    } while (r);
                    var i = n
                } catch (a) {
                    i = "\nError generating stack: " + a.message + "\n" + a.stack
                }
                return {
                    value: e,
                    source: t,
                    stack: i,
                    digest: null
                }
            }
            function ds(e, t, n) {
                return {
                    value: e,
                    source: null,
                    stack: null != n ? n : null,
                    digest: null != t ? t : null
                }
            }
            function fs(e, t) {
                try {
                    console.error(t.value)
                } catch (n) {
                    setTimeout((function() {
                        throw n
                    }
                    ))
                }
            }
            var hs = "function" === typeof WeakMap ? WeakMap : Map;
            function ps(e, t, n) {
                (n = Ua(-1, n)).tag = 3,
                n.payload = {
                    element: null
                };
                var r = t.value;
                return n.callback = function() {
                    Wl || (Wl = !0,
                    Xl = r),
                    fs(0, t)
                }
                ,
                n
            }
            function ms(e, t, n) {
                (n = Ua(-1, n)).tag = 3;
                var r = e.type.getDerivedStateFromError;
                if ("function" === typeof r) {
                    var i = t.value;
                    n.payload = function() {
                        return r(i)
                    }
                    ,
                    n.callback = function() {
                        fs(0, t)
                    }
                }
                var a = e.stateNode;
                return null !== a && "function" === typeof a.componentDidCatch && (n.callback = function() {
                    fs(0, t),
                    "function" !== typeof r && (null === jl ? jl = new Set([this]) : jl.add(this));
                    var e = t.stack;
                    this.componentDidCatch(t.value, {
                        componentStack: null !== e ? e : ""
                    })
                }
                ),
                n
            }
            function vs(e, t, n) {
                var r = e.pingCache;
                if (null === r) {
                    r = e.pingCache = new hs;
                    var i = new Set;
                    r.set(t, i)
                } else
                    void 0 === (i = r.get(t)) && (i = new Set,
                    r.set(t, i));
                i.has(n) || (i.add(n),
                e = Tu.bind(null, e, t, n),
                t.then(e, e))
            }
            function gs(e) {
                do {
                    var t;
                    if ((t = 13 === e.tag) && (t = null === (t = e.memoizedState) || null !== t.dehydrated),
                    t)
                        return e;
                    e = e.return
                } while (null !== e);
                return null
            }
            function _s(e, t, n, r, i) {
                return 0 === (1 & e.mode) ? (e === t ? e.flags |= 65536 : (e.flags |= 128,
                n.flags |= 131072,
                n.flags &= -52805,
                1 === n.tag && (null === n.alternate ? n.tag = 17 : ((t = Ua(-1, 1)).tag = 2,
                Da(n, t, 1))),
                n.lanes |= 1),
                e) : (e.flags |= 65536,
                e.lanes = i,
                e)
            }
            var ys = x.ReactCurrentOwner
              , xs = !1;
            function bs(e, t, n, r) {
                t.child = null === e ? Qa(t, null, n, r) : Za(t, e.child, n, r)
            }
            function Ss(e, t, n, r, i) {
                n = n.render;
                var a = t.ref;
                return Ea(t, i),
                r = Eo(e, t, n, r, a, i),
                n = To(),
                null === e || xs ? (ia && n && ea(t),
                t.flags |= 1,
                bs(e, t, r, i),
                t.child) : (t.updateQueue = e.updateQueue,
                t.flags &= -2053,
                e.lanes &= ~i,
                Ws(e, t, i))
            }
            function Ms(e, t, n, r, i) {
                if (null === e) {
                    var a = n.type;
                    return "function" !== typeof a || Lu(a) || void 0 !== a.defaultProps || null !== n.compare || void 0 !== n.defaultProps ? ((e = Du(n.type, null, r, t, t.mode, i)).ref = t.ref,
                    e.return = t,
                    t.child = e) : (t.tag = 15,
                    t.type = a,
                    Es(e, t, a, r, i))
                }
                if (a = e.child,
                0 === (e.lanes & i)) {
                    var o = a.memoizedProps;
                    if ((n = null !== (n = n.compare) ? n : lr)(o, r) && e.ref === t.ref)
                        return Ws(e, t, i)
                }
                return t.flags |= 1,
                (e = Uu(a, r)).ref = t.ref,
                e.return = t,
                t.child = e
            }
            function Es(e, t, n, r, i) {
                if (null !== e) {
                    var a = e.memoizedProps;
                    if (lr(a, r) && e.ref === t.ref) {
                        if (xs = !1,
                        t.pendingProps = r = a,
                        0 === (e.lanes & i))
                            return t.lanes = e.lanes,
                            Ws(e, t, i);
                        0 !== (131072 & e.flags) && (xs = !0)
                    }
                }
                return As(e, t, n, r, i)
            }
            function Ts(e, t, n) {
                var r = t.pendingProps
                  , i = r.children
                  , a = null !== e ? e.memoizedState : null;
                if ("hidden" === r.mode)
                    if (0 === (1 & t.mode))
                        t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        },
                        wi(Ul, Ll),
                        Ll |= n;
                    else {
                        if (0 === (1073741824 & n))
                            return e = null !== a ? a.baseLanes | n : n,
                            t.lanes = t.childLanes = 1073741824,
                            t.memoizedState = {
                                baseLanes: e,
                                cachePool: null,
                                transitions: null
                            },
                            t.updateQueue = null,
                            wi(Ul, Ll),
                            Ll |= e,
                            null;
                        t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        },
                        r = null !== a ? a.baseLanes : n,
                        wi(Ul, Ll),
                        Ll |= r
                    }
                else
                    null !== a ? (r = a.baseLanes | n,
                    t.memoizedState = null) : r = n,
                    wi(Ul, Ll),
                    Ll |= r;
                return bs(e, t, i, n),
                t.child
            }
            function ws(e, t) {
                var n = t.ref;
                (null === e && null !== n || null !== e && e.ref !== n) && (t.flags |= 512,
                t.flags |= 2097152)
            }
            function As(e, t, n, r, i) {
                var a = Li(n) ? ki : Ri.current;
                return a = Pi(t, a),
                Ea(t, i),
                n = Eo(e, t, n, r, a, i),
                r = To(),
                null === e || xs ? (ia && r && ea(t),
                t.flags |= 1,
                bs(e, t, n, i),
                t.child) : (t.updateQueue = e.updateQueue,
                t.flags &= -2053,
                e.lanes &= ~i,
                Ws(e, t, i))
            }
            function Rs(e, t, n, r, i) {
                if (Li(n)) {
                    var a = !0;
                    Ii(t)
                } else
                    a = !1;
                if (Ea(t, i),
                null === t.stateNode)
                    Gs(e, t),
                    Ga(t, n, r),
                    Xa(t, n, r, i),
                    r = !0;
                else if (null === e) {
                    var o = t.stateNode
                      , s = t.memoizedProps;
                    o.props = s;
                    var l = o.context
                      , u = n.contextType;
                    "object" === typeof u && null !== u ? u = Ta(u) : u = Pi(t, u = Li(n) ? ki : Ri.current);
                    var c = n.getDerivedStateFromProps
                      , d = "function" === typeof c || "function" === typeof o.getSnapshotBeforeUpdate;
                    d || "function" !== typeof o.UNSAFE_componentWillReceiveProps && "function" !== typeof o.componentWillReceiveProps || (s !== r || l !== u) && Wa(t, o, r, u),
                    ka = !1;
                    var f = t.memoizedState;
                    o.state = f,
                    Oa(t, r, o, i),
                    l = t.memoizedState,
                    s !== r || f !== l || Ci.current || ka ? ("function" === typeof c && (Ba(t, n, c, r),
                    l = t.memoizedState),
                    (s = ka || Ha(t, n, s, r, f, l, u)) ? (d || "function" !== typeof o.UNSAFE_componentWillMount && "function" !== typeof o.componentWillMount || ("function" === typeof o.componentWillMount && o.componentWillMount(),
                    "function" === typeof o.UNSAFE_componentWillMount && o.UNSAFE_componentWillMount()),
                    "function" === typeof o.componentDidMount && (t.flags |= 4194308)) : ("function" === typeof o.componentDidMount && (t.flags |= 4194308),
                    t.memoizedProps = r,
                    t.memoizedState = l),
                    o.props = r,
                    o.state = l,
                    o.context = u,
                    r = s) : ("function" === typeof o.componentDidMount && (t.flags |= 4194308),
                    r = !1)
                } else {
                    o = t.stateNode,
                    La(e, t),
                    s = t.memoizedProps,
                    u = t.type === t.elementType ? s : va(t.type, s),
                    o.props = u,
                    d = t.pendingProps,
                    f = o.context,
                    "object" === typeof (l = n.contextType) && null !== l ? l = Ta(l) : l = Pi(t, l = Li(n) ? ki : Ri.current);
                    var h = n.getDerivedStateFromProps;
                    (c = "function" === typeof h || "function" === typeof o.getSnapshotBeforeUpdate) || "function" !== typeof o.UNSAFE_componentWillReceiveProps && "function" !== typeof o.componentWillReceiveProps || (s !== d || f !== l) && Wa(t, o, r, l),
                    ka = !1,
                    f = t.memoizedState,
                    o.state = f,
                    Oa(t, r, o, i);
                    var p = t.memoizedState;
                    s !== d || f !== p || Ci.current || ka ? ("function" === typeof h && (Ba(t, n, h, r),
                    p = t.memoizedState),
                    (u = ka || Ha(t, n, u, r, f, p, l) || !1) ? (c || "function" !== typeof o.UNSAFE_componentWillUpdate && "function" !== typeof o.componentWillUpdate || ("function" === typeof o.componentWillUpdate && o.componentWillUpdate(r, p, l),
                    "function" === typeof o.UNSAFE_componentWillUpdate && o.UNSAFE_componentWillUpdate(r, p, l)),
                    "function" === typeof o.componentDidUpdate && (t.flags |= 4),
                    "function" === typeof o.getSnapshotBeforeUpdate && (t.flags |= 1024)) : ("function" !== typeof o.componentDidUpdate || s === e.memoizedProps && f === e.memoizedState || (t.flags |= 4),
                    "function" !== typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && f === e.memoizedState || (t.flags |= 1024),
                    t.memoizedProps = r,
                    t.memoizedState = p),
                    o.props = r,
                    o.state = p,
                    o.context = l,
                    r = u) : ("function" !== typeof o.componentDidUpdate || s === e.memoizedProps && f === e.memoizedState || (t.flags |= 4),
                    "function" !== typeof o.getSnapshotBeforeUpdate || s === e.memoizedProps && f === e.memoizedState || (t.flags |= 1024),
                    r = !1)
                }
                return Cs(e, t, n, r, a, i)
            }
            function Cs(e, t, n, r, i, a) {
                ws(e, t);
                var o = 0 !== (128 & t.flags);
                if (!r && !o)
                    return i && Oi(t, n, !1),
                    Ws(e, t, a);
                r = t.stateNode,
                ys.current = t;
                var s = o && "function" !== typeof n.getDerivedStateFromError ? null : r.render();
                return t.flags |= 1,
                null !== e && o ? (t.child = Za(t, e.child, null, a),
                t.child = Za(t, null, s, a)) : bs(e, t, s, a),
                t.memoizedState = r.state,
                i && Oi(t, n, !0),
                t.child
            }
            function ks(e) {
                var t = e.stateNode;
                t.pendingContext ? Di(0, t.pendingContext, t.pendingContext !== t.context) : t.context && Di(0, t.context, !1),
                ro(e, t.containerInfo)
            }
            function Ps(e, t, n, r, i) {
                return ha(),
                pa(i),
                t.flags |= 256,
                bs(e, t, n, r),
                t.child
            }
            var Ls, Us, Ds, Ns = {
                dehydrated: null,
                treeContext: null,
                retryLane: 0
            };
            function Is(e) {
                return {
                    baseLanes: e,
                    cachePool: null,
                    transitions: null
                }
            }
            function Os(e, t, n) {
                var r, i = t.pendingProps, o = so.current, s = !1, l = 0 !== (128 & t.flags);
                if ((r = l) || (r = (null === e || null !== e.memoizedState) && 0 !== (2 & o)),
                r ? (s = !0,
                t.flags &= -129) : null !== e && null === e.memoizedState || (o |= 1),
                wi(so, 1 & o),
                null === e)
                    return ua(t),
                    null !== (e = t.memoizedState) && null !== (e = e.dehydrated) ? (0 === (1 & t.mode) ? t.lanes = 1 : "$!" === e.data ? t.lanes = 8 : t.lanes = 1073741824,
                    null) : (l = i.children,
                    e = i.fallback,
                    s ? (i = t.mode,
                    s = t.child,
                    l = {
                        mode: "hidden",
                        children: l
                    },
                    0 === (1 & i) && null !== s ? (s.childLanes = 0,
                    s.pendingProps = l) : s = Iu(l, i, 0, null),
                    e = Nu(e, i, n, null),
                    s.return = t,
                    e.return = t,
                    s.sibling = e,
                    t.child = s,
                    t.child.memoizedState = Is(n),
                    t.memoizedState = Ns,
                    e) : Fs(t, l));
                if (null !== (o = e.memoizedState) && null !== (r = o.dehydrated))
                    return function(e, t, n, r, i, o, s) {
                        if (n)
                            return 256 & t.flags ? (t.flags &= -257,
                            zs(e, t, s, r = ds(Error(a(422))))) : null !== t.memoizedState ? (t.child = e.child,
                            t.flags |= 128,
                            null) : (o = r.fallback,
                            i = t.mode,
                            r = Iu({
                                mode: "visible",
                                children: r.children
                            }, i, 0, null),
                            (o = Nu(o, i, s, null)).flags |= 2,
                            r.return = t,
                            o.return = t,
                            r.sibling = o,
                            t.child = r,
                            0 !== (1 & t.mode) && Za(t, e.child, null, s),
                            t.child.memoizedState = Is(s),
                            t.memoizedState = Ns,
                            o);
                        if (0 === (1 & t.mode))
                            return zs(e, t, s, null);
                        if ("$!" === i.data) {
                            if (r = i.nextSibling && i.nextSibling.dataset)
                                var l = r.dgst;
                            return r = l,
                            zs(e, t, s, r = ds(o = Error(a(419)), r, void 0))
                        }
                        if (l = 0 !== (s & e.childLanes),
                        xs || l) {
                            if (null !== (r = Cl)) {
                                switch (s & -s) {
                                case 4:
                                    i = 2;
                                    break;
                                case 16:
                                    i = 8;
                                    break;
                                case 64:
                                case 128:
                                case 256:
                                case 512:
                                case 1024:
                                case 2048:
                                case 4096:
                                case 8192:
                                case 16384:
                                case 32768:
                                case 65536:
                                case 131072:
                                case 262144:
                                case 524288:
                                case 1048576:
                                case 2097152:
                                case 4194304:
                                case 8388608:
                                case 16777216:
                                case 33554432:
                                case 67108864:
                                    i = 32;
                                    break;
                                case 536870912:
                                    i = 268435456;
                                    break;
                                default:
                                    i = 0
                                }
                                0 !== (i = 0 !== (i & (r.suspendedLanes | s)) ? 0 : i) && i !== o.retryLane && (o.retryLane = i,
                                Ca(e, i),
                                nu(r, e, i, -1))
                            }
                            return mu(),
                            zs(e, t, s, r = ds(Error(a(421))))
                        }
                        return "$?" === i.data ? (t.flags |= 128,
                        t.child = e.child,
                        t = Au.bind(null, e),
                        i._reactRetry = t,
                        null) : (e = o.treeContext,
                        ra = ui(i.nextSibling),
                        na = t,
                        ia = !0,
                        aa = null,
                        null !== e && (qi[Yi++] = Zi,
                        qi[Yi++] = Qi,
                        qi[Yi++] = Ki,
                        Zi = e.id,
                        Qi = e.overflow,
                        Ki = t),
                        (t = Fs(t, r.children)).flags |= 4096,
                        t)
                    }(e, t, l, i, r, o, n);
                if (s) {
                    s = i.fallback,
                    l = t.mode,
                    r = (o = e.child).sibling;
                    var u = {
                        mode: "hidden",
                        children: i.children
                    };
                    return 0 === (1 & l) && t.child !== o ? ((i = t.child).childLanes = 0,
                    i.pendingProps = u,
                    t.deletions = null) : (i = Uu(o, u)).subtreeFlags = 14680064 & o.subtreeFlags,
                    null !== r ? s = Uu(r, s) : (s = Nu(s, l, n, null)).flags |= 2,
                    s.return = t,
                    i.return = t,
                    i.sibling = s,
                    t.child = i,
                    i = s,
                    s = t.child,
                    l = null === (l = e.child.memoizedState) ? Is(n) : {
                        baseLanes: l.baseLanes | n,
                        cachePool: null,
                        transitions: l.transitions
                    },
                    s.memoizedState = l,
                    s.childLanes = e.childLanes & ~n,
                    t.memoizedState = Ns,
                    i
                }
                return e = (s = e.child).sibling,
                i = Uu(s, {
                    mode: "visible",
                    children: i.children
                }),
                0 === (1 & t.mode) && (i.lanes = n),
                i.return = t,
                i.sibling = null,
                null !== e && (null === (n = t.deletions) ? (t.deletions = [e],
                t.flags |= 16) : n.push(e)),
                t.child = i,
                t.memoizedState = null,
                i
            }
            function Fs(e, t) {
                return (t = Iu({
                    mode: "visible",
                    children: t
                }, e.mode, 0, null)).return = e,
                e.child = t
            }
            function zs(e, t, n, r) {
                return null !== r && pa(r),
                Za(t, e.child, null, n),
                (e = Fs(t, t.pendingProps.children)).flags |= 2,
                t.memoizedState = null,
                e
            }
            function Bs(e, t, n) {
                e.lanes |= t;
                var r = e.alternate;
                null !== r && (r.lanes |= t),
                Ma(e.return, t, n)
            }
            function Vs(e, t, n, r, i) {
                var a = e.memoizedState;
                null === a ? e.memoizedState = {
                    isBackwards: t,
                    rendering: null,
                    renderingStartTime: 0,
                    last: r,
                    tail: n,
                    tailMode: i
                } : (a.isBackwards = t,
                a.rendering = null,
                a.renderingStartTime = 0,
                a.last = r,
                a.tail = n,
                a.tailMode = i)
            }
            function Hs(e, t, n) {
                var r = t.pendingProps
                  , i = r.revealOrder
                  , a = r.tail;
                if (bs(e, t, r.children, n),
                0 !== (2 & (r = so.current)))
                    r = 1 & r | 2,
                    t.flags |= 128;
                else {
                    if (null !== e && 0 !== (128 & e.flags))
                        e: for (e = t.child; null !== e; ) {
                            if (13 === e.tag)
                                null !== e.memoizedState && Bs(e, n, t);
                            else if (19 === e.tag)
                                Bs(e, n, t);
                            else if (null !== e.child) {
                                e.child.return = e,
                                e = e.child;
                                continue
                            }
                            if (e === t)
                                break e;
                            for (; null === e.sibling; ) {
                                if (null === e.return || e.return === t)
                                    break e;
                                e = e.return
                            }
                            e.sibling.return = e.return,
                            e = e.sibling
                        }
                    r &= 1
                }
                if (wi(so, r),
                0 === (1 & t.mode))
                    t.memoizedState = null;
                else
                    switch (i) {
                    case "forwards":
                        for (n = t.child,
                        i = null; null !== n; )
                            null !== (e = n.alternate) && null === lo(e) && (i = n),
                            n = n.sibling;
                        null === (n = i) ? (i = t.child,
                        t.child = null) : (i = n.sibling,
                        n.sibling = null),
                        Vs(t, !1, i, n, a);
                        break;
                    case "backwards":
                        for (n = null,
                        i = t.child,
                        t.child = null; null !== i; ) {
                            if (null !== (e = i.alternate) && null === lo(e)) {
                                t.child = i;
                                break
                            }
                            e = i.sibling,
                            i.sibling = n,
                            n = i,
                            i = e
                        }
                        Vs(t, !0, n, null, a);
                        break;
                    case "together":
                        Vs(t, !1, null, null, void 0);
                        break;
                    default:
                        t.memoizedState = null
                    }
                return t.child
            }
            function Gs(e, t) {
                0 === (1 & t.mode) && null !== e && (e.alternate = null,
                t.alternate = null,
                t.flags |= 2)
            }
            function Ws(e, t, n) {
                if (null !== e && (t.dependencies = e.dependencies),
                Il |= t.lanes,
                0 === (n & t.childLanes))
                    return null;
                if (null !== e && t.child !== e.child)
                    throw Error(a(153));
                if (null !== t.child) {
                    for (n = Uu(e = t.child, e.pendingProps),
                    t.child = n,
                    n.return = t; null !== e.sibling; )
                        e = e.sibling,
                        (n = n.sibling = Uu(e, e.pendingProps)).return = t;
                    n.sibling = null
                }
                return t.child
            }
            function Xs(e, t) {
                if (!ia)
                    switch (e.tailMode) {
                    case "hidden":
                        t = e.tail;
                        for (var n = null; null !== t; )
                            null !== t.alternate && (n = t),
                            t = t.sibling;
                        null === n ? e.tail = null : n.sibling = null;
                        break;
                    case "collapsed":
                        n = e.tail;
                        for (var r = null; null !== n; )
                            null !== n.alternate && (r = n),
                            n = n.sibling;
                        null === r ? t || null === e.tail ? e.tail = null : e.tail.sibling = null : r.sibling = null
                    }
            }
            function js(e) {
                var t = null !== e.alternate && e.alternate.child === e.child
                  , n = 0
                  , r = 0;
                if (t)
                    for (var i = e.child; null !== i; )
                        n |= i.lanes | i.childLanes,
                        r |= 14680064 & i.subtreeFlags,
                        r |= 14680064 & i.flags,
                        i.return = e,
                        i = i.sibling;
                else
                    for (i = e.child; null !== i; )
                        n |= i.lanes | i.childLanes,
                        r |= i.subtreeFlags,
                        r |= i.flags,
                        i.return = e,
                        i = i.sibling;
                return e.subtreeFlags |= r,
                e.childLanes = n,
                t
            }
            function qs(e, t, n) {
                var r = t.pendingProps;
                switch (ta(t),
                t.tag) {
                case 2:
                case 16:
                case 15:
                case 0:
                case 11:
                case 7:
                case 8:
                case 12:
                case 9:
                case 14:
                    return js(t),
                    null;
                case 1:
                case 17:
                    return Li(t.type) && Ui(),
                    js(t),
                    null;
                case 3:
                    return r = t.stateNode,
                    io(),
                    Ti(Ci),
                    Ti(Ri),
                    co(),
                    r.pendingContext && (r.context = r.pendingContext,
                    r.pendingContext = null),
                    null !== e && null !== e.child || (da(t) ? t.flags |= 4 : null === e || e.memoizedState.isDehydrated && 0 === (256 & t.flags) || (t.flags |= 1024,
                    null !== aa && (ou(aa),
                    aa = null))),
                    js(t),
                    null;
                case 5:
                    oo(t);
                    var i = no(to.current);
                    if (n = t.type,
                    null !== e && null != t.stateNode)
                        Us(e, t, n, r),
                        e.ref !== t.ref && (t.flags |= 512,
                        t.flags |= 2097152);
                    else {
                        if (!r) {
                            if (null === t.stateNode)
                                throw Error(a(166));
                            return js(t),
                            null
                        }
                        if (e = no($a.current),
                        da(t)) {
                            r = t.stateNode,
                            n = t.type;
                            var o = t.memoizedProps;
                            switch (r[fi] = t,
                            r[hi] = o,
                            e = 0 !== (1 & t.mode),
                            n) {
                            case "dialog":
                                zr("cancel", r),
                                zr("close", r);
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                zr("load", r);
                                break;
                            case "video":
                            case "audio":
                                for (i = 0; i < Nr.length; i++)
                                    zr(Nr[i], r);
                                break;
                            case "source":
                                zr("error", r);
                                break;
                            case "img":
                            case "image":
                            case "link":
                                zr("error", r),
                                zr("load", r);
                                break;
                            case "details":
                                zr("toggle", r);
                                break;
                            case "input":
                                Z(r, o),
                                zr("invalid", r);
                                break;
                            case "select":
                                r._wrapperState = {
                                    wasMultiple: !!o.multiple
                                },
                                zr("invalid", r);
                                break;
                            case "textarea":
                                ie(r, o),
                                zr("invalid", r)
                            }
                            for (var l in _e(n, o),
                            i = null,
                            o)
                                if (o.hasOwnProperty(l)) {
                                    var u = o[l];
                                    "children" === l ? "string" === typeof u ? r.textContent !== u && (!0 !== o.suppressHydrationWarning && Jr(r.textContent, u, e),
                                    i = ["children", u]) : "number" === typeof u && r.textContent !== "" + u && (!0 !== o.suppressHydrationWarning && Jr(r.textContent, u, e),
                                    i = ["children", "" + u]) : s.hasOwnProperty(l) && null != u && "onScroll" === l && zr("scroll", r)
                                }
                            switch (n) {
                            case "input":
                                j(r),
                                $(r, o, !0);
                                break;
                            case "textarea":
                                j(r),
                                oe(r);
                                break;
                            case "select":
                            case "option":
                                break;
                            default:
                                "function" === typeof o.onClick && (r.onclick = $r)
                            }
                            r = i,
                            t.updateQueue = r,
                            null !== r && (t.flags |= 4)
                        } else {
                            l = 9 === i.nodeType ? i : i.ownerDocument,
                            "http://www.w3.org/1999/xhtml" === e && (e = se(n)),
                            "http://www.w3.org/1999/xhtml" === e ? "script" === n ? ((e = l.createElement("div")).innerHTML = "<script><\/script>",
                            e = e.removeChild(e.firstChild)) : "string" === typeof r.is ? e = l.createElement(n, {
                                is: r.is
                            }) : (e = l.createElement(n),
                            "select" === n && (l = e,
                            r.multiple ? l.multiple = !0 : r.size && (l.size = r.size))) : e = l.createElementNS(e, n),
                            e[fi] = t,
                            e[hi] = r,
                            Ls(e, t),
                            t.stateNode = e;
                            e: {
                                switch (l = ye(n, r),
                                n) {
                                case "dialog":
                                    zr("cancel", e),
                                    zr("close", e),
                                    i = r;
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    zr("load", e),
                                    i = r;
                                    break;
                                case "video":
                                case "audio":
                                    for (i = 0; i < Nr.length; i++)
                                        zr(Nr[i], e);
                                    i = r;
                                    break;
                                case "source":
                                    zr("error", e),
                                    i = r;
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    zr("error", e),
                                    zr("load", e),
                                    i = r;
                                    break;
                                case "details":
                                    zr("toggle", e),
                                    i = r;
                                    break;
                                case "input":
                                    Z(e, r),
                                    i = K(e, r),
                                    zr("invalid", e);
                                    break;
                                case "option":
                                default:
                                    i = r;
                                    break;
                                case "select":
                                    e._wrapperState = {
                                        wasMultiple: !!r.multiple
                                    },
                                    i = O({}, r, {
                                        value: void 0
                                    }),
                                    zr("invalid", e);
                                    break;
                                case "textarea":
                                    ie(e, r),
                                    i = re(e, r),
                                    zr("invalid", e)
                                }
                                for (o in _e(n, i),
                                u = i)
                                    if (u.hasOwnProperty(o)) {
                                        var c = u[o];
                                        "style" === o ? ve(e, c) : "dangerouslySetInnerHTML" === o ? null != (c = c ? c.__html : void 0) && de(e, c) : "children" === o ? "string" === typeof c ? ("textarea" !== n || "" !== c) && fe(e, c) : "number" === typeof c && fe(e, "" + c) : "suppressContentEditableWarning" !== o && "suppressHydrationWarning" !== o && "autoFocus" !== o && (s.hasOwnProperty(o) ? null != c && "onScroll" === o && zr("scroll", e) : null != c && y(e, o, c, l))
                                    }
                                switch (n) {
                                case "input":
                                    j(e),
                                    $(e, r, !1);
                                    break;
                                case "textarea":
                                    j(e),
                                    oe(e);
                                    break;
                                case "option":
                                    null != r.value && e.setAttribute("value", "" + W(r.value));
                                    break;
                                case "select":
                                    e.multiple = !!r.multiple,
                                    null != (o = r.value) ? ne(e, !!r.multiple, o, !1) : null != r.defaultValue && ne(e, !!r.multiple, r.defaultValue, !0);
                                    break;
                                default:
                                    "function" === typeof i.onClick && (e.onclick = $r)
                                }
                                switch (n) {
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    r = !!r.autoFocus;
                                    break e;
                                case "img":
                                    r = !0;
                                    break e;
                                default:
                                    r = !1
                                }
                            }
                            r && (t.flags |= 4)
                        }
                        null !== t.ref && (t.flags |= 512,
                        t.flags |= 2097152)
                    }
                    return js(t),
                    null;
                case 6:
                    if (e && null != t.stateNode)
                        Ds(0, t, e.memoizedProps, r);
                    else {
                        if ("string" !== typeof r && null === t.stateNode)
                            throw Error(a(166));
                        if (n = no(to.current),
                        no($a.current),
                        da(t)) {
                            if (r = t.stateNode,
                            n = t.memoizedProps,
                            r[fi] = t,
                            (o = r.nodeValue !== n) && null !== (e = na))
                                switch (e.tag) {
                                case 3:
                                    Jr(r.nodeValue, n, 0 !== (1 & e.mode));
                                    break;
                                case 5:
                                    !0 !== e.memoizedProps.suppressHydrationWarning && Jr(r.nodeValue, n, 0 !== (1 & e.mode))
                                }
                            o && (t.flags |= 4)
                        } else
                            (r = (9 === n.nodeType ? n : n.ownerDocument).createTextNode(r))[fi] = t,
                            t.stateNode = r
                    }
                    return js(t),
                    null;
                case 13:
                    if (Ti(so),
                    r = t.memoizedState,
                    null === e || null !== e.memoizedState && null !== e.memoizedState.dehydrated) {
                        if (ia && null !== ra && 0 !== (1 & t.mode) && 0 === (128 & t.flags))
                            fa(),
                            ha(),
                            t.flags |= 98560,
                            o = !1;
                        else if (o = da(t),
                        null !== r && null !== r.dehydrated) {
                            if (null === e) {
                                if (!o)
                                    throw Error(a(318));
                                if (!(o = null !== (o = t.memoizedState) ? o.dehydrated : null))
                                    throw Error(a(317));
                                o[fi] = t
                            } else
                                ha(),
                                0 === (128 & t.flags) && (t.memoizedState = null),
                                t.flags |= 4;
                            js(t),
                            o = !1
                        } else
                            null !== aa && (ou(aa),
                            aa = null),
                            o = !0;
                        if (!o)
                            return 65536 & t.flags ? t : null
                    }
                    return 0 !== (128 & t.flags) ? (t.lanes = n,
                    t) : ((r = null !== r) !== (null !== e && null !== e.memoizedState) && r && (t.child.flags |= 8192,
                    0 !== (1 & t.mode) && (null === e || 0 !== (1 & so.current) ? 0 === Dl && (Dl = 3) : mu())),
                    null !== t.updateQueue && (t.flags |= 4),
                    js(t),
                    null);
                case 4:
                    return io(),
                    null === e && Hr(t.stateNode.containerInfo),
                    js(t),
                    null;
                case 10:
                    return Sa(t.type._context),
                    js(t),
                    null;
                case 19:
                    if (Ti(so),
                    null === (o = t.memoizedState))
                        return js(t),
                        null;
                    if (r = 0 !== (128 & t.flags),
                    null === (l = o.rendering))
                        if (r)
                            Xs(o, !1);
                        else {
                            if (0 !== Dl || null !== e && 0 !== (128 & e.flags))
                                for (e = t.child; null !== e; ) {
                                    if (null !== (l = lo(e))) {
                                        for (t.flags |= 128,
                                        Xs(o, !1),
                                        null !== (r = l.updateQueue) && (t.updateQueue = r,
                                        t.flags |= 4),
                                        t.subtreeFlags = 0,
                                        r = n,
                                        n = t.child; null !== n; )
                                            e = r,
                                            (o = n).flags &= 14680066,
                                            null === (l = o.alternate) ? (o.childLanes = 0,
                                            o.lanes = e,
                                            o.child = null,
                                            o.subtreeFlags = 0,
                                            o.memoizedProps = null,
                                            o.memoizedState = null,
                                            o.updateQueue = null,
                                            o.dependencies = null,
                                            o.stateNode = null) : (o.childLanes = l.childLanes,
                                            o.lanes = l.lanes,
                                            o.child = l.child,
                                            o.subtreeFlags = 0,
                                            o.deletions = null,
                                            o.memoizedProps = l.memoizedProps,
                                            o.memoizedState = l.memoizedState,
                                            o.updateQueue = l.updateQueue,
                                            o.type = l.type,
                                            e = l.dependencies,
                                            o.dependencies = null === e ? null : {
                                                lanes: e.lanes,
                                                firstContext: e.firstContext
                                            }),
                                            n = n.sibling;
                                        return wi(so, 1 & so.current | 2),
                                        t.child
                                    }
                                    e = e.sibling
                                }
                            null !== o.tail && Qe() > Hl && (t.flags |= 128,
                            r = !0,
                            Xs(o, !1),
                            t.lanes = 4194304)
                        }
                    else {
                        if (!r)
                            if (null !== (e = lo(l))) {
                                if (t.flags |= 128,
                                r = !0,
                                null !== (n = e.updateQueue) && (t.updateQueue = n,
                                t.flags |= 4),
                                Xs(o, !0),
                                null === o.tail && "hidden" === o.tailMode && !l.alternate && !ia)
                                    return js(t),
                                    null
                            } else
                                2 * Qe() - o.renderingStartTime > Hl && 1073741824 !== n && (t.flags |= 128,
                                r = !0,
                                Xs(o, !1),
                                t.lanes = 4194304);
                        o.isBackwards ? (l.sibling = t.child,
                        t.child = l) : (null !== (n = o.last) ? n.sibling = l : t.child = l,
                        o.last = l)
                    }
                    return null !== o.tail ? (t = o.tail,
                    o.rendering = t,
                    o.tail = t.sibling,
                    o.renderingStartTime = Qe(),
                    t.sibling = null,
                    n = so.current,
                    wi(so, r ? 1 & n | 2 : 1 & n),
                    t) : (js(t),
                    null);
                case 22:
                case 23:
                    return du(),
                    r = null !== t.memoizedState,
                    null !== e && null !== e.memoizedState !== r && (t.flags |= 8192),
                    r && 0 !== (1 & t.mode) ? 0 !== (1073741824 & Ll) && (js(t),
                    6 & t.subtreeFlags && (t.flags |= 8192)) : js(t),
                    null;
                case 24:
                case 25:
                    return null
                }
                throw Error(a(156, t.tag))
            }
            function Ys(e, t) {
                switch (ta(t),
                t.tag) {
                case 1:
                    return Li(t.type) && Ui(),
                    65536 & (e = t.flags) ? (t.flags = -65537 & e | 128,
                    t) : null;
                case 3:
                    return io(),
                    Ti(Ci),
                    Ti(Ri),
                    co(),
                    0 !== (65536 & (e = t.flags)) && 0 === (128 & e) ? (t.flags = -65537 & e | 128,
                    t) : null;
                case 5:
                    return oo(t),
                    null;
                case 13:
                    if (Ti(so),
                    null !== (e = t.memoizedState) && null !== e.dehydrated) {
                        if (null === t.alternate)
                            throw Error(a(340));
                        ha()
                    }
                    return 65536 & (e = t.flags) ? (t.flags = -65537 & e | 128,
                    t) : null;
                case 19:
                    return Ti(so),
                    null;
                case 4:
                    return io(),
                    null;
                case 10:
                    return Sa(t.type._context),
                    null;
                case 22:
                case 23:
                    return du(),
                    null;
                default:
                    return null
                }
            }
            Ls = function(e, t) {
                for (var n = t.child; null !== n; ) {
                    if (5 === n.tag || 6 === n.tag)
                        e.appendChild(n.stateNode);
                    else if (4 !== n.tag && null !== n.child) {
                        n.child.return = n,
                        n = n.child;
                        continue
                    }
                    if (n === t)
                        break;
                    for (; null === n.sibling; ) {
                        if (null === n.return || n.return === t)
                            return;
                        n = n.return
                    }
                    n.sibling.return = n.return,
                    n = n.sibling
                }
            }
            ,
            Us = function(e, t, n, r) {
                var i = e.memoizedProps;
                if (i !== r) {
                    e = t.stateNode,
                    no($a.current);
                    var a, o = null;
                    switch (n) {
                    case "input":
                        i = K(e, i),
                        r = K(e, r),
                        o = [];
                        break;
                    case "select":
                        i = O({}, i, {
                            value: void 0
                        }),
                        r = O({}, r, {
                            value: void 0
                        }),
                        o = [];
                        break;
                    case "textarea":
                        i = re(e, i),
                        r = re(e, r),
                        o = [];
                        break;
                    default:
                        "function" !== typeof i.onClick && "function" === typeof r.onClick && (e.onclick = $r)
                    }
                    for (c in _e(n, r),
                    n = null,
                    i)
                        if (!r.hasOwnProperty(c) && i.hasOwnProperty(c) && null != i[c])
                            if ("style" === c) {
                                var l = i[c];
                                for (a in l)
                                    l.hasOwnProperty(a) && (n || (n = {}),
                                    n[a] = "")
                            } else
                                "dangerouslySetInnerHTML" !== c && "children" !== c && "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && "autoFocus" !== c && (s.hasOwnProperty(c) ? o || (o = []) : (o = o || []).push(c, null));
                    for (c in r) {
                        var u = r[c];
                        if (l = null != i ? i[c] : void 0,
                        r.hasOwnProperty(c) && u !== l && (null != u || null != l))
                            if ("style" === c)
                                if (l) {
                                    for (a in l)
                                        !l.hasOwnProperty(a) || u && u.hasOwnProperty(a) || (n || (n = {}),
                                        n[a] = "");
                                    for (a in u)
                                        u.hasOwnProperty(a) && l[a] !== u[a] && (n || (n = {}),
                                        n[a] = u[a])
                                } else
                                    n || (o || (o = []),
                                    o.push(c, n)),
                                    n = u;
                            else
                                "dangerouslySetInnerHTML" === c ? (u = u ? u.__html : void 0,
                                l = l ? l.__html : void 0,
                                null != u && l !== u && (o = o || []).push(c, u)) : "children" === c ? "string" !== typeof u && "number" !== typeof u || (o = o || []).push(c, "" + u) : "suppressContentEditableWarning" !== c && "suppressHydrationWarning" !== c && (s.hasOwnProperty(c) ? (null != u && "onScroll" === c && zr("scroll", e),
                                o || l === u || (o = [])) : (o = o || []).push(c, u))
                    }
                    n && (o = o || []).push("style", n);
                    var c = o;
                    (t.updateQueue = c) && (t.flags |= 4)
                }
            }
            ,
            Ds = function(e, t, n, r) {
                n !== r && (t.flags |= 4)
            }
            ;
            var Ks = !1
              , Zs = !1
              , Qs = "function" === typeof WeakSet ? WeakSet : Set
              , Js = null;
            function $s(e, t) {
                var n = e.ref;
                if (null !== n)
                    if ("function" === typeof n)
                        try {
                            n(null)
                        } catch (r) {
                            Eu(e, t, r)
                        }
                    else
                        n.current = null
            }
            function el(e, t, n) {
                try {
                    n()
                } catch (r) {
                    Eu(e, t, r)
                }
            }
            var tl = !1;
            function nl(e, t, n) {
                var r = t.updateQueue;
                if (null !== (r = null !== r ? r.lastEffect : null)) {
                    var i = r = r.next;
                    do {
                        if ((i.tag & e) === e) {
                            var a = i.destroy;
                            i.destroy = void 0,
                            void 0 !== a && el(t, n, a)
                        }
                        i = i.next
                    } while (i !== r)
                }
            }
            function rl(e, t) {
                if (null !== (t = null !== (t = t.updateQueue) ? t.lastEffect : null)) {
                    var n = t = t.next;
                    do {
                        if ((n.tag & e) === e) {
                            var r = n.create;
                            n.destroy = r()
                        }
                        n = n.next
                    } while (n !== t)
                }
            }
            function il(e) {
                var t = e.ref;
                if (null !== t) {
                    var n = e.stateNode;
                    e.tag,
                    e = n,
                    "function" === typeof t ? t(e) : t.current = e
                }
            }
            function al(e) {
                var t = e.alternate;
                null !== t && (e.alternate = null,
                al(t)),
                e.child = null,
                e.deletions = null,
                e.sibling = null,
                5 === e.tag && (null !== (t = e.stateNode) && (delete t[fi],
                delete t[hi],
                delete t[mi],
                delete t[vi],
                delete t[gi])),
                e.stateNode = null,
                e.return = null,
                e.dependencies = null,
                e.memoizedProps = null,
                e.memoizedState = null,
                e.pendingProps = null,
                e.stateNode = null,
                e.updateQueue = null
            }
            function ol(e) {
                return 5 === e.tag || 3 === e.tag || 4 === e.tag
            }
            function sl(e) {
                e: for (; ; ) {
                    for (; null === e.sibling; ) {
                        if (null === e.return || ol(e.return))
                            return null;
                        e = e.return
                    }
                    for (e.sibling.return = e.return,
                    e = e.sibling; 5 !== e.tag && 6 !== e.tag && 18 !== e.tag; ) {
                        if (2 & e.flags)
                            continue e;
                        if (null === e.child || 4 === e.tag)
                            continue e;
                        e.child.return = e,
                        e = e.child
                    }
                    if (!(2 & e.flags))
                        return e.stateNode
                }
            }
            function ll(e, t, n) {
                var r = e.tag;
                if (5 === r || 6 === r)
                    e = e.stateNode,
                    t ? 8 === n.nodeType ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (8 === n.nodeType ? (t = n.parentNode).insertBefore(e, n) : (t = n).appendChild(e),
                    null !== (n = n._reactRootContainer) && void 0 !== n || null !== t.onclick || (t.onclick = $r));
                else if (4 !== r && null !== (e = e.child))
                    for (ll(e, t, n),
                    e = e.sibling; null !== e; )
                        ll(e, t, n),
                        e = e.sibling
            }
            function ul(e, t, n) {
                var r = e.tag;
                if (5 === r || 6 === r)
                    e = e.stateNode,
                    t ? n.insertBefore(e, t) : n.appendChild(e);
                else if (4 !== r && null !== (e = e.child))
                    for (ul(e, t, n),
                    e = e.sibling; null !== e; )
                        ul(e, t, n),
                        e = e.sibling
            }
            var cl = null
              , dl = !1;
            function fl(e, t, n) {
                for (n = n.child; null !== n; )
                    hl(e, t, n),
                    n = n.sibling
            }
            function hl(e, t, n) {
                if (at && "function" === typeof at.onCommitFiberUnmount)
                    try {
                        at.onCommitFiberUnmount(it, n)
                    } catch (s) {}
                switch (n.tag) {
                case 5:
                    Zs || $s(n, t);
                case 6:
                    var r = cl
                      , i = dl;
                    cl = null,
                    fl(e, t, n),
                    dl = i,
                    null !== (cl = r) && (dl ? (e = cl,
                    n = n.stateNode,
                    8 === e.nodeType ? e.parentNode.removeChild(n) : e.removeChild(n)) : cl.removeChild(n.stateNode));
                    break;
                case 18:
                    null !== cl && (dl ? (e = cl,
                    n = n.stateNode,
                    8 === e.nodeType ? li(e.parentNode, n) : 1 === e.nodeType && li(e, n),
                    Ht(e)) : li(cl, n.stateNode));
                    break;
                case 4:
                    r = cl,
                    i = dl,
                    cl = n.stateNode.containerInfo,
                    dl = !0,
                    fl(e, t, n),
                    cl = r,
                    dl = i;
                    break;
                case 0:
                case 11:
                case 14:
                case 15:
                    if (!Zs && (null !== (r = n.updateQueue) && null !== (r = r.lastEffect))) {
                        i = r = r.next;
                        do {
                            var a = i
                              , o = a.destroy;
                            a = a.tag,
                            void 0 !== o && (0 !== (2 & a) || 0 !== (4 & a)) && el(n, t, o),
                            i = i.next
                        } while (i !== r)
                    }
                    fl(e, t, n);
                    break;
                case 1:
                    if (!Zs && ($s(n, t),
                    "function" === typeof (r = n.stateNode).componentWillUnmount))
                        try {
                            r.props = n.memoizedProps,
                            r.state = n.memoizedState,
                            r.componentWillUnmount()
                        } catch (s) {
                            Eu(n, t, s)
                        }
                    fl(e, t, n);
                    break;
                case 21:
                    fl(e, t, n);
                    break;
                case 22:
                    1 & n.mode ? (Zs = (r = Zs) || null !== n.memoizedState,
                    fl(e, t, n),
                    Zs = r) : fl(e, t, n);
                    break;
                default:
                    fl(e, t, n)
                }
            }
            function pl(e) {
                var t = e.updateQueue;
                if (null !== t) {
                    e.updateQueue = null;
                    var n = e.stateNode;
                    null === n && (n = e.stateNode = new Qs),
                    t.forEach((function(t) {
                        var r = Ru.bind(null, e, t);
                        n.has(t) || (n.add(t),
                        t.then(r, r))
                    }
                    ))
                }
            }
            function ml(e, t) {
                var n = t.deletions;
                if (null !== n)
                    for (var r = 0; r < n.length; r++) {
                        var i = n[r];
                        try {
                            var o = e
                              , s = t
                              , l = s;
                            e: for (; null !== l; ) {
                                switch (l.tag) {
                                case 5:
                                    cl = l.stateNode,
                                    dl = !1;
                                    break e;
                                case 3:
                                case 4:
                                    cl = l.stateNode.containerInfo,
                                    dl = !0;
                                    break e
                                }
                                l = l.return
                            }
                            if (null === cl)
                                throw Error(a(160));
                            hl(o, s, i),
                            cl = null,
                            dl = !1;
                            var u = i.alternate;
                            null !== u && (u.return = null),
                            i.return = null
                        } catch (c) {
                            Eu(i, t, c)
                        }
                    }
                if (12854 & t.subtreeFlags)
                    for (t = t.child; null !== t; )
                        vl(t, e),
                        t = t.sibling
            }
            function vl(e, t) {
                var n = e.alternate
                  , r = e.flags;
                switch (e.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                    if (ml(t, e),
                    gl(e),
                    4 & r) {
                        try {
                            nl(3, e, e.return),
                            rl(3, e)
                        } catch (v) {
                            Eu(e, e.return, v)
                        }
                        try {
                            nl(5, e, e.return)
                        } catch (v) {
                            Eu(e, e.return, v)
                        }
                    }
                    break;
                case 1:
                    ml(t, e),
                    gl(e),
                    512 & r && null !== n && $s(n, n.return);
                    break;
                case 5:
                    if (ml(t, e),
                    gl(e),
                    512 & r && null !== n && $s(n, n.return),
                    32 & e.flags) {
                        var i = e.stateNode;
                        try {
                            fe(i, "")
                        } catch (v) {
                            Eu(e, e.return, v)
                        }
                    }
                    if (4 & r && null != (i = e.stateNode)) {
                        var o = e.memoizedProps
                          , s = null !== n ? n.memoizedProps : o
                          , l = e.type
                          , u = e.updateQueue;
                        if (e.updateQueue = null,
                        null !== u)
                            try {
                                "input" === l && "radio" === o.type && null != o.name && Q(i, o),
                                ye(l, s);
                                var c = ye(l, o);
                                for (s = 0; s < u.length; s += 2) {
                                    var d = u[s]
                                      , f = u[s + 1];
                                    "style" === d ? ve(i, f) : "dangerouslySetInnerHTML" === d ? de(i, f) : "children" === d ? fe(i, f) : y(i, d, f, c)
                                }
                                switch (l) {
                                case "input":
                                    J(i, o);
                                    break;
                                case "textarea":
                                    ae(i, o);
                                    break;
                                case "select":
                                    var h = i._wrapperState.wasMultiple;
                                    i._wrapperState.wasMultiple = !!o.multiple;
                                    var p = o.value;
                                    null != p ? ne(i, !!o.multiple, p, !1) : h !== !!o.multiple && (null != o.defaultValue ? ne(i, !!o.multiple, o.defaultValue, !0) : ne(i, !!o.multiple, o.multiple ? [] : "", !1))
                                }
                                i[hi] = o
                            } catch (v) {
                                Eu(e, e.return, v)
                            }
                    }
                    break;
                case 6:
                    if (ml(t, e),
                    gl(e),
                    4 & r) {
                        if (null === e.stateNode)
                            throw Error(a(162));
                        i = e.stateNode,
                        o = e.memoizedProps;
                        try {
                            i.nodeValue = o
                        } catch (v) {
                            Eu(e, e.return, v)
                        }
                    }
                    break;
                case 3:
                    if (ml(t, e),
                    gl(e),
                    4 & r && null !== n && n.memoizedState.isDehydrated)
                        try {
                            Ht(t.containerInfo)
                        } catch (v) {
                            Eu(e, e.return, v)
                        }
                    break;
                case 4:
                default:
                    ml(t, e),
                    gl(e);
                    break;
                case 13:
                    ml(t, e),
                    gl(e),
                    8192 & (i = e.child).flags && (o = null !== i.memoizedState,
                    i.stateNode.isHidden = o,
                    !o || null !== i.alternate && null !== i.alternate.memoizedState || (Vl = Qe())),
                    4 & r && pl(e);
                    break;
                case 22:
                    if (d = null !== n && null !== n.memoizedState,
                    1 & e.mode ? (Zs = (c = Zs) || d,
                    ml(t, e),
                    Zs = c) : ml(t, e),
                    gl(e),
                    8192 & r) {
                        if (c = null !== e.memoizedState,
                        (e.stateNode.isHidden = c) && !d && 0 !== (1 & e.mode))
                            for (Js = e,
                            d = e.child; null !== d; ) {
                                for (f = Js = d; null !== Js; ) {
                                    switch (p = (h = Js).child,
                                    h.tag) {
                                    case 0:
                                    case 11:
                                    case 14:
                                    case 15:
                                        nl(4, h, h.return);
                                        break;
                                    case 1:
                                        $s(h, h.return);
                                        var m = h.stateNode;
                                        if ("function" === typeof m.componentWillUnmount) {
                                            r = h,
                                            n = h.return;
                                            try {
                                                t = r,
                                                m.props = t.memoizedProps,
                                                m.state = t.memoizedState,
                                                m.componentWillUnmount()
                                            } catch (v) {
                                                Eu(r, n, v)
                                            }
                                        }
                                        break;
                                    case 5:
                                        $s(h, h.return);
                                        break;
                                    case 22:
                                        if (null !== h.memoizedState) {
                                            bl(f);
                                            continue
                                        }
                                    }
                                    null !== p ? (p.return = h,
                                    Js = p) : bl(f)
                                }
                                d = d.sibling
                            }
                        e: for (d = null,
                        f = e; ; ) {
                            if (5 === f.tag) {
                                if (null === d) {
                                    d = f;
                                    try {
                                        i = f.stateNode,
                                        c ? "function" === typeof (o = i.style).setProperty ? o.setProperty("display", "none", "important") : o.display = "none" : (l = f.stateNode,
                                        s = void 0 !== (u = f.memoizedProps.style) && null !== u && u.hasOwnProperty("display") ? u.display : null,
                                        l.style.display = me("display", s))
                                    } catch (v) {
                                        Eu(e, e.return, v)
                                    }
                                }
                            } else if (6 === f.tag) {
                                if (null === d)
                                    try {
                                        f.stateNode.nodeValue = c ? "" : f.memoizedProps
                                    } catch (v) {
                                        Eu(e, e.return, v)
                                    }
                            } else if ((22 !== f.tag && 23 !== f.tag || null === f.memoizedState || f === e) && null !== f.child) {
                                f.child.return = f,
                                f = f.child;
                                continue
                            }
                            if (f === e)
                                break e;
                            for (; null === f.sibling; ) {
                                if (null === f.return || f.return === e)
                                    break e;
                                d === f && (d = null),
                                f = f.return
                            }
                            d === f && (d = null),
                            f.sibling.return = f.return,
                            f = f.sibling
                        }
                    }
                    break;
                case 19:
                    ml(t, e),
                    gl(e),
                    4 & r && pl(e);
                case 21:
                }
            }
            function gl(e) {
                var t = e.flags;
                if (2 & t) {
                    try {
                        e: {
                            for (var n = e.return; null !== n; ) {
                                if (ol(n)) {
                                    var r = n;
                                    break e
                                }
                                n = n.return
                            }
                            throw Error(a(160))
                        }
                        switch (r.tag) {
                        case 5:
                            var i = r.stateNode;
                            32 & r.flags && (fe(i, ""),
                            r.flags &= -33),
                            ul(e, sl(e), i);
                            break;
                        case 3:
                        case 4:
                            var o = r.stateNode.containerInfo;
                            ll(e, sl(e), o);
                            break;
                        default:
                            throw Error(a(161))
                        }
                    } catch (s) {
                        Eu(e, e.return, s)
                    }
                    e.flags &= -3
                }
                4096 & t && (e.flags &= -4097)
            }
            function _l(e, t, n) {
                Js = e,
                yl(e, t, n)
            }
            function yl(e, t, n) {
                for (var r = 0 !== (1 & e.mode); null !== Js; ) {
                    var i = Js
                      , a = i.child;
                    if (22 === i.tag && r) {
                        var o = null !== i.memoizedState || Ks;
                        if (!o) {
                            var s = i.alternate
                              , l = null !== s && null !== s.memoizedState || Zs;
                            s = Ks;
                            var u = Zs;
                            if (Ks = o,
                            (Zs = l) && !u)
                                for (Js = i; null !== Js; )
                                    l = (o = Js).child,
                                    22 === o.tag && null !== o.memoizedState ? Sl(i) : null !== l ? (l.return = o,
                                    Js = l) : Sl(i);
                            for (; null !== a; )
                                Js = a,
                                yl(a, t, n),
                                a = a.sibling;
                            Js = i,
                            Ks = s,
                            Zs = u
                        }
                        xl(e)
                    } else
                        0 !== (8772 & i.subtreeFlags) && null !== a ? (a.return = i,
                        Js = a) : xl(e)
                }
            }
            function xl(e) {
                for (; null !== Js; ) {
                    var t = Js;
                    if (0 !== (8772 & t.flags)) {
                        var n = t.alternate;
                        try {
                            if (0 !== (8772 & t.flags))
                                switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    Zs || rl(5, t);
                                    break;
                                case 1:
                                    var r = t.stateNode;
                                    if (4 & t.flags && !Zs)
                                        if (null === n)
                                            r.componentDidMount();
                                        else {
                                            var i = t.elementType === t.type ? n.memoizedProps : va(t.type, n.memoizedProps);
                                            r.componentDidUpdate(i, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate)
                                        }
                                    var o = t.updateQueue;
                                    null !== o && Fa(t, o, r);
                                    break;
                                case 3:
                                    var s = t.updateQueue;
                                    if (null !== s) {
                                        if (n = null,
                                        null !== t.child)
                                            switch (t.child.tag) {
                                            case 5:
                                            case 1:
                                                n = t.child.stateNode
                                            }
                                        Fa(t, s, n)
                                    }
                                    break;
                                case 5:
                                    var l = t.stateNode;
                                    if (null === n && 4 & t.flags) {
                                        n = l;
                                        var u = t.memoizedProps;
                                        switch (t.type) {
                                        case "button":
                                        case "input":
                                        case "select":
                                        case "textarea":
                                            u.autoFocus && n.focus();
                                            break;
                                        case "img":
                                            u.src && (n.src = u.src)
                                        }
                                    }
                                    break;
                                case 6:
                                case 4:
                                case 12:
                                case 19:
                                case 17:
                                case 21:
                                case 22:
                                case 23:
                                case 25:
                                    break;
                                case 13:
                                    if (null === t.memoizedState) {
                                        var c = t.alternate;
                                        if (null !== c) {
                                            var d = c.memoizedState;
                                            if (null !== d) {
                                                var f = d.dehydrated;
                                                null !== f && Ht(f)
                                            }
                                        }
                                    }
                                    break;
                                default:
                                    throw Error(a(163))
                                }
                            Zs || 512 & t.flags && il(t)
                        } catch (h) {
                            Eu(t, t.return, h)
                        }
                    }
                    if (t === e) {
                        Js = null;
                        break
                    }
                    if (null !== (n = t.sibling)) {
                        n.return = t.return,
                        Js = n;
                        break
                    }
                    Js = t.return
                }
            }
            function bl(e) {
                for (; null !== Js; ) {
                    var t = Js;
                    if (t === e) {
                        Js = null;
                        break
                    }
                    var n = t.sibling;
                    if (null !== n) {
                        n.return = t.return,
                        Js = n;
                        break
                    }
                    Js = t.return
                }
            }
            function Sl(e) {
                for (; null !== Js; ) {
                    var t = Js;
                    try {
                        switch (t.tag) {
                        case 0:
                        case 11:
                        case 15:
                            var n = t.return;
                            try {
                                rl(4, t)
                            } catch (l) {
                                Eu(t, n, l)
                            }
                            break;
                        case 1:
                            var r = t.stateNode;
                            if ("function" === typeof r.componentDidMount) {
                                var i = t.return;
                                try {
                                    r.componentDidMount()
                                } catch (l) {
                                    Eu(t, i, l)
                                }
                            }
                            var a = t.return;
                            try {
                                il(t)
                            } catch (l) {
                                Eu(t, a, l)
                            }
                            break;
                        case 5:
                            var o = t.return;
                            try {
                                il(t)
                            } catch (l) {
                                Eu(t, o, l)
                            }
                        }
                    } catch (l) {
                        Eu(t, t.return, l)
                    }
                    if (t === e) {
                        Js = null;
                        break
                    }
                    var s = t.sibling;
                    if (null !== s) {
                        s.return = t.return,
                        Js = s;
                        break
                    }
                    Js = t.return
                }
            }
            var Ml, El = Math.ceil, Tl = x.ReactCurrentDispatcher, wl = x.ReactCurrentOwner, Al = x.ReactCurrentBatchConfig, Rl = 0, Cl = null, kl = null, Pl = 0, Ll = 0, Ul = Ei(0), Dl = 0, Nl = null, Il = 0, Ol = 0, Fl = 0, zl = null, Bl = null, Vl = 0, Hl = 1 / 0, Gl = null, Wl = !1, Xl = null, jl = null, ql = !1, Yl = null, Kl = 0, Zl = 0, Ql = null, Jl = -1, $l = 0;
            function eu() {
                return 0 !== (6 & Rl) ? Qe() : -1 !== Jl ? Jl : Jl = Qe()
            }
            function tu(e) {
                return 0 === (1 & e.mode) ? 1 : 0 !== (2 & Rl) && 0 !== Pl ? Pl & -Pl : null !== ma.transition ? (0 === $l && ($l = mt()),
                $l) : 0 !== (e = yt) ? e : e = void 0 === (e = window.event) ? 16 : Zt(e.type)
            }
            function nu(e, t, n, r) {
                if (50 < Zl)
                    throw Zl = 0,
                    Ql = null,
                    Error(a(185));
                gt(e, n, r),
                0 !== (2 & Rl) && e === Cl || (e === Cl && (0 === (2 & Rl) && (Ol |= n),
                4 === Dl && su(e, Pl)),
                ru(e, r),
                1 === n && 0 === Rl && 0 === (1 & t.mode) && (Hl = Qe() + 500,
                zi && Hi()))
            }
            function ru(e, t) {
                var n = e.callbackNode;
                !function(e, t) {
                    for (var n = e.suspendedLanes, r = e.pingedLanes, i = e.expirationTimes, a = e.pendingLanes; 0 < a; ) {
                        var o = 31 - ot(a)
                          , s = 1 << o
                          , l = i[o];
                        -1 === l ? 0 !== (s & n) && 0 === (s & r) || (i[o] = ht(s, t)) : l <= t && (e.expiredLanes |= s),
                        a &= ~s
                    }
                }(e, t);
                var r = ft(e, e === Cl ? Pl : 0);
                if (0 === r)
                    null !== n && Ye(n),
                    e.callbackNode = null,
                    e.callbackPriority = 0;
                else if (t = r & -r,
                e.callbackPriority !== t) {
                    if (null != n && Ye(n),
                    1 === t)
                        0 === e.tag ? function(e) {
                            zi = !0,
                            Vi(e)
                        }(lu.bind(null, e)) : Vi(lu.bind(null, e)),
                        oi((function() {
                            0 === (6 & Rl) && Hi()
                        }
                        )),
                        n = null;
                    else {
                        switch (xt(r)) {
                        case 1:
                            n = $e;
                            break;
                        case 4:
                            n = et;
                            break;
                        case 16:
                        default:
                            n = tt;
                            break;
                        case 536870912:
                            n = rt
                        }
                        n = Cu(n, iu.bind(null, e))
                    }
                    e.callbackPriority = t,
                    e.callbackNode = n
                }
            }
            function iu(e, t) {
                if (Jl = -1,
                $l = 0,
                0 !== (6 & Rl))
                    throw Error(a(327));
                var n = e.callbackNode;
                if (Su() && e.callbackNode !== n)
                    return null;
                var r = ft(e, e === Cl ? Pl : 0);
                if (0 === r)
                    return null;
                if (0 !== (30 & r) || 0 !== (r & e.expiredLanes) || t)
                    t = vu(e, r);
                else {
                    t = r;
                    var i = Rl;
                    Rl |= 2;
                    var o = pu();
                    for (Cl === e && Pl === t || (Gl = null,
                    Hl = Qe() + 500,
                    fu(e, t)); ; )
                        try {
                            _u();
                            break
                        } catch (l) {
                            hu(e, l)
                        }
                    ba(),
                    Tl.current = o,
                    Rl = i,
                    null !== kl ? t = 0 : (Cl = null,
                    Pl = 0,
                    t = Dl)
                }
                if (0 !== t) {
                    if (2 === t && (0 !== (i = pt(e)) && (r = i,
                    t = au(e, i))),
                    1 === t)
                        throw n = Nl,
                        fu(e, 0),
                        su(e, r),
                        ru(e, Qe()),
                        n;
                    if (6 === t)
                        su(e, r);
                    else {
                        if (i = e.current.alternate,
                        0 === (30 & r) && !function(e) {
                            for (var t = e; ; ) {
                                if (16384 & t.flags) {
                                    var n = t.updateQueue;
                                    if (null !== n && null !== (n = n.stores))
                                        for (var r = 0; r < n.length; r++) {
                                            var i = n[r]
                                              , a = i.getSnapshot;
                                            i = i.value;
                                            try {
                                                if (!sr(a(), i))
                                                    return !1
                                            } catch (s) {
                                                return !1
                                            }
                                        }
                                }
                                if (n = t.child,
                                16384 & t.subtreeFlags && null !== n)
                                    n.return = t,
                                    t = n;
                                else {
                                    if (t === e)
                                        break;
                                    for (; null === t.sibling; ) {
                                        if (null === t.return || t.return === e)
                                            return !0;
                                        t = t.return
                                    }
                                    t.sibling.return = t.return,
                                    t = t.sibling
                                }
                            }
                            return !0
                        }(i) && (2 === (t = vu(e, r)) && (0 !== (o = pt(e)) && (r = o,
                        t = au(e, o))),
                        1 === t))
                            throw n = Nl,
                            fu(e, 0),
                            su(e, r),
                            ru(e, Qe()),
                            n;
                        switch (e.finishedWork = i,
                        e.finishedLanes = r,
                        t) {
                        case 0:
                        case 1:
                            throw Error(a(345));
                        case 2:
                        case 5:
                            bu(e, Bl, Gl);
                            break;
                        case 3:
                            if (su(e, r),
                            (130023424 & r) === r && 10 < (t = Vl + 500 - Qe())) {
                                if (0 !== ft(e, 0))
                                    break;
                                if (((i = e.suspendedLanes) & r) !== r) {
                                    eu(),
                                    e.pingedLanes |= e.suspendedLanes & i;
                                    break
                                }
                                e.timeoutHandle = ri(bu.bind(null, e, Bl, Gl), t);
                                break
                            }
                            bu(e, Bl, Gl);
                            break;
                        case 4:
                            if (su(e, r),
                            (4194240 & r) === r)
                                break;
                            for (t = e.eventTimes,
                            i = -1; 0 < r; ) {
                                var s = 31 - ot(r);
                                o = 1 << s,
                                (s = t[s]) > i && (i = s),
                                r &= ~o
                            }
                            if (r = i,
                            10 < (r = (120 > (r = Qe() - r) ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * El(r / 1960)) - r)) {
                                e.timeoutHandle = ri(bu.bind(null, e, Bl, Gl), r);
                                break
                            }
                            bu(e, Bl, Gl);
                            break;
                        default:
                            throw Error(a(329))
                        }
                    }
                }
                return ru(e, Qe()),
                e.callbackNode === n ? iu.bind(null, e) : null
            }
            function au(e, t) {
                var n = zl;
                return e.current.memoizedState.isDehydrated && (fu(e, t).flags |= 256),
                2 !== (e = vu(e, t)) && (t = Bl,
                Bl = n,
                null !== t && ou(t)),
                e
            }
            function ou(e) {
                null === Bl ? Bl = e : Bl.push.apply(Bl, e)
            }
            function su(e, t) {
                for (t &= ~Fl,
                t &= ~Ol,
                e.suspendedLanes |= t,
                e.pingedLanes &= ~t,
                e = e.expirationTimes; 0 < t; ) {
                    var n = 31 - ot(t)
                      , r = 1 << n;
                    e[n] = -1,
                    t &= ~r
                }
            }
            function lu(e) {
                if (0 !== (6 & Rl))
                    throw Error(a(327));
                Su();
                var t = ft(e, 0);
                if (0 === (1 & t))
                    return ru(e, Qe()),
                    null;
                var n = vu(e, t);
                if (0 !== e.tag && 2 === n) {
                    var r = pt(e);
                    0 !== r && (t = r,
                    n = au(e, r))
                }
                if (1 === n)
                    throw n = Nl,
                    fu(e, 0),
                    su(e, t),
                    ru(e, Qe()),
                    n;
                if (6 === n)
                    throw Error(a(345));
                return e.finishedWork = e.current.alternate,
                e.finishedLanes = t,
                bu(e, Bl, Gl),
                ru(e, Qe()),
                null
            }
            function uu(e, t) {
                var n = Rl;
                Rl |= 1;
                try {
                    return e(t)
                } finally {
                    0 === (Rl = n) && (Hl = Qe() + 500,
                    zi && Hi())
                }
            }
            function cu(e) {
                null !== Yl && 0 === Yl.tag && 0 === (6 & Rl) && Su();
                var t = Rl;
                Rl |= 1;
                var n = Al.transition
                  , r = yt;
                try {
                    if (Al.transition = null,
                    yt = 1,
                    e)
                        return e()
                } finally {
                    yt = r,
                    Al.transition = n,
                    0 === (6 & (Rl = t)) && Hi()
                }
            }
            function du() {
                Ll = Ul.current,
                Ti(Ul)
            }
            function fu(e, t) {
                e.finishedWork = null,
                e.finishedLanes = 0;
                var n = e.timeoutHandle;
                if (-1 !== n && (e.timeoutHandle = -1,
                ii(n)),
                null !== kl)
                    for (n = kl.return; null !== n; ) {
                        var r = n;
                        switch (ta(r),
                        r.tag) {
                        case 1:
                            null !== (r = r.type.childContextTypes) && void 0 !== r && Ui();
                            break;
                        case 3:
                            io(),
                            Ti(Ci),
                            Ti(Ri),
                            co();
                            break;
                        case 5:
                            oo(r);
                            break;
                        case 4:
                            io();
                            break;
                        case 13:
                        case 19:
                            Ti(so);
                            break;
                        case 10:
                            Sa(r.type._context);
                            break;
                        case 22:
                        case 23:
                            du()
                        }
                        n = n.return
                    }
                if (Cl = e,
                kl = e = Uu(e.current, null),
                Pl = Ll = t,
                Dl = 0,
                Nl = null,
                Fl = Ol = Il = 0,
                Bl = zl = null,
                null !== wa) {
                    for (t = 0; t < wa.length; t++)
                        if (null !== (r = (n = wa[t]).interleaved)) {
                            n.interleaved = null;
                            var i = r.next
                              , a = n.pending;
                            if (null !== a) {
                                var o = a.next;
                                a.next = i,
                                r.next = o
                            }
                            n.pending = r
                        }
                    wa = null
                }
                return e
            }
            function hu(e, t) {
                for (; ; ) {
                    var n = kl;
                    try {
                        if (ba(),
                        fo.current = os,
                        _o) {
                            for (var r = mo.memoizedState; null !== r; ) {
                                var i = r.queue;
                                null !== i && (i.pending = null),
                                r = r.next
                            }
                            _o = !1
                        }
                        if (po = 0,
                        go = vo = mo = null,
                        yo = !1,
                        xo = 0,
                        wl.current = null,
                        null === n || null === n.return) {
                            Dl = 1,
                            Nl = t,
                            kl = null;
                            break
                        }
                        e: {
                            var o = e
                              , s = n.return
                              , l = n
                              , u = t;
                            if (t = Pl,
                            l.flags |= 32768,
                            null !== u && "object" === typeof u && "function" === typeof u.then) {
                                var c = u
                                  , d = l
                                  , f = d.tag;
                                if (0 === (1 & d.mode) && (0 === f || 11 === f || 15 === f)) {
                                    var h = d.alternate;
                                    h ? (d.updateQueue = h.updateQueue,
                                    d.memoizedState = h.memoizedState,
                                    d.lanes = h.lanes) : (d.updateQueue = null,
                                    d.memoizedState = null)
                                }
                                var p = gs(s);
                                if (null !== p) {
                                    p.flags &= -257,
                                    _s(p, s, l, 0, t),
                                    1 & p.mode && vs(o, c, t),
                                    u = c;
                                    var m = (t = p).updateQueue;
                                    if (null === m) {
                                        var v = new Set;
                                        v.add(u),
                                        t.updateQueue = v
                                    } else
                                        m.add(u);
                                    break e
                                }
                                if (0 === (1 & t)) {
                                    vs(o, c, t),
                                    mu();
                                    break e
                                }
                                u = Error(a(426))
                            } else if (ia && 1 & l.mode) {
                                var g = gs(s);
                                if (null !== g) {
                                    0 === (65536 & g.flags) && (g.flags |= 256),
                                    _s(g, s, l, 0, t),
                                    pa(cs(u, l));
                                    break e
                                }
                            }
                            o = u = cs(u, l),
                            4 !== Dl && (Dl = 2),
                            null === zl ? zl = [o] : zl.push(o),
                            o = s;
                            do {
                                switch (o.tag) {
                                case 3:
                                    o.flags |= 65536,
                                    t &= -t,
                                    o.lanes |= t,
                                    Ia(o, ps(0, u, t));
                                    break e;
                                case 1:
                                    l = u;
                                    var _ = o.type
                                      , y = o.stateNode;
                                    if (0 === (128 & o.flags) && ("function" === typeof _.getDerivedStateFromError || null !== y && "function" === typeof y.componentDidCatch && (null === jl || !jl.has(y)))) {
                                        o.flags |= 65536,
                                        t &= -t,
                                        o.lanes |= t,
                                        Ia(o, ms(o, l, t));
                                        break e
                                    }
                                }
                                o = o.return
                            } while (null !== o)
                        }
                        xu(n)
                    } catch (x) {
                        t = x,
                        kl === n && null !== n && (kl = n = n.return);
                        continue
                    }
                    break
                }
            }
            function pu() {
                var e = Tl.current;
                return Tl.current = os,
                null === e ? os : e
            }
            function mu() {
                0 !== Dl && 3 !== Dl && 2 !== Dl || (Dl = 4),
                null === Cl || 0 === (268435455 & Il) && 0 === (268435455 & Ol) || su(Cl, Pl)
            }
            function vu(e, t) {
                var n = Rl;
                Rl |= 2;
                var r = pu();
                for (Cl === e && Pl === t || (Gl = null,
                fu(e, t)); ; )
                    try {
                        gu();
                        break
                    } catch (i) {
                        hu(e, i)
                    }
                if (ba(),
                Rl = n,
                Tl.current = r,
                null !== kl)
                    throw Error(a(261));
                return Cl = null,
                Pl = 0,
                Dl
            }
            function gu() {
                for (; null !== kl; )
                    yu(kl)
            }
            function _u() {
                for (; null !== kl && !Ke(); )
                    yu(kl)
            }
            function yu(e) {
                var t = Ml(e.alternate, e, Ll);
                e.memoizedProps = e.pendingProps,
                null === t ? xu(e) : kl = t,
                wl.current = null
            }
            function xu(e) {
                var t = e;
                do {
                    var n = t.alternate;
                    if (e = t.return,
                    0 === (32768 & t.flags)) {
                        if (null !== (n = qs(n, t, Ll)))
                            return void (kl = n)
                    } else {
                        if (null !== (n = Ys(n, t)))
                            return n.flags &= 32767,
                            void (kl = n);
                        if (null === e)
                            return Dl = 6,
                            void (kl = null);
                        e.flags |= 32768,
                        e.subtreeFlags = 0,
                        e.deletions = null
                    }
                    if (null !== (t = t.sibling))
                        return void (kl = t);
                    kl = t = e
                } while (null !== t);
                0 === Dl && (Dl = 5)
            }
            function bu(e, t, n) {
                var r = yt
                  , i = Al.transition;
                try {
                    Al.transition = null,
                    yt = 1,
                    function(e, t, n, r) {
                        do {
                            Su()
                        } while (null !== Yl);
                        if (0 !== (6 & Rl))
                            throw Error(a(327));
                        n = e.finishedWork;
                        var i = e.finishedLanes;
                        if (null === n)
                            return null;
                        if (e.finishedWork = null,
                        e.finishedLanes = 0,
                        n === e.current)
                            throw Error(a(177));
                        e.callbackNode = null,
                        e.callbackPriority = 0;
                        var o = n.lanes | n.childLanes;
                        if (function(e, t) {
                            var n = e.pendingLanes & ~t;
                            e.pendingLanes = t,
                            e.suspendedLanes = 0,
                            e.pingedLanes = 0,
                            e.expiredLanes &= t,
                            e.mutableReadLanes &= t,
                            e.entangledLanes &= t,
                            t = e.entanglements;
                            var r = e.eventTimes;
                            for (e = e.expirationTimes; 0 < n; ) {
                                var i = 31 - ot(n)
                                  , a = 1 << i;
                                t[i] = 0,
                                r[i] = -1,
                                e[i] = -1,
                                n &= ~a
                            }
                        }(e, o),
                        e === Cl && (kl = Cl = null,
                        Pl = 0),
                        0 === (2064 & n.subtreeFlags) && 0 === (2064 & n.flags) || ql || (ql = !0,
                        Cu(tt, (function() {
                            return Su(),
                            null
                        }
                        ))),
                        o = 0 !== (15990 & n.flags),
                        0 !== (15990 & n.subtreeFlags) || o) {
                            o = Al.transition,
                            Al.transition = null;
                            var s = yt;
                            yt = 1;
                            var l = Rl;
                            Rl |= 4,
                            wl.current = null,
                            function(e, t) {
                                if (ei = Wt,
                                hr(e = fr())) {
                                    if ("selectionStart"in e)
                                        var n = {
                                            start: e.selectionStart,
                                            end: e.selectionEnd
                                        };
                                    else
                                        e: {
                                            var r = (n = (n = e.ownerDocument) && n.defaultView || window).getSelection && n.getSelection();
                                            if (r && 0 !== r.rangeCount) {
                                                n = r.anchorNode;
                                                var i = r.anchorOffset
                                                  , o = r.focusNode;
                                                r = r.focusOffset;
                                                try {
                                                    n.nodeType,
                                                    o.nodeType
                                                } catch (b) {
                                                    n = null;
                                                    break e
                                                }
                                                var s = 0
                                                  , l = -1
                                                  , u = -1
                                                  , c = 0
                                                  , d = 0
                                                  , f = e
                                                  , h = null;
                                                t: for (; ; ) {
                                                    for (var p; f !== n || 0 !== i && 3 !== f.nodeType || (l = s + i),
                                                    f !== o || 0 !== r && 3 !== f.nodeType || (u = s + r),
                                                    3 === f.nodeType && (s += f.nodeValue.length),
                                                    null !== (p = f.firstChild); )
                                                        h = f,
                                                        f = p;
                                                    for (; ; ) {
                                                        if (f === e)
                                                            break t;
                                                        if (h === n && ++c === i && (l = s),
                                                        h === o && ++d === r && (u = s),
                                                        null !== (p = f.nextSibling))
                                                            break;
                                                        h = (f = h).parentNode
                                                    }
                                                    f = p
                                                }
                                                n = -1 === l || -1 === u ? null : {
                                                    start: l,
                                                    end: u
                                                }
                                            } else
                                                n = null
                                        }
                                    n = n || {
                                        start: 0,
                                        end: 0
                                    }
                                } else
                                    n = null;
                                for (ti = {
                                    focusedElem: e,
                                    selectionRange: n
                                },
                                Wt = !1,
                                Js = t; null !== Js; )
                                    if (e = (t = Js).child,
                                    0 !== (1028 & t.subtreeFlags) && null !== e)
                                        e.return = t,
                                        Js = e;
                                    else
                                        for (; null !== Js; ) {
                                            t = Js;
                                            try {
                                                var m = t.alternate;
                                                if (0 !== (1024 & t.flags))
                                                    switch (t.tag) {
                                                    case 0:
                                                    case 11:
                                                    case 15:
                                                    case 5:
                                                    case 6:
                                                    case 4:
                                                    case 17:
                                                        break;
                                                    case 1:
                                                        if (null !== m) {
                                                            var v = m.memoizedProps
                                                              , g = m.memoizedState
                                                              , _ = t.stateNode
                                                              , y = _.getSnapshotBeforeUpdate(t.elementType === t.type ? v : va(t.type, v), g);
                                                            _.__reactInternalSnapshotBeforeUpdate = y
                                                        }
                                                        break;
                                                    case 3:
                                                        var x = t.stateNode.containerInfo;
                                                        1 === x.nodeType ? x.textContent = "" : 9 === x.nodeType && x.documentElement && x.removeChild(x.documentElement);
                                                        break;
                                                    default:
                                                        throw Error(a(163))
                                                    }
                                            } catch (b) {
                                                Eu(t, t.return, b)
                                            }
                                            if (null !== (e = t.sibling)) {
                                                e.return = t.return,
                                                Js = e;
                                                break
                                            }
                                            Js = t.return
                                        }
                                m = tl,
                                tl = !1
                            }(e, n),
                            vl(n, e),
                            pr(ti),
                            Wt = !!ei,
                            ti = ei = null,
                            e.current = n,
                            _l(n, e, i),
                            Ze(),
                            Rl = l,
                            yt = s,
                            Al.transition = o
                        } else
                            e.current = n;
                        if (ql && (ql = !1,
                        Yl = e,
                        Kl = i),
                        0 === (o = e.pendingLanes) && (jl = null),
                        function(e) {
                            if (at && "function" === typeof at.onCommitFiberRoot)
                                try {
                                    at.onCommitFiberRoot(it, e, void 0, 128 === (128 & e.current.flags))
                                } catch (t) {}
                        }(n.stateNode),
                        ru(e, Qe()),
                        null !== t)
                            for (r = e.onRecoverableError,
                            n = 0; n < t.length; n++)
                                r((i = t[n]).value, {
                                    componentStack: i.stack,
                                    digest: i.digest
                                });
                        if (Wl)
                            throw Wl = !1,
                            e = Xl,
                            Xl = null,
                            e;
                        0 !== (1 & Kl) && 0 !== e.tag && Su(),
                        0 !== (1 & (o = e.pendingLanes)) ? e === Ql ? Zl++ : (Zl = 0,
                        Ql = e) : Zl = 0,
                        Hi()
                    }(e, t, n, r)
                } finally {
                    Al.transition = i,
                    yt = r
                }
                return null
            }
            function Su() {
                if (null !== Yl) {
                    var e = xt(Kl)
                      , t = Al.transition
                      , n = yt;
                    try {
                        if (Al.transition = null,
                        yt = 16 > e ? 16 : e,
                        null === Yl)
                            var r = !1;
                        else {
                            if (e = Yl,
                            Yl = null,
                            Kl = 0,
                            0 !== (6 & Rl))
                                throw Error(a(331));
                            var i = Rl;
                            for (Rl |= 4,
                            Js = e.current; null !== Js; ) {
                                var o = Js
                                  , s = o.child;
                                if (0 !== (16 & Js.flags)) {
                                    var l = o.deletions;
                                    if (null !== l) {
                                        for (var u = 0; u < l.length; u++) {
                                            var c = l[u];
                                            for (Js = c; null !== Js; ) {
                                                var d = Js;
                                                switch (d.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    nl(8, d, o)
                                                }
                                                var f = d.child;
                                                if (null !== f)
                                                    f.return = d,
                                                    Js = f;
                                                else
                                                    for (; null !== Js; ) {
                                                        var h = (d = Js).sibling
                                                          , p = d.return;
                                                        if (al(d),
                                                        d === c) {
                                                            Js = null;
                                                            break
                                                        }
                                                        if (null !== h) {
                                                            h.return = p,
                                                            Js = h;
                                                            break
                                                        }
                                                        Js = p
                                                    }
                                            }
                                        }
                                        var m = o.alternate;
                                        if (null !== m) {
                                            var v = m.child;
                                            if (null !== v) {
                                                m.child = null;
                                                do {
                                                    var g = v.sibling;
                                                    v.sibling = null,
                                                    v = g
                                                } while (null !== v)
                                            }
                                        }
                                        Js = o
                                    }
                                }
                                if (0 !== (2064 & o.subtreeFlags) && null !== s)
                                    s.return = o,
                                    Js = s;
                                else
                                    e: for (; null !== Js; ) {
                                        if (0 !== (2048 & (o = Js).flags))
                                            switch (o.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                nl(9, o, o.return)
                                            }
                                        var _ = o.sibling;
                                        if (null !== _) {
                                            _.return = o.return,
                                            Js = _;
                                            break e
                                        }
                                        Js = o.return
                                    }
                            }
                            var y = e.current;
                            for (Js = y; null !== Js; ) {
                                var x = (s = Js).child;
                                if (0 !== (2064 & s.subtreeFlags) && null !== x)
                                    x.return = s,
                                    Js = x;
                                else
                                    e: for (s = y; null !== Js; ) {
                                        if (0 !== (2048 & (l = Js).flags))
                                            try {
                                                switch (l.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    rl(9, l)
                                                }
                                            } catch (S) {
                                                Eu(l, l.return, S)
                                            }
                                        if (l === s) {
                                            Js = null;
                                            break e
                                        }
                                        var b = l.sibling;
                                        if (null !== b) {
                                            b.return = l.return,
                                            Js = b;
                                            break e
                                        }
                                        Js = l.return
                                    }
                            }
                            if (Rl = i,
                            Hi(),
                            at && "function" === typeof at.onPostCommitFiberRoot)
                                try {
                                    at.onPostCommitFiberRoot(it, e)
                                } catch (S) {}
                            r = !0
                        }
                        return r
                    } finally {
                        yt = n,
                        Al.transition = t
                    }
                }
                return !1
            }
            function Mu(e, t, n) {
                e = Da(e, t = ps(0, t = cs(n, t), 1), 1),
                t = eu(),
                null !== e && (gt(e, 1, t),
                ru(e, t))
            }
            function Eu(e, t, n) {
                if (3 === e.tag)
                    Mu(e, e, n);
                else
                    for (; null !== t; ) {
                        if (3 === t.tag) {
                            Mu(t, e, n);
                            break
                        }
                        if (1 === t.tag) {
                            var r = t.stateNode;
                            if ("function" === typeof t.type.getDerivedStateFromError || "function" === typeof r.componentDidCatch && (null === jl || !jl.has(r))) {
                                t = Da(t, e = ms(t, e = cs(n, e), 1), 1),
                                e = eu(),
                                null !== t && (gt(t, 1, e),
                                ru(t, e));
                                break
                            }
                        }
                        t = t.return
                    }
            }
            function Tu(e, t, n) {
                var r = e.pingCache;
                null !== r && r.delete(t),
                t = eu(),
                e.pingedLanes |= e.suspendedLanes & n,
                Cl === e && (Pl & n) === n && (4 === Dl || 3 === Dl && (130023424 & Pl) === Pl && 500 > Qe() - Vl ? fu(e, 0) : Fl |= n),
                ru(e, t)
            }
            function wu(e, t) {
                0 === t && (0 === (1 & e.mode) ? t = 1 : (t = ct,
                0 === (130023424 & (ct <<= 1)) && (ct = 4194304)));
                var n = eu();
                null !== (e = Ca(e, t)) && (gt(e, t, n),
                ru(e, n))
            }
            function Au(e) {
                var t = e.memoizedState
                  , n = 0;
                null !== t && (n = t.retryLane),
                wu(e, n)
            }
            function Ru(e, t) {
                var n = 0;
                switch (e.tag) {
                case 13:
                    var r = e.stateNode
                      , i = e.memoizedState;
                    null !== i && (n = i.retryLane);
                    break;
                case 19:
                    r = e.stateNode;
                    break;
                default:
                    throw Error(a(314))
                }
                null !== r && r.delete(t),
                wu(e, n)
            }
            function Cu(e, t) {
                return qe(e, t)
            }
            function ku(e, t, n, r) {
                this.tag = e,
                this.key = n,
                this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
                this.index = 0,
                this.ref = null,
                this.pendingProps = t,
                this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
                this.mode = r,
                this.subtreeFlags = this.flags = 0,
                this.deletions = null,
                this.childLanes = this.lanes = 0,
                this.alternate = null
            }
            function Pu(e, t, n, r) {
                return new ku(e,t,n,r)
            }
            function Lu(e) {
                return !(!(e = e.prototype) || !e.isReactComponent)
            }
            function Uu(e, t) {
                var n = e.alternate;
                return null === n ? ((n = Pu(e.tag, t, e.key, e.mode)).elementType = e.elementType,
                n.type = e.type,
                n.stateNode = e.stateNode,
                n.alternate = e,
                e.alternate = n) : (n.pendingProps = t,
                n.type = e.type,
                n.flags = 0,
                n.subtreeFlags = 0,
                n.deletions = null),
                n.flags = 14680064 & e.flags,
                n.childLanes = e.childLanes,
                n.lanes = e.lanes,
                n.child = e.child,
                n.memoizedProps = e.memoizedProps,
                n.memoizedState = e.memoizedState,
                n.updateQueue = e.updateQueue,
                t = e.dependencies,
                n.dependencies = null === t ? null : {
                    lanes: t.lanes,
                    firstContext: t.firstContext
                },
                n.sibling = e.sibling,
                n.index = e.index,
                n.ref = e.ref,
                n
            }
            function Du(e, t, n, r, i, o) {
                var s = 2;
                if (r = e,
                "function" === typeof e)
                    Lu(e) && (s = 1);
                else if ("string" === typeof e)
                    s = 5;
                else
                    e: switch (e) {
                    case M:
                        return Nu(n.children, i, o, t);
                    case E:
                        s = 8,
                        i |= 8;
                        break;
                    case T:
                        return (e = Pu(12, n, t, 2 | i)).elementType = T,
                        e.lanes = o,
                        e;
                    case C:
                        return (e = Pu(13, n, t, i)).elementType = C,
                        e.lanes = o,
                        e;
                    case k:
                        return (e = Pu(19, n, t, i)).elementType = k,
                        e.lanes = o,
                        e;
                    case U:
                        return Iu(n, i, o, t);
                    default:
                        if ("object" === typeof e && null !== e)
                            switch (e.$$typeof) {
                            case w:
                                s = 10;
                                break e;
                            case A:
                                s = 9;
                                break e;
                            case R:
                                s = 11;
                                break e;
                            case P:
                                s = 14;
                                break e;
                            case L:
                                s = 16,
                                r = null;
                                break e
                            }
                        throw Error(a(130, null == e ? e : typeof e, ""))
                    }
                return (t = Pu(s, n, t, i)).elementType = e,
                t.type = r,
                t.lanes = o,
                t
            }
            function Nu(e, t, n, r) {
                return (e = Pu(7, e, r, t)).lanes = n,
                e
            }
            function Iu(e, t, n, r) {
                return (e = Pu(22, e, r, t)).elementType = U,
                e.lanes = n,
                e.stateNode = {
                    isHidden: !1
                },
                e
            }
            function Ou(e, t, n) {
                return (e = Pu(6, e, null, t)).lanes = n,
                e
            }
            function Fu(e, t, n) {
                return (t = Pu(4, null !== e.children ? e.children : [], e.key, t)).lanes = n,
                t.stateNode = {
                    containerInfo: e.containerInfo,
                    pendingChildren: null,
                    implementation: e.implementation
                },
                t
            }
            function zu(e, t, n, r, i) {
                this.tag = t,
                this.containerInfo = e,
                this.finishedWork = this.pingCache = this.current = this.pendingChildren = null,
                this.timeoutHandle = -1,
                this.callbackNode = this.pendingContext = this.context = null,
                this.callbackPriority = 0,
                this.eventTimes = vt(0),
                this.expirationTimes = vt(-1),
                this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0,
                this.entanglements = vt(0),
                this.identifierPrefix = r,
                this.onRecoverableError = i,
                this.mutableSourceEagerHydrationData = null
            }
            function Bu(e, t, n, r, i, a, o, s, l) {
                return e = new zu(e,t,n,s,l),
                1 === t ? (t = 1,
                !0 === a && (t |= 8)) : t = 0,
                a = Pu(3, null, null, t),
                e.current = a,
                a.stateNode = e,
                a.memoizedState = {
                    element: r,
                    isDehydrated: n,
                    cache: null,
                    transitions: null,
                    pendingSuspenseBoundaries: null
                },
                Pa(a),
                e
            }
            function Vu(e, t, n) {
                var r = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                return {
                    $$typeof: S,
                    key: null == r ? null : "" + r,
                    children: e,
                    containerInfo: t,
                    implementation: n
                }
            }
            function Hu(e) {
                if (!e)
                    return Ai;
                e: {
                    if (He(e = e._reactInternals) !== e || 1 !== e.tag)
                        throw Error(a(170));
                    var t = e;
                    do {
                        switch (t.tag) {
                        case 3:
                            t = t.stateNode.context;
                            break e;
                        case 1:
                            if (Li(t.type)) {
                                t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                                break e
                            }
                        }
                        t = t.return
                    } while (null !== t);
                    throw Error(a(171))
                }
                if (1 === e.tag) {
                    var n = e.type;
                    if (Li(n))
                        return Ni(e, n, t)
                }
                return t
            }
            function Gu(e, t, n, r, i, a, o, s, l) {
                return (e = Bu(n, r, !0, e, 0, a, 0, s, l)).context = Hu(null),
                n = e.current,
                (a = Ua(r = eu(), i = tu(n))).callback = void 0 !== t && null !== t ? t : null,
                Da(n, a, i),
                e.current.lanes = i,
                gt(e, i, r),
                ru(e, r),
                e
            }
            function Wu(e, t, n, r) {
                var i = t.current
                  , a = eu()
                  , o = tu(i);
                return n = Hu(n),
                null === t.context ? t.context = n : t.pendingContext = n,
                (t = Ua(a, o)).payload = {
                    element: e
                },
                null !== (r = void 0 === r ? null : r) && (t.callback = r),
                null !== (e = Da(i, t, o)) && (nu(e, i, o, a),
                Na(e, i, o)),
                o
            }
            function Xu(e) {
                return (e = e.current).child ? (e.child.tag,
                e.child.stateNode) : null
            }
            function ju(e, t) {
                if (null !== (e = e.memoizedState) && null !== e.dehydrated) {
                    var n = e.retryLane;
                    e.retryLane = 0 !== n && n < t ? n : t
                }
            }
            function qu(e, t) {
                ju(e, t),
                (e = e.alternate) && ju(e, t)
            }
            Ml = function(e, t, n) {
                if (null !== e)
                    if (e.memoizedProps !== t.pendingProps || Ci.current)
                        xs = !0;
                    else {
                        if (0 === (e.lanes & n) && 0 === (128 & t.flags))
                            return xs = !1,
                            function(e, t, n) {
                                switch (t.tag) {
                                case 3:
                                    ks(t),
                                    ha();
                                    break;
                                case 5:
                                    ao(t);
                                    break;
                                case 1:
                                    Li(t.type) && Ii(t);
                                    break;
                                case 4:
                                    ro(t, t.stateNode.containerInfo);
                                    break;
                                case 10:
                                    var r = t.type._context
                                      , i = t.memoizedProps.value;
                                    wi(ga, r._currentValue),
                                    r._currentValue = i;
                                    break;
                                case 13:
                                    if (null !== (r = t.memoizedState))
                                        return null !== r.dehydrated ? (wi(so, 1 & so.current),
                                        t.flags |= 128,
                                        null) : 0 !== (n & t.child.childLanes) ? Os(e, t, n) : (wi(so, 1 & so.current),
                                        null !== (e = Ws(e, t, n)) ? e.sibling : null);
                                    wi(so, 1 & so.current);
                                    break;
                                case 19:
                                    if (r = 0 !== (n & t.childLanes),
                                    0 !== (128 & e.flags)) {
                                        if (r)
                                            return Hs(e, t, n);
                                        t.flags |= 128
                                    }
                                    if (null !== (i = t.memoizedState) && (i.rendering = null,
                                    i.tail = null,
                                    i.lastEffect = null),
                                    wi(so, so.current),
                                    r)
                                        break;
                                    return null;
                                case 22:
                                case 23:
                                    return t.lanes = 0,
                                    Ts(e, t, n)
                                }
                                return Ws(e, t, n)
                            }(e, t, n);
                        xs = 0 !== (131072 & e.flags)
                    }
                else
                    xs = !1,
                    ia && 0 !== (1048576 & t.flags) && $i(t, ji, t.index);
                switch (t.lanes = 0,
                t.tag) {
                case 2:
                    var r = t.type;
                    Gs(e, t),
                    e = t.pendingProps;
                    var i = Pi(t, Ri.current);
                    Ea(t, n),
                    i = Eo(null, t, r, e, i, n);
                    var o = To();
                    return t.flags |= 1,
                    "object" === typeof i && null !== i && "function" === typeof i.render && void 0 === i.$$typeof ? (t.tag = 1,
                    t.memoizedState = null,
                    t.updateQueue = null,
                    Li(r) ? (o = !0,
                    Ii(t)) : o = !1,
                    t.memoizedState = null !== i.state && void 0 !== i.state ? i.state : null,
                    Pa(t),
                    i.updater = Va,
                    t.stateNode = i,
                    i._reactInternals = t,
                    Xa(t, r, e, n),
                    t = Cs(null, t, r, !0, o, n)) : (t.tag = 0,
                    ia && o && ea(t),
                    bs(null, t, i, n),
                    t = t.child),
                    t;
                case 16:
                    r = t.elementType;
                    e: {
                        switch (Gs(e, t),
                        e = t.pendingProps,
                        r = (i = r._init)(r._payload),
                        t.type = r,
                        i = t.tag = function(e) {
                            if ("function" === typeof e)
                                return Lu(e) ? 1 : 0;
                            if (void 0 !== e && null !== e) {
                                if ((e = e.$$typeof) === R)
                                    return 11;
                                if (e === P)
                                    return 14
                            }
                            return 2
                        }(r),
                        e = va(r, e),
                        i) {
                        case 0:
                            t = As(null, t, r, e, n);
                            break e;
                        case 1:
                            t = Rs(null, t, r, e, n);
                            break e;
                        case 11:
                            t = Ss(null, t, r, e, n);
                            break e;
                        case 14:
                            t = Ms(null, t, r, va(r.type, e), n);
                            break e
                        }
                        throw Error(a(306, r, ""))
                    }
                    return t;
                case 0:
                    return r = t.type,
                    i = t.pendingProps,
                    As(e, t, r, i = t.elementType === r ? i : va(r, i), n);
                case 1:
                    return r = t.type,
                    i = t.pendingProps,
                    Rs(e, t, r, i = t.elementType === r ? i : va(r, i), n);
                case 3:
                    e: {
                        if (ks(t),
                        null === e)
                            throw Error(a(387));
                        r = t.pendingProps,
                        i = (o = t.memoizedState).element,
                        La(e, t),
                        Oa(t, r, null, n);
                        var s = t.memoizedState;
                        if (r = s.element,
                        o.isDehydrated) {
                            if (o = {
                                element: r,
                                isDehydrated: !1,
                                cache: s.cache,
                                pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
                                transitions: s.transitions
                            },
                            t.updateQueue.baseState = o,
                            t.memoizedState = o,
                            256 & t.flags) {
                                t = Ps(e, t, r, n, i = cs(Error(a(423)), t));
                                break e
                            }
                            if (r !== i) {
                                t = Ps(e, t, r, n, i = cs(Error(a(424)), t));
                                break e
                            }
                            for (ra = ui(t.stateNode.containerInfo.firstChild),
                            na = t,
                            ia = !0,
                            aa = null,
                            n = Qa(t, null, r, n),
                            t.child = n; n; )
                                n.flags = -3 & n.flags | 4096,
                                n = n.sibling
                        } else {
                            if (ha(),
                            r === i) {
                                t = Ws(e, t, n);
                                break e
                            }
                            bs(e, t, r, n)
                        }
                        t = t.child
                    }
                    return t;
                case 5:
                    return ao(t),
                    null === e && ua(t),
                    r = t.type,
                    i = t.pendingProps,
                    o = null !== e ? e.memoizedProps : null,
                    s = i.children,
                    ni(r, i) ? s = null : null !== o && ni(r, o) && (t.flags |= 32),
                    ws(e, t),
                    bs(e, t, s, n),
                    t.child;
                case 6:
                    return null === e && ua(t),
                    null;
                case 13:
                    return Os(e, t, n);
                case 4:
                    return ro(t, t.stateNode.containerInfo),
                    r = t.pendingProps,
                    null === e ? t.child = Za(t, null, r, n) : bs(e, t, r, n),
                    t.child;
                case 11:
                    return r = t.type,
                    i = t.pendingProps,
                    Ss(e, t, r, i = t.elementType === r ? i : va(r, i), n);
                case 7:
                    return bs(e, t, t.pendingProps, n),
                    t.child;
                case 8:
                case 12:
                    return bs(e, t, t.pendingProps.children, n),
                    t.child;
                case 10:
                    e: {
                        if (r = t.type._context,
                        i = t.pendingProps,
                        o = t.memoizedProps,
                        s = i.value,
                        wi(ga, r._currentValue),
                        r._currentValue = s,
                        null !== o)
                            if (sr(o.value, s)) {
                                if (o.children === i.children && !Ci.current) {
                                    t = Ws(e, t, n);
                                    break e
                                }
                            } else
                                for (null !== (o = t.child) && (o.return = t); null !== o; ) {
                                    var l = o.dependencies;
                                    if (null !== l) {
                                        s = o.child;
                                        for (var u = l.firstContext; null !== u; ) {
                                            if (u.context === r) {
                                                if (1 === o.tag) {
                                                    (u = Ua(-1, n & -n)).tag = 2;
                                                    var c = o.updateQueue;
                                                    if (null !== c) {
                                                        var d = (c = c.shared).pending;
                                                        null === d ? u.next = u : (u.next = d.next,
                                                        d.next = u),
                                                        c.pending = u
                                                    }
                                                }
                                                o.lanes |= n,
                                                null !== (u = o.alternate) && (u.lanes |= n),
                                                Ma(o.return, n, t),
                                                l.lanes |= n;
                                                break
                                            }
                                            u = u.next
                                        }
                                    } else if (10 === o.tag)
                                        s = o.type === t.type ? null : o.child;
                                    else if (18 === o.tag) {
                                        if (null === (s = o.return))
                                            throw Error(a(341));
                                        s.lanes |= n,
                                        null !== (l = s.alternate) && (l.lanes |= n),
                                        Ma(s, n, t),
                                        s = o.sibling
                                    } else
                                        s = o.child;
                                    if (null !== s)
                                        s.return = o;
                                    else
                                        for (s = o; null !== s; ) {
                                            if (s === t) {
                                                s = null;
                                                break
                                            }
                                            if (null !== (o = s.sibling)) {
                                                o.return = s.return,
                                                s = o;
                                                break
                                            }
                                            s = s.return
                                        }
                                    o = s
                                }
                        bs(e, t, i.children, n),
                        t = t.child
                    }
                    return t;
                case 9:
                    return i = t.type,
                    r = t.pendingProps.children,
                    Ea(t, n),
                    r = r(i = Ta(i)),
                    t.flags |= 1,
                    bs(e, t, r, n),
                    t.child;
                case 14:
                    return i = va(r = t.type, t.pendingProps),
                    Ms(e, t, r, i = va(r.type, i), n);
                case 15:
                    return Es(e, t, t.type, t.pendingProps, n);
                case 17:
                    return r = t.type,
                    i = t.pendingProps,
                    i = t.elementType === r ? i : va(r, i),
                    Gs(e, t),
                    t.tag = 1,
                    Li(r) ? (e = !0,
                    Ii(t)) : e = !1,
                    Ea(t, n),
                    Ga(t, r, i),
                    Xa(t, r, i, n),
                    Cs(null, t, r, !0, e, n);
                case 19:
                    return Hs(e, t, n);
                case 22:
                    return Ts(e, t, n)
                }
                throw Error(a(156, t.tag))
            }
            ;
            var Yu = "function" === typeof reportError ? reportError : function(e) {
                console.error(e)
            }
            ;
            function Ku(e) {
                this._internalRoot = e
            }
            function Zu(e) {
                this._internalRoot = e
            }
            function Qu(e) {
                return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType)
            }
            function Ju(e) {
                return !(!e || 1 !== e.nodeType && 9 !== e.nodeType && 11 !== e.nodeType && (8 !== e.nodeType || " react-mount-point-unstable " !== e.nodeValue))
            }
            function $u() {}
            function ec(e, t, n, r, i) {
                var a = n._reactRootContainer;
                if (a) {
                    var o = a;
                    if ("function" === typeof i) {
                        var s = i;
                        i = function() {
                            var e = Xu(o);
                            s.call(e)
                        }
                    }
                    Wu(t, o, e, i)
                } else
                    o = function(e, t, n, r, i) {
                        if (i) {
                            if ("function" === typeof r) {
                                var a = r;
                                r = function() {
                                    var e = Xu(o);
                                    a.call(e)
                                }
                            }
                            var o = Gu(t, r, e, 0, null, !1, 0, "", $u);
                            return e._reactRootContainer = o,
                            e[pi] = o.current,
                            Hr(8 === e.nodeType ? e.parentNode : e),
                            cu(),
                            o
                        }
                        for (; i = e.lastChild; )
                            e.removeChild(i);
                        if ("function" === typeof r) {
                            var s = r;
                            r = function() {
                                var e = Xu(l);
                                s.call(e)
                            }
                        }
                        var l = Bu(e, 0, !1, null, 0, !1, 0, "", $u);
                        return e._reactRootContainer = l,
                        e[pi] = l.current,
                        Hr(8 === e.nodeType ? e.parentNode : e),
                        cu((function() {
                            Wu(t, l, n, r)
                        }
                        )),
                        l
                    }(n, t, e, i, r);
                return Xu(o)
            }
            Zu.prototype.render = Ku.prototype.render = function(e) {
                var t = this._internalRoot;
                if (null === t)
                    throw Error(a(409));
                Wu(e, t, null, null)
            }
            ,
            Zu.prototype.unmount = Ku.prototype.unmount = function() {
                var e = this._internalRoot;
                if (null !== e) {
                    this._internalRoot = null;
                    var t = e.containerInfo;
                    cu((function() {
                        Wu(null, e, null, null)
                    }
                    )),
                    t[pi] = null
                }
            }
            ,
            Zu.prototype.unstable_scheduleHydration = function(e) {
                if (e) {
                    var t = Et();
                    e = {
                        blockedOn: null,
                        target: e,
                        priority: t
                    };
                    for (var n = 0; n < Ut.length && 0 !== t && t < Ut[n].priority; n++)
                        ;
                    Ut.splice(n, 0, e),
                    0 === n && Ot(e)
                }
            }
            ,
            bt = function(e) {
                switch (e.tag) {
                case 3:
                    var t = e.stateNode;
                    if (t.current.memoizedState.isDehydrated) {
                        var n = dt(t.pendingLanes);
                        0 !== n && (_t(t, 1 | n),
                        ru(t, Qe()),
                        0 === (6 & Rl) && (Hl = Qe() + 500,
                        Hi()))
                    }
                    break;
                case 13:
                    cu((function() {
                        var t = Ca(e, 1);
                        if (null !== t) {
                            var n = eu();
                            nu(t, e, 1, n)
                        }
                    }
                    )),
                    qu(e, 1)
                }
            }
            ,
            St = function(e) {
                if (13 === e.tag) {
                    var t = Ca(e, 134217728);
                    if (null !== t)
                        nu(t, e, 134217728, eu());
                    qu(e, 134217728)
                }
            }
            ,
            Mt = function(e) {
                if (13 === e.tag) {
                    var t = tu(e)
                      , n = Ca(e, t);
                    if (null !== n)
                        nu(n, e, t, eu());
                    qu(e, t)
                }
            }
            ,
            Et = function() {
                return yt
            }
            ,
            Tt = function(e, t) {
                var n = yt;
                try {
                    return yt = e,
                    t()
                } finally {
                    yt = n
                }
            }
            ,
            Se = function(e, t, n) {
                switch (t) {
                case "input":
                    if (J(e, n),
                    t = n.name,
                    "radio" === n.type && null != t) {
                        for (n = e; n.parentNode; )
                            n = n.parentNode;
                        for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'),
                        t = 0; t < n.length; t++) {
                            var r = n[t];
                            if (r !== e && r.form === e.form) {
                                var i = bi(r);
                                if (!i)
                                    throw Error(a(90));
                                q(r),
                                J(r, i)
                            }
                        }
                    }
                    break;
                case "textarea":
                    ae(e, n);
                    break;
                case "select":
                    null != (t = n.value) && ne(e, !!n.multiple, t, !1)
                }
            }
            ,
            Re = uu,
            Ce = cu;
            var tc = {
                usingClientEntryPoint: !1,
                Events: [yi, xi, bi, we, Ae, uu]
            }
              , nc = {
                findFiberByHostInstance: _i,
                bundleType: 0,
                version: "18.2.0",
                rendererPackageName: "react-dom"
            }
              , rc = {
                bundleType: nc.bundleType,
                version: nc.version,
                rendererPackageName: nc.rendererPackageName,
                rendererConfig: nc.rendererConfig,
                overrideHookState: null,
                overrideHookStateDeletePath: null,
                overrideHookStateRenamePath: null,
                overrideProps: null,
                overridePropsDeletePath: null,
                overridePropsRenamePath: null,
                setErrorHandler: null,
                setSuspenseHandler: null,
                scheduleUpdate: null,
                currentDispatcherRef: x.ReactCurrentDispatcher,
                findHostInstanceByFiber: function(e) {
                    return null === (e = Xe(e)) ? null : e.stateNode
                },
                findFiberByHostInstance: nc.findFiberByHostInstance || function() {
                    return null
                }
                ,
                findHostInstancesForRefresh: null,
                scheduleRefresh: null,
                scheduleRoot: null,
                setRefreshHandler: null,
                getCurrentFiber: null,
                reconcilerVersion: "18.2.0-next-9e3b772b8-20220608"
            };
            if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
                var ic = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                if (!ic.isDisabled && ic.supportsFiber)
                    try {
                        it = ic.inject(rc),
                        at = ic
                    } catch (ce) {}
            }
            t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tc,
            t.createPortal = function(e, t) {
                var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
                if (!Qu(t))
                    throw Error(a(200));
                return Vu(e, t, null, n)
            }
            ,
            t.createRoot = function(e, t) {
                if (!Qu(e))
                    throw Error(a(299));
                var n = !1
                  , r = ""
                  , i = Yu;
                return null !== t && void 0 !== t && (!0 === t.unstable_strictMode && (n = !0),
                void 0 !== t.identifierPrefix && (r = t.identifierPrefix),
                void 0 !== t.onRecoverableError && (i = t.onRecoverableError)),
                t = Bu(e, 1, !1, null, 0, n, 0, r, i),
                e[pi] = t.current,
                Hr(8 === e.nodeType ? e.parentNode : e),
                new Ku(t)
            }
            ,
            t.findDOMNode = function(e) {
                if (null == e)
                    return null;
                if (1 === e.nodeType)
                    return e;
                var t = e._reactInternals;
                if (void 0 === t) {
                    if ("function" === typeof e.render)
                        throw Error(a(188));
                    throw e = Object.keys(e).join(","),
                    Error(a(268, e))
                }
                return e = null === (e = Xe(t)) ? null : e.stateNode
            }
            ,
            t.flushSync = function(e) {
                return cu(e)
            }
            ,
            t.hydrate = function(e, t, n) {
                if (!Ju(t))
                    throw Error(a(200));
                return ec(null, e, t, !0, n)
            }
            ,
            t.hydrateRoot = function(e, t, n) {
                if (!Qu(e))
                    throw Error(a(405));
                var r = null != n && n.hydratedSources || null
                  , i = !1
                  , o = ""
                  , s = Yu;
                if (null !== n && void 0 !== n && (!0 === n.unstable_strictMode && (i = !0),
                void 0 !== n.identifierPrefix && (o = n.identifierPrefix),
                void 0 !== n.onRecoverableError && (s = n.onRecoverableError)),
                t = Gu(t, null, e, 1, null != n ? n : null, i, 0, o, s),
                e[pi] = t.current,
                Hr(e),
                r)
                    for (e = 0; e < r.length; e++)
                        i = (i = (n = r[e])._getVersion)(n._source),
                        null == t.mutableSourceEagerHydrationData ? t.mutableSourceEagerHydrationData = [n, i] : t.mutableSourceEagerHydrationData.push(n, i);
                return new Zu(t)
            }
            ,
            t.render = function(e, t, n) {
                if (!Ju(t))
                    throw Error(a(200));
                return ec(null, e, t, !1, n)
            }
            ,
            t.unmountComponentAtNode = function(e) {
                if (!Ju(e))
                    throw Error(a(40));
                return !!e._reactRootContainer && (cu((function() {
                    ec(null, null, e, !1, (function() {
                        e._reactRootContainer = null,
                        e[pi] = null
                    }
                    ))
                }
                )),
                !0)
            }
            ,
            t.unstable_batchedUpdates = uu,
            t.unstable_renderSubtreeIntoContainer = function(e, t, n, r) {
                if (!Ju(n))
                    throw Error(a(200));
                if (null == e || void 0 === e._reactInternals)
                    throw Error(a(38));
                return ec(e, t, n, !1, r)
            }
            ,
            t.version = "18.2.0-next-9e3b772b8-20220608"
        },
        273: function(e, t, n) {
            !function e() {
                if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)
                    try {
                        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)
                    } catch (t) {
                        console.error(t)
                    }
            }(),
            e.exports = n(194)
        },
        489: function(e, t, n) {
            var r = n(995)
              , i = Symbol.for("react.element")
              , a = Symbol.for("react.fragment")
              , o = Object.prototype.hasOwnProperty
              , s = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner
              , l = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            };
            function u(e, t, n) {
                var r, a = {}, u = null, c = null;
                for (r in void 0 !== n && (u = "" + n),
                void 0 !== t.key && (u = "" + t.key),
                void 0 !== t.ref && (c = t.ref),
                t)
                    o.call(t, r) && !l.hasOwnProperty(r) && (a[r] = t[r]);
                if (e && e.defaultProps)
                    for (r in t = e.defaultProps)
                        void 0 === a[r] && (a[r] = t[r]);
                return {
                    $$typeof: i,
                    type: e,
                    key: u,
                    ref: c,
                    props: a,
                    _owner: s.current
                }
            }
            t.jsx = u,
            t.jsxs = u
        },
        720: function(e, t) {
            var n = Symbol.for("react.element")
              , r = Symbol.for("react.portal")
              , i = Symbol.for("react.fragment")
              , a = Symbol.for("react.strict_mode")
              , o = Symbol.for("react.profiler")
              , s = Symbol.for("react.provider")
              , l = Symbol.for("react.context")
              , u = Symbol.for("react.forward_ref")
              , c = Symbol.for("react.suspense")
              , d = Symbol.for("react.memo")
              , f = Symbol.for("react.lazy")
              , h = Symbol.iterator;
            var p = {
                isMounted: function() {
                    return !1
                },
                enqueueForceUpdate: function() {},
                enqueueReplaceState: function() {},
                enqueueSetState: function() {}
            }
              , m = Object.assign
              , v = {};
            function g(e, t, n) {
                this.props = e,
                this.context = t,
                this.refs = v,
                this.updater = n || p
            }
            function _() {}
            function y(e, t, n) {
                this.props = e,
                this.context = t,
                this.refs = v,
                this.updater = n || p
            }
            g.prototype.isReactComponent = {},
            g.prototype.setState = function(e, t) {
                if ("object" !== typeof e && "function" !== typeof e && null != e)
                    throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                this.updater.enqueueSetState(this, e, t, "setState")
            }
            ,
            g.prototype.forceUpdate = function(e) {
                this.updater.enqueueForceUpdate(this, e, "forceUpdate")
            }
            ,
            _.prototype = g.prototype;
            var x = y.prototype = new _;
            x.constructor = y,
            m(x, g.prototype),
            x.isPureReactComponent = !0;
            var b = Array.isArray
              , S = Object.prototype.hasOwnProperty
              , M = {
                current: null
            }
              , E = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            };
            function T(e, t, r) {
                var i, a = {}, o = null, s = null;
                if (null != t)
                    for (i in void 0 !== t.ref && (s = t.ref),
                    void 0 !== t.key && (o = "" + t.key),
                    t)
                        S.call(t, i) && !E.hasOwnProperty(i) && (a[i] = t[i]);
                var l = arguments.length - 2;
                if (1 === l)
                    a.children = r;
                else if (1 < l) {
                    for (var u = Array(l), c = 0; c < l; c++)
                        u[c] = arguments[c + 2];
                    a.children = u
                }
                if (e && e.defaultProps)
                    for (i in l = e.defaultProps)
                        void 0 === a[i] && (a[i] = l[i]);
                return {
                    $$typeof: n,
                    type: e,
                    key: o,
                    ref: s,
                    props: a,
                    _owner: M.current
                }
            }
            function w(e) {
                return "object" === typeof e && null !== e && e.$$typeof === n
            }
            var A = /\/+/g;
            function R(e, t) {
                return "object" === typeof e && null !== e && null != e.key ? function(e) {
                    var t = {
                        "=": "=0",
                        ":": "=2"
                    };
                    return "$" + e.replace(/[=:]/g, (function(e) {
                        return t[e]
                    }
                    ))
                }("" + e.key) : t.toString(36)
            }
            function C(e, t, i, a, o) {
                var s = typeof e;
                "undefined" !== s && "boolean" !== s || (e = null);
                var l = !1;
                if (null === e)
                    l = !0;
                else
                    switch (s) {
                    case "string":
                    case "number":
                        l = !0;
                        break;
                    case "object":
                        switch (e.$$typeof) {
                        case n:
                        case r:
                            l = !0
                        }
                    }
                if (l)
                    return o = o(l = e),
                    e = "" === a ? "." + R(l, 0) : a,
                    b(o) ? (i = "",
                    null != e && (i = e.replace(A, "$&/") + "/"),
                    C(o, t, i, "", (function(e) {
                        return e
                    }
                    ))) : null != o && (w(o) && (o = function(e, t) {
                        return {
                            $$typeof: n,
                            type: e.type,
                            key: t,
                            ref: e.ref,
                            props: e.props,
                            _owner: e._owner
                        }
                    }(o, i + (!o.key || l && l.key === o.key ? "" : ("" + o.key).replace(A, "$&/") + "/") + e)),
                    t.push(o)),
                    1;
                if (l = 0,
                a = "" === a ? "." : a + ":",
                b(e))
                    for (var u = 0; u < e.length; u++) {
                        var c = a + R(s = e[u], u);
                        l += C(s, t, i, c, o)
                    }
                else if (c = function(e) {
                    return null === e || "object" !== typeof e ? null : "function" === typeof (e = h && e[h] || e["@@iterator"]) ? e : null
                }(e),
                "function" === typeof c)
                    for (e = c.call(e),
                    u = 0; !(s = e.next()).done; )
                        l += C(s = s.value, t, i, c = a + R(s, u++), o);
                else if ("object" === s)
                    throw t = String(e),
                    Error("Objects are not valid as a React child (found: " + ("[object Object]" === t ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
                return l
            }
            function k(e, t, n) {
                if (null == e)
                    return e;
                var r = []
                  , i = 0;
                return C(e, r, "", "", (function(e) {
                    return t.call(n, e, i++)
                }
                )),
                r
            }
            function P(e) {
                if (-1 === e._status) {
                    var t = e._result;
                    (t = t()).then((function(t) {
                        0 !== e._status && -1 !== e._status || (e._status = 1,
                        e._result = t)
                    }
                    ), (function(t) {
                        0 !== e._status && -1 !== e._status || (e._status = 2,
                        e._result = t)
                    }
                    )),
                    -1 === e._status && (e._status = 0,
                    e._result = t)
                }
                if (1 === e._status)
                    return e._result.default;
                throw e._result
            }
            var L = {
                current: null
            }
              , U = {
                transition: null
            }
              , D = {
                ReactCurrentDispatcher: L,
                ReactCurrentBatchConfig: U,
                ReactCurrentOwner: M
            };
            t.Children = {
                map: k,
                forEach: function(e, t, n) {
                    k(e, (function() {
                        t.apply(this, arguments)
                    }
                    ), n)
                },
                count: function(e) {
                    var t = 0;
                    return k(e, (function() {
                        t++
                    }
                    )),
                    t
                },
                toArray: function(e) {
                    return k(e, (function(e) {
                        return e
                    }
                    )) || []
                },
                only: function(e) {
                    if (!w(e))
                        throw Error("React.Children.only expected to receive a single React element child.");
                    return e
                }
            },
            t.Component = g,
            t.Fragment = i,
            t.Profiler = o,
            t.PureComponent = y,
            t.StrictMode = a,
            t.Suspense = c,
            t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = D,
            t.cloneElement = function(e, t, r) {
                if (null === e || void 0 === e)
                    throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
                var i = m({}, e.props)
                  , a = e.key
                  , o = e.ref
                  , s = e._owner;
                if (null != t) {
                    if (void 0 !== t.ref && (o = t.ref,
                    s = M.current),
                    void 0 !== t.key && (a = "" + t.key),
                    e.type && e.type.defaultProps)
                        var l = e.type.defaultProps;
                    for (u in t)
                        S.call(t, u) && !E.hasOwnProperty(u) && (i[u] = void 0 === t[u] && void 0 !== l ? l[u] : t[u])
                }
                var u = arguments.length - 2;
                if (1 === u)
                    i.children = r;
                else if (1 < u) {
                    l = Array(u);
                    for (var c = 0; c < u; c++)
                        l[c] = arguments[c + 2];
                    i.children = l
                }
                return {
                    $$typeof: n,
                    type: e.type,
                    key: a,
                    ref: o,
                    props: i,
                    _owner: s
                }
            }
            ,
            t.createContext = function(e) {
                return (e = {
                    $$typeof: l,
                    _currentValue: e,
                    _currentValue2: e,
                    _threadCount: 0,
                    Provider: null,
                    Consumer: null,
                    _defaultValue: null,
                    _globalName: null
                }).Provider = {
                    $$typeof: s,
                    _context: e
                },
                e.Consumer = e
            }
            ,
            t.createElement = T,
            t.createFactory = function(e) {
                var t = T.bind(null, e);
                return t.type = e,
                t
            }
            ,
            t.createRef = function() {
                return {
                    current: null
                }
            }
            ,
            t.forwardRef = function(e) {
                return {
                    $$typeof: u,
                    render: e
                }
            }
            ,
            t.isValidElement = w,
            t.lazy = function(e) {
                return {
                    $$typeof: f,
                    _payload: {
                        _status: -1,
                        _result: e
                    },
                    _init: P
                }
            }
            ,
            t.memo = function(e, t) {
                return {
                    $$typeof: d,
                    type: e,
                    compare: void 0 === t ? null : t
                }
            }
            ,
            t.startTransition = function(e) {
                var t = U.transition;
                U.transition = {};
                try {
                    e()
                } finally {
                    U.transition = t
                }
            }
            ,
            t.unstable_act = function() {
                throw Error("act(...) is not supported in production builds of React.")
            }
            ,
            t.useCallback = function(e, t) {
                return L.current.useCallback(e, t)
            }
            ,
            t.useContext = function(e) {
                return L.current.useContext(e)
            }
            ,
            t.useDebugValue = function() {}
            ,
            t.useDeferredValue = function(e) {
                return L.current.useDeferredValue(e)
            }
            ,
            t.useEffect = function(e, t) {
                return L.current.useEffect(e, t)
            }
            ,
            t.useId = function() {
                return L.current.useId()
            }
            ,
            t.useImperativeHandle = function(e, t, n) {
                return L.current.useImperativeHandle(e, t, n)
            }
            ,
            t.useInsertionEffect = function(e, t) {
                return L.current.useInsertionEffect(e, t)
            }
            ,
            t.useLayoutEffect = function(e, t) {
                return L.current.useLayoutEffect(e, t)
            }
            ,
            t.useMemo = function(e, t) {
                return L.current.useMemo(e, t)
            }
            ,
            t.useReducer = function(e, t, n) {
                return L.current.useReducer(e, t, n)
            }
            ,
            t.useRef = function(e) {
                return L.current.useRef(e)
            }
            ,
            t.useState = function(e) {
                return L.current.useState(e)
            }
            ,
            t.useSyncExternalStore = function(e, t, n) {
                return L.current.useSyncExternalStore(e, t, n)
            }
            ,
            t.useTransition = function() {
                return L.current.useTransition()
            }
            ,
            t.version = "18.2.0"
        },
        995: function(e, t, n) {
            e.exports = n(720)
        },
        166: function(e, t, n) {
            e.exports = n(489)
        },
        442: function(e, t) {
            function n(e, t) {
                var n = e.length;
                e.push(t);
                e: for (; 0 < n; ) {
                    var r = n - 1 >>> 1
                      , i = e[r];
                    if (!(0 < a(i, t)))
                        break e;
                    e[r] = t,
                    e[n] = i,
                    n = r
                }
            }
            function r(e) {
                return 0 === e.length ? null : e[0]
            }
            function i(e) {
                if (0 === e.length)
                    return null;
                var t = e[0]
                  , n = e.pop();
                if (n !== t) {
                    e[0] = n;
                    e: for (var r = 0, i = e.length, o = i >>> 1; r < o; ) {
                        var s = 2 * (r + 1) - 1
                          , l = e[s]
                          , u = s + 1
                          , c = e[u];
                        if (0 > a(l, n))
                            u < i && 0 > a(c, l) ? (e[r] = c,
                            e[u] = n,
                            r = u) : (e[r] = l,
                            e[s] = n,
                            r = s);
                        else {
                            if (!(u < i && 0 > a(c, n)))
                                break e;
                            e[r] = c,
                            e[u] = n,
                            r = u
                        }
                    }
                }
                return t
            }
            function a(e, t) {
                var n = e.sortIndex - t.sortIndex;
                return 0 !== n ? n : e.id - t.id
            }
            if ("object" === typeof performance && "function" === typeof performance.now) {
                var o = performance;
                t.unstable_now = function() {
                    return o.now()
                }
            } else {
                var s = Date
                  , l = s.now();
                t.unstable_now = function() {
                    return s.now() - l
                }
            }
            var u = []
              , c = []
              , d = 1
              , f = null
              , h = 3
              , p = !1
              , m = !1
              , v = !1
              , g = "function" === typeof setTimeout ? setTimeout : null
              , _ = "function" === typeof clearTimeout ? clearTimeout : null
              , y = "undefined" !== typeof setImmediate ? setImmediate : null;
            function x(e) {
                for (var t = r(c); null !== t; ) {
                    if (null === t.callback)
                        i(c);
                    else {
                        if (!(t.startTime <= e))
                            break;
                        i(c),
                        t.sortIndex = t.expirationTime,
                        n(u, t)
                    }
                    t = r(c)
                }
            }
            function b(e) {
                if (v = !1,
                x(e),
                !m)
                    if (null !== r(u))
                        m = !0,
                        U(S);
                    else {
                        var t = r(c);
                        null !== t && D(b, t.startTime - e)
                    }
            }
            function S(e, n) {
                m = !1,
                v && (v = !1,
                _(w),
                w = -1),
                p = !0;
                var a = h;
                try {
                    for (x(n),
                    f = r(u); null !== f && (!(f.expirationTime > n) || e && !C()); ) {
                        var o = f.callback;
                        if ("function" === typeof o) {
                            f.callback = null,
                            h = f.priorityLevel;
                            var s = o(f.expirationTime <= n);
                            n = t.unstable_now(),
                            "function" === typeof s ? f.callback = s : f === r(u) && i(u),
                            x(n)
                        } else
                            i(u);
                        f = r(u)
                    }
                    if (null !== f)
                        var l = !0;
                    else {
                        var d = r(c);
                        null !== d && D(b, d.startTime - n),
                        l = !1
                    }
                    return l
                } finally {
                    f = null,
                    h = a,
                    p = !1
                }
            }
            "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
            var M, E = !1, T = null, w = -1, A = 5, R = -1;
            function C() {
                return !(t.unstable_now() - R < A)
            }
            function k() {
                if (null !== T) {
                    var e = t.unstable_now();
                    R = e;
                    var n = !0;
                    try {
                        n = T(!0, e)
                    } finally {
                        n ? M() : (E = !1,
                        T = null)
                    }
                } else
                    E = !1
            }
            if ("function" === typeof y)
                M = function() {
                    y(k)
                }
                ;
            else if ("undefined" !== typeof MessageChannel) {
                var P = new MessageChannel
                  , L = P.port2;
                P.port1.onmessage = k,
                M = function() {
                    L.postMessage(null)
                }
            } else
                M = function() {
                    g(k, 0)
                }
                ;
            function U(e) {
                T = e,
                E || (E = !0,
                M())
            }
            function D(e, n) {
                w = g((function() {
                    e(t.unstable_now())
                }
                ), n)
            }
            t.unstable_IdlePriority = 5,
            t.unstable_ImmediatePriority = 1,
            t.unstable_LowPriority = 4,
            t.unstable_NormalPriority = 3,
            t.unstable_Profiling = null,
            t.unstable_UserBlockingPriority = 2,
            t.unstable_cancelCallback = function(e) {
                e.callback = null
            }
            ,
            t.unstable_continueExecution = function() {
                m || p || (m = !0,
                U(S))
            }
            ,
            t.unstable_forceFrameRate = function(e) {
                0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : A = 0 < e ? Math.floor(1e3 / e) : 5
            }
            ,
            t.unstable_getCurrentPriorityLevel = function() {
                return h
            }
            ,
            t.unstable_getFirstCallbackNode = function() {
                return r(u)
            }
            ,
            t.unstable_next = function(e) {
                switch (h) {
                case 1:
                case 2:
                case 3:
                    var t = 3;
                    break;
                default:
                    t = h
                }
                var n = h;
                h = t;
                try {
                    return e()
                } finally {
                    h = n
                }
            }
            ,
            t.unstable_pauseExecution = function() {}
            ,
            t.unstable_requestPaint = function() {}
            ,
            t.unstable_runWithPriority = function(e, t) {
                switch (e) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                default:
                    e = 3
                }
                var n = h;
                h = e;
                try {
                    return t()
                } finally {
                    h = n
                }
            }
            ,
            t.unstable_scheduleCallback = function(e, i, a) {
                var o = t.unstable_now();
                switch ("object" === typeof a && null !== a ? a = "number" === typeof (a = a.delay) && 0 < a ? o + a : o : a = o,
                e) {
                case 1:
                    var s = -1;
                    break;
                case 2:
                    s = 250;
                    break;
                case 5:
                    s = 1073741823;
                    break;
                case 4:
                    s = 1e4;
                    break;
                default:
                    s = 5e3
                }
                return e = {
                    id: d++,
                    callback: i,
                    priorityLevel: e,
                    startTime: a,
                    expirationTime: s = a + s,
                    sortIndex: -1
                },
                a > o ? (e.sortIndex = a,
                n(c, e),
                null === r(u) && e === r(c) && (v ? (_(w),
                w = -1) : v = !0,
                D(b, a - o))) : (e.sortIndex = s,
                n(u, e),
                m || p || (m = !0,
                U(S))),
                e
            }
            ,
            t.unstable_shouldYield = C,
            t.unstable_wrapCallback = function(e) {
                var t = h;
                return function() {
                    var n = h;
                    h = t;
                    try {
                        return e.apply(this, arguments)
                    } finally {
                        h = n
                    }
                }
            }
        },
        938: function(e, t, n) {
            e.exports = n(442)
        }
    }
      , t = {};
    function n(r) {
        var i = t[r];
        if (void 0 !== i)
            return i.exports;
        var a = t[r] = {
            exports: {}
        };
        return e[r](a, a.exports, n),
        a.exports
    }
    n.m = e,
    n.d = function(e, t) {
        for (var r in t)
            n.o(t, r) && !n.o(e, r) && Object.defineProperty(e, r, {
                enumerable: !0,
                get: t[r]
            })
    }
    ,
    n.f = {},
    n.e = function(e) {
        return Promise.all(Object.keys(n.f).reduce((function(t, r) {
            return n.f[r](e, t),
            t
        }
        ), []))
    }
    ,
    n.u = function(e) {
        return "static/js/" + e + ".19d589ab.chunk.js"
    }
    ,
    n.miniCssF = function(e) {}
    ,
    n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    function() {
        var e = {};
        n.l = function(t, r, i, a) {
            if (e[t])
                e[t].push(r);
            else {
                var o, s;
                if (void 0 !== i)
                    for (var l = document.getElementsByTagName("script"), u = 0; u < l.length; u++) {
                        var c = l[u];
                        if (c.getAttribute("src") == t) {
                            o = c;
                            break
                        }
                    }
                o || (s = !0,
                (o = document.createElement("script")).charset = "utf-8",
                o.timeout = 120,
                n.nc && o.setAttribute("nonce", n.nc),
                o.src = t),
                e[t] = [r];
                var d = function(n, r) {
                    o.onerror = o.onload = null,
                    clearTimeout(f);
                    var i = e[t];
                    if (delete e[t],
                    o.parentNode && o.parentNode.removeChild(o),
                    i && i.forEach((function(e) {
                        return e(r)
                    }
                    )),
                    n)
                        return n(r)
                }
                  , f = setTimeout(d.bind(null, void 0, {
                    type: "timeout",
                    target: o
                }), 12e4);
                o.onerror = d.bind(null, o.onerror),
                o.onload = d.bind(null, o.onload),
                s && document.head.appendChild(o)
            }
        }
    }(),
    n.r = function(e) {
        "undefined" !== typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    n.p = "/",
    function() {
        var e = {
            179: 0
        };
        n.f.j = function(t, r) {
            var i = n.o(e, t) ? e[t] : void 0;
            if (0 !== i)
                if (i)
                    r.push(i[2]);
                else {
                    var a = new Promise((function(n, r) {
                        i = e[t] = [n, r]
                    }
                    ));
                    r.push(i[2] = a);
                    var o = n.p + n.u(t)
                      , s = new Error;
                    n.l(o, (function(r) {
                        if (n.o(e, t) && (0 !== (i = e[t]) && (e[t] = void 0),
                        i)) {
                            var a = r && ("load" === r.type ? "missing" : r.type)
                              , o = r && r.target && r.target.src;
                            s.message = "Loading chunk " + t + " failed.\n(" + a + ": " + o + ")",
                            s.name = "ChunkLoadError",
                            s.type = a,
                            s.request = o,
                            i[1](s)
                        }
                    }
                    ), "chunk-" + t, t)
                }
        }
        ;
        var t = function(t, r) {
            var i, a, o = r[0], s = r[1], l = r[2], u = 0;
            if (o.some((function(t) {
                return 0 !== e[t]
            }
            ))) {
                for (i in s)
                    n.o(s, i) && (n.m[i] = s[i]);
                if (l)
                    l(n)
            }
            for (t && t(r); u < o.length; u++)
                a = o[u],
                n.o(e, a) && e[a] && e[a][0](),
                e[a] = 0
        }
          , r = self.webpackChunk = self.webpackChunk || [];
        r.forEach(t.bind(null, 0)),
        r.push = t.bind(null, r.push.bind(r))
    }(),
    function() {
        var e = n(995)
          , t = n(273);
        function r(e) {
            return r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            }
            : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }
            ,
            r(e)
        }
        function i() {
            i = function() {
                return e
            }
            ;
            var e = {}
              , t = Object.prototype
              , n = t.hasOwnProperty
              , a = Object.defineProperty || function(e, t, n) {
                e[t] = n.value
            }
              , o = "function" == typeof Symbol ? Symbol : {}
              , s = o.iterator || "@@iterator"
              , l = o.asyncIterator || "@@asyncIterator"
              , u = o.toStringTag || "@@toStringTag";
            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }),
                e[t]
            }
            try {
                c({}, "")
            } catch (k) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }
            function d(e, t, n, r) {
                var i = t && t.prototype instanceof p ? t : p
                  , o = Object.create(i.prototype)
                  , s = new A(r || []);
                return a(o, "_invoke", {
                    value: M(e, n, s)
                }),
                o
            }
            function f(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (k) {
                    return {
                        type: "throw",
                        arg: k
                    }
                }
            }
            e.wrap = d;
            var h = {};
            function p() {}
            function m() {}
            function v() {}
            var g = {};
            c(g, s, (function() {
                return this
            }
            ));
            var _ = Object.getPrototypeOf
              , y = _ && _(_(R([])));
            y && y !== t && n.call(y, s) && (g = y);
            var x = v.prototype = p.prototype = Object.create(g);
            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }
                    ))
                }
                ))
            }
            function S(e, t) {
                function i(a, o, s, l) {
                    var u = f(e[a], e, o);
                    if ("throw" !== u.type) {
                        var c = u.arg
                          , d = c.value;
                        return d && "object" == r(d) && n.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                            i("next", e, s, l)
                        }
                        ), (function(e) {
                            i("throw", e, s, l)
                        }
                        )) : t.resolve(d).then((function(e) {
                            c.value = e,
                            s(c)
                        }
                        ), (function(e) {
                            return i("throw", e, s, l)
                        }
                        ))
                    }
                    l(u.arg)
                }
                var o;
                a(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                i(e, n, t, r)
                            }
                            ))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }
            function M(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r)
                        throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i)
                            throw a;
                        return C()
                    }
                    for (n.method = i,
                    n.arg = a; ; ) {
                        var o = n.delegate;
                        if (o) {
                            var s = E(o, n);
                            if (s) {
                                if (s === h)
                                    continue;
                                return s
                            }
                        }
                        if ("next" === n.method)
                            n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r)
                                throw r = "completed",
                                n.arg;
                            n.dispatchException(n.arg)
                        } else
                            "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var l = f(e, t, n);
                        if ("normal" === l.type) {
                            if (r = n.done ? "completed" : "suspendedYield",
                            l.arg === h)
                                continue;
                            return {
                                value: l.arg,
                                done: n.done
                            }
                        }
                        "throw" === l.type && (r = "completed",
                        n.method = "throw",
                        n.arg = l.arg)
                    }
                }
            }
            function E(e, t) {
                var n = e.iterator[t.method];
                if (void 0 === n) {
                    if (t.delegate = null,
                    "throw" === t.method) {
                        if (e.iterator.return && (t.method = "return",
                        t.arg = void 0,
                        E(e, t),
                        "throw" === t.method))
                            return h;
                        t.method = "throw",
                        t.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return h
                }
                var r = f(n, e.iterator, t.arg);
                if ("throw" === r.type)
                    return t.method = "throw",
                    t.arg = r.arg,
                    t.delegate = null,
                    h;
                var i = r.arg;
                return i ? i.done ? (t[e.resultName] = i.value,
                t.next = e.nextLoc,
                "return" !== t.method && (t.method = "next",
                t.arg = void 0),
                t.delegate = null,
                h) : i : (t.method = "throw",
                t.arg = new TypeError("iterator result is not an object"),
                t.delegate = null,
                h)
            }
            function T(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]),
                2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
                this.tryEntries.push(t)
            }
            function w(e) {
                var t = e.completion || {};
                t.type = "normal",
                delete t.arg,
                e.completion = t
            }
            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }],
                e.forEach(T, this),
                this.reset(!0)
            }
            function R(e) {
                if (e) {
                    var t = e[s];
                    if (t)
                        return t.call(e);
                    if ("function" == typeof e.next)
                        return e;
                    if (!isNaN(e.length)) {
                        var r = -1
                          , i = function t() {
                            for (; ++r < e.length; )
                                if (n.call(e, r))
                                    return t.value = e[r],
                                    t.done = !1,
                                    t;
                            return t.value = void 0,
                            t.done = !0,
                            t
                        };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }
            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return m.prototype = v,
            a(x, "constructor", {
                value: v,
                configurable: !0
            }),
            a(v, "constructor", {
                value: m,
                configurable: !0
            }),
            m.displayName = c(v, u, "GeneratorFunction"),
            e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === m || "GeneratorFunction" === (t.displayName || t.name))
            }
            ,
            e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, v) : (e.__proto__ = v,
                c(e, u, "GeneratorFunction")),
                e.prototype = Object.create(x),
                e
            }
            ,
            e.awrap = function(e) {
                return {
                    __await: e
                }
            }
            ,
            b(S.prototype),
            c(S.prototype, l, (function() {
                return this
            }
            )),
            e.AsyncIterator = S,
            e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new S(d(t, n, r, i),a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }
                ))
            }
            ,
            b(x),
            c(x, u, "Generator"),
            c(x, s, (function() {
                return this
            }
            )),
            c(x, "toString", (function() {
                return "[object Generator]"
            }
            )),
            e.keys = function(e) {
                var t = Object(e)
                  , n = [];
                for (var r in t)
                    n.push(r);
                return n.reverse(),
                function e() {
                    for (; n.length; ) {
                        var r = n.pop();
                        if (r in t)
                            return e.value = r,
                            e.done = !1,
                            e
                    }
                    return e.done = !0,
                    e
                }
            }
            ,
            e.values = R,
            A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = void 0,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = void 0,
                    this.tryEntries.forEach(w),
                    !e)
                        for (var t in this)
                            "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type)
                        throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done)
                        throw e;
                    var t = this;
                    function r(n, r) {
                        return o.type = "throw",
                        o.arg = e,
                        t.next = n,
                        r && (t.method = "next",
                        t.arg = void 0),
                        !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i]
                          , o = a.completion;
                        if ("root" === a.tryLoc)
                            return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc")
                              , l = n.call(a, "finallyLoc");
                            if (s && l) {
                                if (this.prev < a.catchLoc)
                                    return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc)
                                    return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc)
                                    return r(a.catchLoc, !0)
                            } else {
                                if (!l)
                                    throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc)
                                    return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e,
                    o.arg = t,
                    a ? (this.method = "next",
                    this.next = a.finallyLoc,
                    h) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type)
                        throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e)
                            return this.complete(n.completion, n.afterLoc),
                            w(n),
                            h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                w(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: R(e),
                        resultName: t,
                        nextLoc: n
                    },
                    "next" === this.method && (this.arg = void 0),
                    h
                }
            },
            e
        }
        function a(e, t, n, r, i, a, o) {
            try {
                var s = e[a](o)
                  , l = s.value
            } catch (u) {
                return void n(u)
            }
            s.done ? t(l) : Promise.resolve(l).then(r, i)
        }
        function o(e) {
            return function() {
                var t = this
                  , n = arguments;
                return new Promise((function(r, i) {
                    var o = e.apply(t, n);
                    function s(e) {
                        a(o, r, i, s, l, "next", e)
                    }
                    function l(e) {
                        a(o, r, i, s, l, "throw", e)
                    }
                    s(void 0)
                }
                ))
            }
        }
        function s(e) {
            if (void 0 === e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }
        function l(e, t) {
            return l = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t,
                e
            }
            ,
            l(e, t)
        }
        function u(e, t) {
            if ("function" !== typeof t && null !== t)
                throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            t && l(e, t)
        }
        function c(e) {
            return c = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }
            ,
            c(e)
        }
        function d() {
            if ("undefined" === typeof Reflect || !Reflect.construct)
                return !1;
            if (Reflect.construct.sham)
                return !1;
            if ("function" === typeof Proxy)
                return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                ))),
                !0
            } catch (e) {
                return !1
            }
        }
        function f(e, t) {
            if (t && ("object" === r(t) || "function" === typeof t))
                return t;
            if (void 0 !== t)
                throw new TypeError("Derived constructors may only return object or undefined");
            return s(e)
        }
        function h(e) {
            var t = d();
            return function() {
                var n, r = c(e);
                if (t) {
                    var i = c(this).constructor;
                    n = Reflect.construct(r, arguments, i)
                } else
                    n = r.apply(this, arguments);
                return f(this, n)
            }
        }
        function p(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n,
            e
        }
        function m(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++)
                r[n] = e[n];
            return r
        }
        function v(e, t) {
            if (e) {
                if ("string" === typeof e)
                    return m(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name),
                "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? m(e, t) : void 0
            }
        }
        function g(e, t) {
            var n = "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (!n) {
                if (Array.isArray(e) || (n = v(e)) || t && e && "number" === typeof e.length) {
                    n && (e = n);
                    var r = 0
                      , i = function() {};
                    return {
                        s: i,
                        n: function() {
                            return r >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[r++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: i
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var a, o = !0, s = !1;
            return {
                s: function() {
                    n = n.call(e)
                },
                n: function() {
                    var e = n.next();
                    return o = e.done,
                    e
                },
                e: function(e) {
                    s = !0,
                    a = e
                },
                f: function() {
                    try {
                        o || null == n.return || n.return()
                    } finally {
                        if (s)
                            throw a
                    }
                }
            }
        }
        function _(e, t) {
            if (!(e instanceof t))
                throw new TypeError("Cannot call a class as a function")
        }
        function y(e, t) {
            for (var n = 0; n < t.length; n++) {
                var r = t[n];
                r.enumerable = r.enumerable || !1,
                r.configurable = !0,
                "value"in r && (r.writable = !0),
                Object.defineProperty(e, r.key, r)
            }
        }
        function x(e, t, n) {
            return t && y(e.prototype, t),
            n && y(e, n),
            Object.defineProperty(e, "prototype", {
                writable: !1
            }),
            e
        }
        function b(e, t, n) {
            return d() ? Reflect.construct.bind() : function(e, t, n) {
                var r = [null];
                r.push.apply(r, t);
                var i = new (Function.bind.apply(e, r));
                return n && l(i, n.prototype),
                i
            }
            ,
            b.apply(null, arguments)
        }
        function S(e) {
            var t = "function" === typeof Map ? new Map : void 0;
            return function(e) {
                if (null === e || (e,
                -1 === Function.toString.call(n).indexOf("[native code]")))
                    return e;
                var n;
                if ("function" !== typeof e)
                    throw new TypeError("Super expression must either be null or a function");
                if ("undefined" !== typeof t) {
                    if (t.has(e))
                        return t.get(e);
                    t.set(e, r)
                }
                function r() {
                    return b(e, arguments, c(this).constructor)
                }
                return r.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: r,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                l(r, e)
            }
            ,
            S(e)
        }
        function M(e, t) {
            return function(e) {
                if (Array.isArray(e))
                    return e
            }(e) || function(e, t) {
                var n = null == e ? null : "undefined" !== typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != n) {
                    var r, i, a = [], o = !0, s = !1;
                    try {
                        for (n = n.call(e); !(o = (r = n.next()).done) && (a.push(r.value),
                        !t || a.length !== t); o = !0)
                            ;
                    } catch (l) {
                        s = !0,
                        i = l
                    } finally {
                        try {
                            o || null == n.return || n.return()
                        } finally {
                            if (s)
                                throw i
                        }
                    }
                    return a
                }
            }(e, t) || v(e, t) || function() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        function E(e, t) {
            for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = c(e)); )
                ;
            return e
        }
        function T() {
            return T = "undefined" !== typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e, t, n) {
                var r = E(e, t);
                if (r) {
                    var i = Object.getOwnPropertyDescriptor(r, t);
                    return i.get ? i.get.call(arguments.length < 3 ? e : n) : i.value
                }
            }
            ,
            T.apply(this, arguments)
        }
        function w(e) {
            return function(e) {
                if (Array.isArray(e))
                    return m(e)
            }(e) || function(e) {
                if ("undefined" !== typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                    return Array.from(e)
            }(e) || v(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }
        var A = "172"
          , R = 100
          , C = 301
          , k = 302
          , P = 303
          , L = 304
          , U = 306
          , D = 1e3
          , N = 1001
          , I = 1002
          , O = 1003
          , F = 1005
          , z = 1006
          , B = 1007
          , V = 1008
          , H = 1009
          , G = 1010
          , W = 1011
          , X = 1012
          , j = 1013
          , q = 1014
          , Y = 1015
          , K = 1016
          , Z = 1017
          , Q = 1018
          , J = 1020
          , $ = 35902
          , ee = 1021
          , te = 1022
          , ne = 1023
          , re = 1024
          , ie = 1025
          , ae = 1026
          , oe = 1027
          , se = 1028
          , le = 1029
          , ue = 1030
          , ce = 1031
          , de = 1033
          , fe = 33776
          , he = 33777
          , pe = 33778
          , me = 33779
          , ve = 35840
          , ge = 35841
          , _e = 35842
          , ye = 35843
          , xe = 36196
          , be = 37492
          , Se = 37496
          , Me = 37808
          , Ee = 37809
          , Te = 37810
          , we = 37811
          , Ae = 37812
          , Re = 37813
          , Ce = 37814
          , ke = 37815
          , Pe = 37816
          , Le = 37817
          , Ue = 37818
          , De = 37819
          , Ne = 37820
          , Ie = 37821
          , Oe = 36492
          , Fe = 36494
          , ze = 36495
          , Be = 36283
          , Ve = 36284
          , He = 36285
          , Ge = 36286
          , We = 2300
          , Xe = 2301
          , je = 2302
          , qe = 2400
          , Ye = 2401
          , Ke = 2402
          , Ze = ""
          , Qe = "srgb"
          , Je = "srgb-linear"
          , $e = "linear"
          , et = "srgb"
          , tt = 7680
          , nt = 35044
          , rt = "300 es"
          , it = 2e3
          , at = 2001
          , ot = function() {
            function e() {
                _(this, e)
            }
            return x(e, [{
                key: "addEventListener",
                value: function(e, t) {
                    void 0 === this._listeners && (this._listeners = {});
                    var n = this._listeners;
                    void 0 === n[e] && (n[e] = []),
                    -1 === n[e].indexOf(t) && n[e].push(t)
                }
            }, {
                key: "hasEventListener",
                value: function(e, t) {
                    if (void 0 === this._listeners)
                        return !1;
                    var n = this._listeners;
                    return void 0 !== n[e] && -1 !== n[e].indexOf(t)
                }
            }, {
                key: "removeEventListener",
                value: function(e, t) {
                    if (void 0 !== this._listeners) {
                        var n = this._listeners[e];
                        if (void 0 !== n) {
                            var r = n.indexOf(t);
                            -1 !== r && n.splice(r, 1)
                        }
                    }
                }
            }, {
                key: "dispatchEvent",
                value: function(e) {
                    if (void 0 !== this._listeners) {
                        var t = this._listeners[e.type];
                        if (void 0 !== t) {
                            e.target = this;
                            for (var n = t.slice(0), r = 0, i = n.length; r < i; r++)
                                n[r].call(this, e);
                            e.target = null
                        }
                    }
                }
            }]),
            e
        }()
          , st = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "0a", "0b", "0c", "0d", "0e", "0f", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "1a", "1b", "1c", "1d", "1e", "1f", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2a", "2b", "2c", "2d", "2e", "2f", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "3a", "3b", "3c", "3d", "3e", "3f", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "4a", "4b", "4c", "4d", "4e", "4f", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "5a", "5b", "5c", "5d", "5e", "5f", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "6a", "6b", "6c", "6d", "6e", "6f", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "7a", "7b", "7c", "7d", "7e", "7f", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "8a", "8b", "8c", "8d", "8e", "8f", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "9a", "9b", "9c", "9d", "9e", "9f", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa", "ab", "ac", "ad", "ae", "af", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "ba", "bb", "bc", "bd", "be", "bf", "c0", "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "ca", "cb", "cc", "cd", "ce", "cf", "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "da", "db", "dc", "dd", "de", "df", "e0", "e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "ea", "eb", "ec", "ed", "ee", "ef", "f0", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "fa", "fb", "fc", "fd", "fe", "ff"]
          , lt = 1234567
          , ut = Math.PI / 180
          , ct = 180 / Math.PI;
        function dt() {
            var e = 4294967295 * Math.random() | 0
              , t = 4294967295 * Math.random() | 0
              , n = 4294967295 * Math.random() | 0
              , r = 4294967295 * Math.random() | 0;
            return (st[255 & e] + st[e >> 8 & 255] + st[e >> 16 & 255] + st[e >> 24 & 255] + "-" + st[255 & t] + st[t >> 8 & 255] + "-" + st[t >> 16 & 15 | 64] + st[t >> 24 & 255] + "-" + st[63 & n | 128] + st[n >> 8 & 255] + "-" + st[n >> 16 & 255] + st[n >> 24 & 255] + st[255 & r] + st[r >> 8 & 255] + st[r >> 16 & 255] + st[r >> 24 & 255]).toLowerCase()
        }
        function ft(e, t, n) {
            return Math.max(t, Math.min(n, e))
        }
        function ht(e, t) {
            return (e % t + t) % t
        }
        function pt(e, t, n) {
            return (1 - n) * e + n * t
        }
        function mt(e, t) {
            switch (t.constructor) {
            case Float32Array:
                return e;
            case Uint32Array:
                return e / 4294967295;
            case Uint16Array:
                return e / 65535;
            case Uint8Array:
                return e / 255;
            case Int32Array:
                return Math.max(e / 2147483647, -1);
            case Int16Array:
                return Math.max(e / 32767, -1);
            case Int8Array:
                return Math.max(e / 127, -1);
            default:
                throw new Error("Invalid component type.")
            }
        }
        function vt(e, t) {
            switch (t.constructor) {
            case Float32Array:
                return e;
            case Uint32Array:
                return Math.round(4294967295 * e);
            case Uint16Array:
                return Math.round(65535 * e);
            case Uint8Array:
                return Math.round(255 * e);
            case Int32Array:
                return Math.round(2147483647 * e);
            case Int16Array:
                return Math.round(32767 * e);
            case Int8Array:
                return Math.round(127 * e);
            default:
                throw new Error("Invalid component type.")
            }
        }
        var gt = {
            DEG2RAD: ut,
            RAD2DEG: ct,
            generateUUID: dt,
            clamp: ft,
            euclideanModulo: ht,
            mapLinear: function(e, t, n, r, i) {
                return r + (e - t) * (i - r) / (n - t)
            },
            inverseLerp: function(e, t, n) {
                return e !== t ? (n - e) / (t - e) : 0
            },
            lerp: pt,
            damp: function(e, t, n, r) {
                return pt(e, t, 1 - Math.exp(-n * r))
            },
            pingpong: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                return t - Math.abs(ht(e, 2 * t) - t)
            },
            smoothstep: function(e, t, n) {
                return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e)
            },
            smootherstep: function(e, t, n) {
                return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10)
            },
            randInt: function(e, t) {
                return e + Math.floor(Math.random() * (t - e + 1))
            },
            randFloat: function(e, t) {
                return e + Math.random() * (t - e)
            },
            randFloatSpread: function(e) {
                return e * (.5 - Math.random())
            },
            seededRandom: function(e) {
                void 0 !== e && (lt = e);
                var t = lt += 1831565813;
                return t = Math.imul(t ^ t >>> 15, 1 | t),
                (((t ^= t + Math.imul(t ^ t >>> 7, 61 | t)) ^ t >>> 14) >>> 0) / 4294967296
            },
            degToRad: function(e) {
                return e * ut
            },
            radToDeg: function(e) {
                return e * ct
            },
            isPowerOfTwo: function(e) {
                return 0 === (e & e - 1) && 0 !== e
            },
            ceilPowerOfTwo: function(e) {
                return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
            },
            floorPowerOfTwo: function(e) {
                return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
            },
            setQuaternionFromProperEuler: function(e, t, n, r, i) {
                var a = Math.cos
                  , o = Math.sin
                  , s = a(n / 2)
                  , l = o(n / 2)
                  , u = a((t + r) / 2)
                  , c = o((t + r) / 2)
                  , d = a((t - r) / 2)
                  , f = o((t - r) / 2)
                  , h = a((r - t) / 2)
                  , p = o((r - t) / 2);
                switch (i) {
                case "XYX":
                    e.set(s * c, l * d, l * f, s * u);
                    break;
                case "YZY":
                    e.set(l * f, s * c, l * d, s * u);
                    break;
                case "ZXZ":
                    e.set(l * d, l * f, s * c, s * u);
                    break;
                case "XZX":
                    e.set(s * c, l * p, l * h, s * u);
                    break;
                case "YXY":
                    e.set(l * h, s * c, l * p, s * u);
                    break;
                case "ZYZ":
                    e.set(l * p, l * h, s * c, s * u);
                    break;
                default:
                    console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i)
                }
            },
            normalize: vt,
            denormalize: mt
        }
          , _t = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                _(this, t),
                t.prototype.isVector2 = !0,
                this.x = e,
                this.y = n
            }
            return x(t, [{
                key: "width",
                get: function() {
                    return this.x
                },
                set: function(e) {
                    this.x = e
                }
            }, {
                key: "height",
                get: function() {
                    return this.y
                },
                set: function(e) {
                    this.y = e
                }
            }, {
                key: "set",
                value: function(e, t) {
                    return this.x = e,
                    this.y = t,
                    this
                }
            }, {
                key: "setScalar",
                value: function(e) {
                    return this.x = e,
                    this.y = e,
                    this
                }
            }, {
                key: "setX",
                value: function(e) {
                    return this.x = e,
                    this
                }
            }, {
                key: "setY",
                value: function(e) {
                    return this.y = e,
                    this
                }
            }, {
                key: "setComponent",
                value: function(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                }
            }, {
                key: "getComponent",
                value: function(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this.x,this.y)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this
                }
            }, {
                key: "add",
                value: function(e) {
                    return this.x += e.x,
                    this.y += e.y,
                    this
                }
            }, {
                key: "addScalar",
                value: function(e) {
                    return this.x += e,
                    this.y += e,
                    this
                }
            }, {
                key: "addVectors",
                value: function(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this
                }
            }, {
                key: "addScaledVector",
                value: function(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this
                }
            }, {
                key: "sub",
                value: function(e) {
                    return this.x -= e.x,
                    this.y -= e.y,
                    this
                }
            }, {
                key: "subScalar",
                value: function(e) {
                    return this.x -= e,
                    this.y -= e,
                    this
                }
            }, {
                key: "subVectors",
                value: function(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this
                }
            }, {
                key: "multiply",
                value: function(e) {
                    return this.x *= e.x,
                    this.y *= e.y,
                    this
                }
            }, {
                key: "multiplyScalar",
                value: function(e) {
                    return this.x *= e,
                    this.y *= e,
                    this
                }
            }, {
                key: "divide",
                value: function(e) {
                    return this.x /= e.x,
                    this.y /= e.y,
                    this
                }
            }, {
                key: "divideScalar",
                value: function(e) {
                    return this.multiplyScalar(1 / e)
                }
            }, {
                key: "applyMatrix3",
                value: function(e) {
                    var t = this.x
                      , n = this.y
                      , r = e.elements;
                    return this.x = r[0] * t + r[3] * n + r[6],
                    this.y = r[1] * t + r[4] * n + r[7],
                    this
                }
            }, {
                key: "min",
                value: function(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this
                }
            }, {
                key: "max",
                value: function(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this
                }
            }, {
                key: "clamp",
                value: function(e, t) {
                    return this.x = ft(this.x, e.x, t.x),
                    this.y = ft(this.y, e.y, t.y),
                    this
                }
            }, {
                key: "clampScalar",
                value: function(e, t) {
                    return this.x = ft(this.x, e, t),
                    this.y = ft(this.y, e, t),
                    this
                }
            }, {
                key: "clampLength",
                value: function(e, t) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(ft(n, e, t))
                }
            }, {
                key: "floor",
                value: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this
                }
            }, {
                key: "ceil",
                value: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this
                }
            }, {
                key: "round",
                value: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this
                }
            }, {
                key: "roundToZero",
                value: function() {
                    return this.x = Math.trunc(this.x),
                    this.y = Math.trunc(this.y),
                    this
                }
            }, {
                key: "negate",
                value: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this
                }
            }, {
                key: "dot",
                value: function(e) {
                    return this.x * e.x + this.y * e.y
                }
            }, {
                key: "cross",
                value: function(e) {
                    return this.x * e.y - this.y * e.x
                }
            }, {
                key: "lengthSq",
                value: function() {
                    return this.x * this.x + this.y * this.y
                }
            }, {
                key: "length",
                value: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                }
            }, {
                key: "manhattanLength",
                value: function() {
                    return Math.abs(this.x) + Math.abs(this.y)
                }
            }, {
                key: "normalize",
                value: function() {
                    return this.divideScalar(this.length() || 1)
                }
            }, {
                key: "angle",
                value: function() {
                    var e = Math.atan2(-this.y, -this.x) + Math.PI;
                    return e
                }
            }, {
                key: "angleTo",
                value: function(e) {
                    var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                    if (0 === t)
                        return Math.PI / 2;
                    var n = this.dot(e) / t;
                    return Math.acos(ft(n, -1, 1))
                }
            }, {
                key: "distanceTo",
                value: function(e) {
                    return Math.sqrt(this.distanceToSquared(e))
                }
            }, {
                key: "distanceToSquared",
                value: function(e) {
                    var t = this.x - e.x
                      , n = this.y - e.y;
                    return t * t + n * n
                }
            }, {
                key: "manhattanDistanceTo",
                value: function(e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
                }
            }, {
                key: "setLength",
                value: function(e) {
                    return this.normalize().multiplyScalar(e)
                }
            }, {
                key: "lerp",
                value: function(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this
                }
            }, {
                key: "lerpVectors",
                value: function(e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n,
                    this.y = e.y + (t.y - e.y) * n,
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.x === this.x && e.y === this.y
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return this.x = e[t],
                    this.y = e[t + 1],
                    this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return e[t] = this.x,
                    e[t + 1] = this.y,
                    e
                }
            }, {
                key: "fromBufferAttribute",
                value: function(e, t) {
                    return this.x = e.getX(t),
                    this.y = e.getY(t),
                    this
                }
            }, {
                key: "rotateAround",
                value: function(e, t) {
                    var n = Math.cos(t)
                      , r = Math.sin(t)
                      , i = this.x - e.x
                      , a = this.y - e.y;
                    return this.x = i * n - a * r + e.x,
                    this.y = i * r + a * n + e.y,
                    this
                }
            }, {
                key: "random",
                value: function() {
                    return this.x = Math.random(),
                    this.y = Math.random(),
                    this
                }
            }, {
                key: Symbol.iterator,
                value: i().mark((function e() {
                    return i().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2,
                                this.x;
                            case 2:
                                return e.next = 4,
                                this.y;
                            case 4:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))
            }]),
            t
        }()
          , yt = function() {
            function e(t, n, r, i, a, o, s, l, u) {
                _(this, e),
                e.prototype.isMatrix3 = !0,
                this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1],
                void 0 !== t && this.set(t, n, r, i, a, o, s, l, u)
            }
            return x(e, [{
                key: "set",
                value: function(e, t, n, r, i, a, o, s, l) {
                    var u = this.elements;
                    return u[0] = e,
                    u[1] = r,
                    u[2] = o,
                    u[3] = t,
                    u[4] = i,
                    u[5] = s,
                    u[6] = n,
                    u[7] = a,
                    u[8] = l,
                    this
                }
            }, {
                key: "identity",
                value: function() {
                    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "copy",
                value: function(e) {
                    var t = this.elements
                      , n = e.elements;
                    return t[0] = n[0],
                    t[1] = n[1],
                    t[2] = n[2],
                    t[3] = n[3],
                    t[4] = n[4],
                    t[5] = n[5],
                    t[6] = n[6],
                    t[7] = n[7],
                    t[8] = n[8],
                    this
                }
            }, {
                key: "extractBasis",
                value: function(e, t, n) {
                    return e.setFromMatrix3Column(this, 0),
                    t.setFromMatrix3Column(this, 1),
                    n.setFromMatrix3Column(this, 2),
                    this
                }
            }, {
                key: "setFromMatrix4",
                value: function(e) {
                    var t = e.elements;
                    return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
                    this
                }
            }, {
                key: "multiply",
                value: function(e) {
                    return this.multiplyMatrices(this, e)
                }
            }, {
                key: "premultiply",
                value: function(e) {
                    return this.multiplyMatrices(e, this)
                }
            }, {
                key: "multiplyMatrices",
                value: function(e, t) {
                    var n = e.elements
                      , r = t.elements
                      , i = this.elements
                      , a = n[0]
                      , o = n[3]
                      , s = n[6]
                      , l = n[1]
                      , u = n[4]
                      , c = n[7]
                      , d = n[2]
                      , f = n[5]
                      , h = n[8]
                      , p = r[0]
                      , m = r[3]
                      , v = r[6]
                      , g = r[1]
                      , _ = r[4]
                      , y = r[7]
                      , x = r[2]
                      , b = r[5]
                      , S = r[8];
                    return i[0] = a * p + o * g + s * x,
                    i[3] = a * m + o * _ + s * b,
                    i[6] = a * v + o * y + s * S,
                    i[1] = l * p + u * g + c * x,
                    i[4] = l * m + u * _ + c * b,
                    i[7] = l * v + u * y + c * S,
                    i[2] = d * p + f * g + h * x,
                    i[5] = d * m + f * _ + h * b,
                    i[8] = d * v + f * y + h * S,
                    this
                }
            }, {
                key: "multiplyScalar",
                value: function(e) {
                    var t = this.elements;
                    return t[0] *= e,
                    t[3] *= e,
                    t[6] *= e,
                    t[1] *= e,
                    t[4] *= e,
                    t[7] *= e,
                    t[2] *= e,
                    t[5] *= e,
                    t[8] *= e,
                    this
                }
            }, {
                key: "determinant",
                value: function() {
                    var e = this.elements
                      , t = e[0]
                      , n = e[1]
                      , r = e[2]
                      , i = e[3]
                      , a = e[4]
                      , o = e[5]
                      , s = e[6]
                      , l = e[7]
                      , u = e[8];
                    return t * a * u - t * o * l - n * i * u + n * o * s + r * i * l - r * a * s
                }
            }, {
                key: "invert",
                value: function() {
                    var e = this.elements
                      , t = e[0]
                      , n = e[1]
                      , r = e[2]
                      , i = e[3]
                      , a = e[4]
                      , o = e[5]
                      , s = e[6]
                      , l = e[7]
                      , u = e[8]
                      , c = u * a - o * l
                      , d = o * s - u * i
                      , f = l * i - a * s
                      , h = t * c + n * d + r * f;
                    if (0 === h)
                        return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                    var p = 1 / h;
                    return e[0] = c * p,
                    e[1] = (r * l - u * n) * p,
                    e[2] = (o * n - r * a) * p,
                    e[3] = d * p,
                    e[4] = (u * t - r * s) * p,
                    e[5] = (r * i - o * t) * p,
                    e[6] = f * p,
                    e[7] = (n * s - l * t) * p,
                    e[8] = (a * t - n * i) * p,
                    this
                }
            }, {
                key: "transpose",
                value: function() {
                    var e, t = this.elements;
                    return e = t[1],
                    t[1] = t[3],
                    t[3] = e,
                    e = t[2],
                    t[2] = t[6],
                    t[6] = e,
                    e = t[5],
                    t[5] = t[7],
                    t[7] = e,
                    this
                }
            }, {
                key: "getNormalMatrix",
                value: function(e) {
                    return this.setFromMatrix4(e).invert().transpose()
                }
            }, {
                key: "transposeIntoArray",
                value: function(e) {
                    var t = this.elements;
                    return e[0] = t[0],
                    e[1] = t[3],
                    e[2] = t[6],
                    e[3] = t[1],
                    e[4] = t[4],
                    e[5] = t[7],
                    e[6] = t[2],
                    e[7] = t[5],
                    e[8] = t[8],
                    this
                }
            }, {
                key: "setUvTransform",
                value: function(e, t, n, r, i, a, o) {
                    var s = Math.cos(i)
                      , l = Math.sin(i);
                    return this.set(n * s, n * l, -n * (s * a + l * o) + a + e, -r * l, r * s, -r * (-l * a + s * o) + o + t, 0, 0, 1),
                    this
                }
            }, {
                key: "scale",
                value: function(e, t) {
                    return this.premultiply(xt.makeScale(e, t)),
                    this
                }
            }, {
                key: "rotate",
                value: function(e) {
                    return this.premultiply(xt.makeRotation(-e)),
                    this
                }
            }, {
                key: "translate",
                value: function(e, t) {
                    return this.premultiply(xt.makeTranslation(e, t)),
                    this
                }
            }, {
                key: "makeTranslation",
                value: function(e, t) {
                    return e.isVector2 ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1) : this.set(1, 0, e, 0, 1, t, 0, 0, 1),
                    this
                }
            }, {
                key: "makeRotation",
                value: function(e) {
                    var t = Math.cos(e)
                      , n = Math.sin(e);
                    return this.set(t, -n, 0, n, t, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "makeScale",
                value: function(e, t) {
                    return this.set(e, 0, 0, 0, t, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                        if (t[r] !== n[r])
                            return !1;
                    return !0
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = 0; n < 9; n++)
                        this.elements[n] = e[n + t];
                    return this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                      , n = this.elements;
                    return e[t] = n[0],
                    e[t + 1] = n[1],
                    e[t + 2] = n[2],
                    e[t + 3] = n[3],
                    e[t + 4] = n[4],
                    e[t + 5] = n[5],
                    e[t + 6] = n[6],
                    e[t + 7] = n[7],
                    e[t + 8] = n[8],
                    e
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).fromArray(this.elements)
                }
            }]),
            e
        }()
          , xt = new yt;
        function bt(e) {
            for (var t = e.length - 1; t >= 0; --t)
                if (e[t] >= 65535)
                    return !0;
            return !1
        }
        Int8Array,
        Uint8Array,
        Uint8ClampedArray,
        Int16Array,
        Uint16Array,
        Int32Array,
        Uint32Array,
        Float32Array,
        Float64Array;
        function St(e) {
            return document.createElementNS("http://www.w3.org/1999/xhtml", e)
        }
        function Mt() {
            var e = St("canvas");
            return e.style.display = "block",
            e
        }
        var Et = {};
        function Tt(e) {
            e in Et || (Et[e] = !0,
            console.warn(e))
        }
        function wt(e, t, n) {
            return new Promise((function(r, i) {
                setTimeout((function a() {
                    switch (e.clientWaitSync(t, e.SYNC_FLUSH_COMMANDS_BIT, 0)) {
                    case e.WAIT_FAILED:
                        i();
                        break;
                    case e.TIMEOUT_EXPIRED:
                        setTimeout(a, n);
                        break;
                    default:
                        r()
                    }
                }
                ), n)
            }
            ))
        }
        function At(e) {
            var t = e.elements;
            t[2] = .5 * t[2] + .5 * t[3],
            t[6] = .5 * t[6] + .5 * t[7],
            t[10] = .5 * t[10] + .5 * t[11],
            t[14] = .5 * t[14] + .5 * t[15]
        }
        function Rt(e) {
            var t = e.elements;
            -1 === t[11] ? (t[10] = -t[10] - 1,
            t[14] = -t[14]) : (t[10] = -t[10],
            t[14] = 1 - t[14])
        }
        var Ct = (new yt).set(.4123908, .3575843, .1804808, .212639, .7151687, .0721923, .0193308, .1191948, .9505322)
          , kt = (new yt).set(3.2409699, -1.5373832, -.4986108, -.9692436, 1.8759675, .0415551, .0556301, -.203977, 1.0569715);
        function Pt() {
            var e, t = {
                enabled: !0,
                workingColorSpace: Je,
                spaces: {},
                convert: function(e, t, n) {
                    return !1 !== this.enabled && t !== n && t && n ? (this.spaces[t].transfer === et && (e.r = Dt(e.r),
                    e.g = Dt(e.g),
                    e.b = Dt(e.b)),
                    this.spaces[t].primaries !== this.spaces[n].primaries && (e.applyMatrix3(this.spaces[t].toXYZ),
                    e.applyMatrix3(this.spaces[n].fromXYZ)),
                    this.spaces[n].transfer === et && (e.r = Nt(e.r),
                    e.g = Nt(e.g),
                    e.b = Nt(e.b)),
                    e) : e
                },
                fromWorkingColorSpace: function(e, t) {
                    return this.convert(e, this.workingColorSpace, t)
                },
                toWorkingColorSpace: function(e, t) {
                    return this.convert(e, t, this.workingColorSpace)
                },
                getPrimaries: function(e) {
                    return this.spaces[e].primaries
                },
                getTransfer: function(e) {
                    return e === Ze ? $e : this.spaces[e].transfer
                },
                getLuminanceCoefficients: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.workingColorSpace;
                    return e.fromArray(this.spaces[t].luminanceCoefficients)
                },
                define: function(e) {
                    Object.assign(this.spaces, e)
                },
                _getMatrix: function(e, t, n) {
                    return e.copy(this.spaces[t].toXYZ).multiply(this.spaces[n].fromXYZ)
                },
                _getDrawingBufferColorSpace: function(e) {
                    return this.spaces[e].outputColorSpaceConfig.drawingBufferColorSpace
                },
                _getUnpackColorSpace: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.workingColorSpace;
                    return this.spaces[e].workingColorSpaceConfig.unpackColorSpace
                }
            }, n = [.64, .33, .3, .6, .15, .06], r = [.2126, .7152, .0722], i = [.3127, .329];
            return t.define((p(e = {}, Je, {
                primaries: n,
                whitePoint: i,
                transfer: $e,
                toXYZ: Ct,
                fromXYZ: kt,
                luminanceCoefficients: r,
                workingColorSpaceConfig: {
                    unpackColorSpace: Qe
                },
                outputColorSpaceConfig: {
                    drawingBufferColorSpace: Qe
                }
            }),
            p(e, Qe, {
                primaries: n,
                whitePoint: i,
                transfer: et,
                toXYZ: Ct,
                fromXYZ: kt,
                luminanceCoefficients: r,
                outputColorSpaceConfig: {
                    drawingBufferColorSpace: Qe
                }
            }),
            e)),
            t
        }
        var Lt, Ut = Pt();
        function Dt(e) {
            return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
        }
        function Nt(e) {
            return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
        }
        var It = function() {
            function e() {
                _(this, e)
            }
            return x(e, null, [{
                key: "getDataURL",
                value: function(e) {
                    if (/^data:/i.test(e.src))
                        return e.src;
                    if ("undefined" === typeof HTMLCanvasElement)
                        return e.src;
                    var t;
                    if (e instanceof HTMLCanvasElement)
                        t = e;
                    else {
                        void 0 === Lt && (Lt = St("canvas")),
                        Lt.width = e.width,
                        Lt.height = e.height;
                        var n = Lt.getContext("2d");
                        e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height),
                        t = Lt
                    }
                    return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e),
                    t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png")
                }
            }, {
                key: "sRGBToLinear",
                value: function(e) {
                    if ("undefined" !== typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" !== typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" !== typeof ImageBitmap && e instanceof ImageBitmap) {
                        var t = St("canvas");
                        t.width = e.width,
                        t.height = e.height;
                        var n = t.getContext("2d");
                        n.drawImage(e, 0, 0, e.width, e.height);
                        for (var r = n.getImageData(0, 0, e.width, e.height), i = r.data, a = 0; a < i.length; a++)
                            i[a] = 255 * Dt(i[a] / 255);
                        return n.putImageData(r, 0, 0),
                        t
                    }
                    if (e.data) {
                        for (var o = e.data.slice(0), s = 0; s < o.length; s++)
                            o instanceof Uint8Array || o instanceof Uint8ClampedArray ? o[s] = Math.floor(255 * Dt(o[s] / 255)) : o[s] = Dt(o[s]);
                        return {
                            data: o,
                            width: e.width,
                            height: e.height
                        }
                    }
                    return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),
                    e
                }
            }]),
            e
        }()
          , Ot = 0
          , Ft = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                _(this, e),
                this.isSource = !0,
                Object.defineProperty(this, "id", {
                    value: Ot++
                }),
                this.uuid = dt(),
                this.data = t,
                this.dataReady = !0,
                this.version = 0
            }
            return x(e, [{
                key: "needsUpdate",
                set: function(e) {
                    !0 === e && this.version++
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = void 0 === e || "string" === typeof e;
                    if (!t && void 0 !== e.images[this.uuid])
                        return e.images[this.uuid];
                    var n = {
                        uuid: this.uuid,
                        url: ""
                    }
                      , r = this.data;
                    if (null !== r) {
                        var i;
                        if (Array.isArray(r)) {
                            i = [];
                            for (var a = 0, o = r.length; a < o; a++)
                                r[a].isDataTexture ? i.push(zt(r[a].image)) : i.push(zt(r[a]))
                        } else
                            i = zt(r);
                        n.url = i
                    }
                    return t || (e.images[this.uuid] = n),
                    n
                }
            }]),
            e
        }();
        function zt(e) {
            return "undefined" !== typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" !== typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" !== typeof ImageBitmap && e instanceof ImageBitmap ? It.getDataURL(e) : e.data ? {
                data: Array.from(e.data),
                width: e.width,
                height: e.height,
                type: e.data.constructor.name
            } : (console.warn("THREE.Texture: Unable to serialize Texture."),
            {})
        }
        var Bt = 0
          , Vt = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.DEFAULT_IMAGE, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.DEFAULT_MAPPING, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : N, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : N, l = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : z, u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : V, c = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : ne, d = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : H, f = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : n.DEFAULT_ANISOTROPY, h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : Ze;
                return _(this, n),
                (e = t.call(this)).isTexture = !0,
                Object.defineProperty(s(e), "id", {
                    value: Bt++
                }),
                e.uuid = dt(),
                e.name = "",
                e.source = new Ft(r),
                e.mipmaps = [],
                e.mapping = i,
                e.channel = 0,
                e.wrapS = a,
                e.wrapT = o,
                e.magFilter = l,
                e.minFilter = u,
                e.anisotropy = f,
                e.format = c,
                e.internalFormat = null,
                e.type = d,
                e.offset = new _t(0,0),
                e.repeat = new _t(1,1),
                e.center = new _t(0,0),
                e.rotation = 0,
                e.matrixAutoUpdate = !0,
                e.matrix = new yt,
                e.generateMipmaps = !0,
                e.premultiplyAlpha = !1,
                e.flipY = !0,
                e.unpackAlignment = 4,
                e.colorSpace = h,
                e.userData = {},
                e.version = 0,
                e.onUpdate = null,
                e.renderTarget = null,
                e.isRenderTargetTexture = !1,
                e.pmremVersion = 0,
                e
            }
            return x(n, [{
                key: "image",
                get: function() {
                    return this.source.data
                },
                set: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    this.source.data = e
                }
            }, {
                key: "updateMatrix",
                value: function() {
                    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.name = e.name,
                    this.source = e.source,
                    this.mipmaps = e.mipmaps.slice(0),
                    this.mapping = e.mapping,
                    this.channel = e.channel,
                    this.wrapS = e.wrapS,
                    this.wrapT = e.wrapT,
                    this.magFilter = e.magFilter,
                    this.minFilter = e.minFilter,
                    this.anisotropy = e.anisotropy,
                    this.format = e.format,
                    this.internalFormat = e.internalFormat,
                    this.type = e.type,
                    this.offset.copy(e.offset),
                    this.repeat.copy(e.repeat),
                    this.center.copy(e.center),
                    this.rotation = e.rotation,
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this.matrix.copy(e.matrix),
                    this.generateMipmaps = e.generateMipmaps,
                    this.premultiplyAlpha = e.premultiplyAlpha,
                    this.flipY = e.flipY,
                    this.unpackAlignment = e.unpackAlignment,
                    this.colorSpace = e.colorSpace,
                    this.renderTarget = e.renderTarget,
                    this.isRenderTargetTexture = e.isRenderTargetTexture,
                    this.userData = JSON.parse(JSON.stringify(e.userData)),
                    this.needsUpdate = !0,
                    this
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = void 0 === e || "string" === typeof e;
                    if (!t && void 0 !== e.textures[this.uuid])
                        return e.textures[this.uuid];
                    var n = {
                        metadata: {
                            version: 4.6,
                            type: "Texture",
                            generator: "Texture.toJSON"
                        },
                        uuid: this.uuid,
                        name: this.name,
                        image: this.source.toJSON(e).uuid,
                        mapping: this.mapping,
                        channel: this.channel,
                        repeat: [this.repeat.x, this.repeat.y],
                        offset: [this.offset.x, this.offset.y],
                        center: [this.center.x, this.center.y],
                        rotation: this.rotation,
                        wrap: [this.wrapS, this.wrapT],
                        format: this.format,
                        internalFormat: this.internalFormat,
                        type: this.type,
                        colorSpace: this.colorSpace,
                        minFilter: this.minFilter,
                        magFilter: this.magFilter,
                        anisotropy: this.anisotropy,
                        flipY: this.flipY,
                        generateMipmaps: this.generateMipmaps,
                        premultiplyAlpha: this.premultiplyAlpha,
                        unpackAlignment: this.unpackAlignment
                    };
                    return Object.keys(this.userData).length > 0 && (n.userData = this.userData),
                    t || (e.textures[this.uuid] = n),
                    n
                }
            }, {
                key: "dispose",
                value: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }, {
                key: "transformUv",
                value: function(e) {
                    if (300 !== this.mapping)
                        return e;
                    if (e.applyMatrix3(this.matrix),
                    e.x < 0 || e.x > 1)
                        switch (this.wrapS) {
                        case D:
                            e.x = e.x - Math.floor(e.x);
                            break;
                        case N:
                            e.x = e.x < 0 ? 0 : 1;
                            break;
                        case I:
                            1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                        }
                    if (e.y < 0 || e.y > 1)
                        switch (this.wrapT) {
                        case D:
                            e.y = e.y - Math.floor(e.y);
                            break;
                        case N:
                            e.y = e.y < 0 ? 0 : 1;
                            break;
                        case I:
                            1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
                        }
                    return this.flipY && (e.y = 1 - e.y),
                    e
                }
            }, {
                key: "needsUpdate",
                set: function(e) {
                    !0 === e && (this.version++,
                    this.source.needsUpdate = !0)
                }
            }, {
                key: "needsPMREMUpdate",
                set: function(e) {
                    !0 === e && this.pmremVersion++
                }
            }]),
            n
        }(ot);
        Vt.DEFAULT_IMAGE = null,
        Vt.DEFAULT_MAPPING = 300,
        Vt.DEFAULT_ANISOTROPY = 1;
        var Ht = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                  , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
                  , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                _(this, t),
                t.prototype.isVector4 = !0,
                this.x = e,
                this.y = n,
                this.z = r,
                this.w = i
            }
            return x(t, [{
                key: "width",
                get: function() {
                    return this.z
                },
                set: function(e) {
                    this.z = e
                }
            }, {
                key: "height",
                get: function() {
                    return this.w
                },
                set: function(e) {
                    this.w = e
                }
            }, {
                key: "set",
                value: function(e, t, n, r) {
                    return this.x = e,
                    this.y = t,
                    this.z = n,
                    this.w = r,
                    this
                }
            }, {
                key: "setScalar",
                value: function(e) {
                    return this.x = e,
                    this.y = e,
                    this.z = e,
                    this.w = e,
                    this
                }
            }, {
                key: "setX",
                value: function(e) {
                    return this.x = e,
                    this
                }
            }, {
                key: "setY",
                value: function(e) {
                    return this.y = e,
                    this
                }
            }, {
                key: "setZ",
                value: function(e) {
                    return this.z = e,
                    this
                }
            }, {
                key: "setW",
                value: function(e) {
                    return this.w = e,
                    this
                }
            }, {
                key: "setComponent",
                value: function(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    case 3:
                        this.w = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                }
            }, {
                key: "getComponent",
                value: function(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    case 3:
                        return this.w;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this.x,this.y,this.z,this.w)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this.z = e.z,
                    this.w = void 0 !== e.w ? e.w : 1,
                    this
                }
            }, {
                key: "add",
                value: function(e) {
                    return this.x += e.x,
                    this.y += e.y,
                    this.z += e.z,
                    this.w += e.w,
                    this
                }
            }, {
                key: "addScalar",
                value: function(e) {
                    return this.x += e,
                    this.y += e,
                    this.z += e,
                    this.w += e,
                    this
                }
            }, {
                key: "addVectors",
                value: function(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this.z = e.z + t.z,
                    this.w = e.w + t.w,
                    this
                }
            }, {
                key: "addScaledVector",
                value: function(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this.z += e.z * t,
                    this.w += e.w * t,
                    this
                }
            }, {
                key: "sub",
                value: function(e) {
                    return this.x -= e.x,
                    this.y -= e.y,
                    this.z -= e.z,
                    this.w -= e.w,
                    this
                }
            }, {
                key: "subScalar",
                value: function(e) {
                    return this.x -= e,
                    this.y -= e,
                    this.z -= e,
                    this.w -= e,
                    this
                }
            }, {
                key: "subVectors",
                value: function(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this.z = e.z - t.z,
                    this.w = e.w - t.w,
                    this
                }
            }, {
                key: "multiply",
                value: function(e) {
                    return this.x *= e.x,
                    this.y *= e.y,
                    this.z *= e.z,
                    this.w *= e.w,
                    this
                }
            }, {
                key: "multiplyScalar",
                value: function(e) {
                    return this.x *= e,
                    this.y *= e,
                    this.z *= e,
                    this.w *= e,
                    this
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    var t = this.x
                      , n = this.y
                      , r = this.z
                      , i = this.w
                      , a = e.elements;
                    return this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i,
                    this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i,
                    this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i,
                    this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i,
                    this
                }
            }, {
                key: "divide",
                value: function(e) {
                    return this.x /= e.x,
                    this.y /= e.y,
                    this.z /= e.z,
                    this.w /= e.w,
                    this
                }
            }, {
                key: "divideScalar",
                value: function(e) {
                    return this.multiplyScalar(1 / e)
                }
            }, {
                key: "setAxisAngleFromQuaternion",
                value: function(e) {
                    this.w = 2 * Math.acos(e.w);
                    var t = Math.sqrt(1 - e.w * e.w);
                    return t < 1e-4 ? (this.x = 1,
                    this.y = 0,
                    this.z = 0) : (this.x = e.x / t,
                    this.y = e.y / t,
                    this.z = e.z / t),
                    this
                }
            }, {
                key: "setAxisAngleFromRotationMatrix",
                value: function(e) {
                    var t, n, r, i, a = .01, o = .1, s = e.elements, l = s[0], u = s[4], c = s[8], d = s[1], f = s[5], h = s[9], p = s[2], m = s[6], v = s[10];
                    if (Math.abs(u - d) < a && Math.abs(c - p) < a && Math.abs(h - m) < a) {
                        if (Math.abs(u + d) < o && Math.abs(c + p) < o && Math.abs(h + m) < o && Math.abs(l + f + v - 3) < o)
                            return this.set(1, 0, 0, 0),
                            this;
                        t = Math.PI;
                        var g = (l + 1) / 2
                          , _ = (f + 1) / 2
                          , y = (v + 1) / 2
                          , x = (u + d) / 4
                          , b = (c + p) / 4
                          , S = (h + m) / 4;
                        return g > _ && g > y ? g < a ? (n = 0,
                        r = .707106781,
                        i = .707106781) : (r = x / (n = Math.sqrt(g)),
                        i = b / n) : _ > y ? _ < a ? (n = .707106781,
                        r = 0,
                        i = .707106781) : (n = x / (r = Math.sqrt(_)),
                        i = S / r) : y < a ? (n = .707106781,
                        r = .707106781,
                        i = 0) : (n = b / (i = Math.sqrt(y)),
                        r = S / i),
                        this.set(n, r, i, t),
                        this
                    }
                    var M = Math.sqrt((m - h) * (m - h) + (c - p) * (c - p) + (d - u) * (d - u));
                    return Math.abs(M) < .001 && (M = 1),
                    this.x = (m - h) / M,
                    this.y = (c - p) / M,
                    this.z = (d - u) / M,
                    this.w = Math.acos((l + f + v - 1) / 2),
                    this
                }
            }, {
                key: "setFromMatrixPosition",
                value: function(e) {
                    var t = e.elements;
                    return this.x = t[12],
                    this.y = t[13],
                    this.z = t[14],
                    this.w = t[15],
                    this
                }
            }, {
                key: "min",
                value: function(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this.z = Math.min(this.z, e.z),
                    this.w = Math.min(this.w, e.w),
                    this
                }
            }, {
                key: "max",
                value: function(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this.z = Math.max(this.z, e.z),
                    this.w = Math.max(this.w, e.w),
                    this
                }
            }, {
                key: "clamp",
                value: function(e, t) {
                    return this.x = ft(this.x, e.x, t.x),
                    this.y = ft(this.y, e.y, t.y),
                    this.z = ft(this.z, e.z, t.z),
                    this.w = ft(this.w, e.w, t.w),
                    this
                }
            }, {
                key: "clampScalar",
                value: function(e, t) {
                    return this.x = ft(this.x, e, t),
                    this.y = ft(this.y, e, t),
                    this.z = ft(this.z, e, t),
                    this.w = ft(this.w, e, t),
                    this
                }
            }, {
                key: "clampLength",
                value: function(e, t) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(ft(n, e, t))
                }
            }, {
                key: "floor",
                value: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this.w = Math.floor(this.w),
                    this
                }
            }, {
                key: "ceil",
                value: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this.w = Math.ceil(this.w),
                    this
                }
            }, {
                key: "round",
                value: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this.w = Math.round(this.w),
                    this
                }
            }, {
                key: "roundToZero",
                value: function() {
                    return this.x = Math.trunc(this.x),
                    this.y = Math.trunc(this.y),
                    this.z = Math.trunc(this.z),
                    this.w = Math.trunc(this.w),
                    this
                }
            }, {
                key: "negate",
                value: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this.w = -this.w,
                    this
                }
            }, {
                key: "dot",
                value: function(e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                }
            }, {
                key: "lengthSq",
                value: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                }
            }, {
                key: "length",
                value: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                }
            }, {
                key: "manhattanLength",
                value: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                }
            }, {
                key: "normalize",
                value: function() {
                    return this.divideScalar(this.length() || 1)
                }
            }, {
                key: "setLength",
                value: function(e) {
                    return this.normalize().multiplyScalar(e)
                }
            }, {
                key: "lerp",
                value: function(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this.z += (e.z - this.z) * t,
                    this.w += (e.w - this.w) * t,
                    this
                }
            }, {
                key: "lerpVectors",
                value: function(e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n,
                    this.y = e.y + (t.y - e.y) * n,
                    this.z = e.z + (t.z - e.z) * n,
                    this.w = e.w + (t.w - e.w) * n,
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return this.x = e[t],
                    this.y = e[t + 1],
                    this.z = e[t + 2],
                    this.w = e[t + 3],
                    this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return e[t] = this.x,
                    e[t + 1] = this.y,
                    e[t + 2] = this.z,
                    e[t + 3] = this.w,
                    e
                }
            }, {
                key: "fromBufferAttribute",
                value: function(e, t) {
                    return this.x = e.getX(t),
                    this.y = e.getY(t),
                    this.z = e.getZ(t),
                    this.w = e.getW(t),
                    this
                }
            }, {
                key: "random",
                value: function() {
                    return this.x = Math.random(),
                    this.y = Math.random(),
                    this.z = Math.random(),
                    this.w = Math.random(),
                    this
                }
            }, {
                key: Symbol.iterator,
                value: i().mark((function e() {
                    return i().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2,
                                this.x;
                            case 2:
                                return e.next = 4,
                                this.y;
                            case 4:
                                return e.next = 6,
                                this.z;
                            case 6:
                                return e.next = 8,
                                this.w;
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))
            }]),
            t
        }()
          , Gt = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                _(this, n),
                (e = t.call(this)).isRenderTarget = !0,
                e.width = r,
                e.height = i,
                e.depth = 1,
                e.scissor = new Ht(0,0,r,i),
                e.scissorTest = !1,
                e.viewport = new Ht(0,0,r,i);
                var o = {
                    width: r,
                    height: i,
                    depth: 1
                };
                a = Object.assign({
                    generateMipmaps: !1,
                    internalFormat: null,
                    minFilter: z,
                    depthBuffer: !0,
                    stencilBuffer: !1,
                    resolveDepthBuffer: !0,
                    resolveStencilBuffer: !0,
                    depthTexture: null,
                    samples: 0,
                    count: 1
                }, a);
                var l = new Vt(o,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.colorSpace);
                l.flipY = !1,
                l.generateMipmaps = a.generateMipmaps,
                l.internalFormat = a.internalFormat,
                e.textures = [];
                for (var u = a.count, c = 0; c < u; c++)
                    e.textures[c] = l.clone(),
                    e.textures[c].isRenderTargetTexture = !0,
                    e.textures[c].renderTarget = s(e);
                return e.depthBuffer = a.depthBuffer,
                e.stencilBuffer = a.stencilBuffer,
                e.resolveDepthBuffer = a.resolveDepthBuffer,
                e.resolveStencilBuffer = a.resolveStencilBuffer,
                e._depthTexture = null,
                e.depthTexture = a.depthTexture,
                e.samples = a.samples,
                e
            }
            return x(n, [{
                key: "texture",
                get: function() {
                    return this.textures[0]
                },
                set: function(e) {
                    this.textures[0] = e
                }
            }, {
                key: "depthTexture",
                get: function() {
                    return this._depthTexture
                },
                set: function(e) {
                    null !== this._depthTexture && (this._depthTexture.renderTarget = null),
                    null !== e && (e.renderTarget = this),
                    this._depthTexture = e
                }
            }, {
                key: "setSize",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                    if (this.width !== e || this.height !== t || this.depth !== n) {
                        this.width = e,
                        this.height = t,
                        this.depth = n;
                        for (var r = 0, i = this.textures.length; r < i; r++)
                            this.textures[r].image.width = e,
                            this.textures[r].image.height = t,
                            this.textures[r].image.depth = n;
                        this.dispose()
                    }
                    this.viewport.set(0, 0, e, t),
                    this.scissor.set(0, 0, e, t)
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }, {
                key: "copy",
                value: function(e) {
                    this.width = e.width,
                    this.height = e.height,
                    this.depth = e.depth,
                    this.scissor.copy(e.scissor),
                    this.scissorTest = e.scissorTest,
                    this.viewport.copy(e.viewport),
                    this.textures.length = 0;
                    for (var t = 0, n = e.textures.length; t < n; t++)
                        this.textures[t] = e.textures[t].clone(),
                        this.textures[t].isRenderTargetTexture = !0,
                        this.textures[t].renderTarget = this;
                    var r = Object.assign({}, e.texture.image);
                    return this.texture.source = new Ft(r),
                    this.depthBuffer = e.depthBuffer,
                    this.stencilBuffer = e.stencilBuffer,
                    this.resolveDepthBuffer = e.resolveDepthBuffer,
                    this.resolveStencilBuffer = e.resolveStencilBuffer,
                    null !== e.depthTexture && (this.depthTexture = e.depthTexture.clone()),
                    this.samples = e.samples,
                    this
                }
            }, {
                key: "dispose",
                value: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }]),
            n
        }(ot)
          , Wt = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return _(this, n),
                (e = t.call(this, r, i, a)).isWebGLRenderTarget = !0,
                e
            }
            return x(n)
        }(Gt)
          , Xt = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                return _(this, n),
                (e = t.call(this, null)).isDataArrayTexture = !0,
                e.image = {
                    data: r,
                    width: i,
                    height: a,
                    depth: o
                },
                e.magFilter = O,
                e.minFilter = O,
                e.wrapR = N,
                e.generateMipmaps = !1,
                e.flipY = !1,
                e.unpackAlignment = 1,
                e.layerUpdates = new Set,
                e
            }
            return x(n, [{
                key: "addLayerUpdate",
                value: function(e) {
                    this.layerUpdates.add(e)
                }
            }, {
                key: "clearLayerUpdates",
                value: function() {
                    this.layerUpdates.clear()
                }
            }]),
            n
        }(Vt)
          , jt = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                return _(this, n),
                (e = t.call(this, null)).isData3DTexture = !0,
                e.image = {
                    data: r,
                    width: i,
                    height: a,
                    depth: o
                },
                e.magFilter = O,
                e.minFilter = O,
                e.wrapR = N,
                e.generateMipmaps = !1,
                e.flipY = !1,
                e.unpackAlignment = 1,
                e
            }
            return x(n)
        }(Vt)
          , qt = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                  , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
                  , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                _(this, t),
                this.isQuaternion = !0,
                this._x = e,
                this._y = n,
                this._z = r,
                this._w = i
            }
            return x(t, [{
                key: "x",
                get: function() {
                    return this._x
                },
                set: function(e) {
                    this._x = e,
                    this._onChangeCallback()
                }
            }, {
                key: "y",
                get: function() {
                    return this._y
                },
                set: function(e) {
                    this._y = e,
                    this._onChangeCallback()
                }
            }, {
                key: "z",
                get: function() {
                    return this._z
                },
                set: function(e) {
                    this._z = e,
                    this._onChangeCallback()
                }
            }, {
                key: "w",
                get: function() {
                    return this._w
                },
                set: function(e) {
                    this._w = e,
                    this._onChangeCallback()
                }
            }, {
                key: "set",
                value: function(e, t, n, r) {
                    return this._x = e,
                    this._y = t,
                    this._z = n,
                    this._w = r,
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this._x,this._y,this._z,this._w)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this._x = e.x,
                    this._y = e.y,
                    this._z = e.z,
                    this._w = e.w,
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "setFromEuler",
                value: function(e) {
                    var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]
                      , n = e._x
                      , r = e._y
                      , i = e._z
                      , a = e._order
                      , o = Math.cos
                      , s = Math.sin
                      , l = o(n / 2)
                      , u = o(r / 2)
                      , c = o(i / 2)
                      , d = s(n / 2)
                      , f = s(r / 2)
                      , h = s(i / 2);
                    switch (a) {
                    case "XYZ":
                        this._x = d * u * c + l * f * h,
                        this._y = l * f * c - d * u * h,
                        this._z = l * u * h + d * f * c,
                        this._w = l * u * c - d * f * h;
                        break;
                    case "YXZ":
                        this._x = d * u * c + l * f * h,
                        this._y = l * f * c - d * u * h,
                        this._z = l * u * h - d * f * c,
                        this._w = l * u * c + d * f * h;
                        break;
                    case "ZXY":
                        this._x = d * u * c - l * f * h,
                        this._y = l * f * c + d * u * h,
                        this._z = l * u * h + d * f * c,
                        this._w = l * u * c - d * f * h;
                        break;
                    case "ZYX":
                        this._x = d * u * c - l * f * h,
                        this._y = l * f * c + d * u * h,
                        this._z = l * u * h - d * f * c,
                        this._w = l * u * c + d * f * h;
                        break;
                    case "YZX":
                        this._x = d * u * c + l * f * h,
                        this._y = l * f * c + d * u * h,
                        this._z = l * u * h - d * f * c,
                        this._w = l * u * c - d * f * h;
                        break;
                    case "XZY":
                        this._x = d * u * c - l * f * h,
                        this._y = l * f * c - d * u * h,
                        this._z = l * u * h + d * f * c,
                        this._w = l * u * c + d * f * h;
                        break;
                    default:
                        console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + a)
                    }
                    return !0 === t && this._onChangeCallback(),
                    this
                }
            }, {
                key: "setFromAxisAngle",
                value: function(e, t) {
                    var n = t / 2
                      , r = Math.sin(n);
                    return this._x = e.x * r,
                    this._y = e.y * r,
                    this._z = e.z * r,
                    this._w = Math.cos(n),
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "setFromRotationMatrix",
                value: function(e) {
                    var t = e.elements
                      , n = t[0]
                      , r = t[4]
                      , i = t[8]
                      , a = t[1]
                      , o = t[5]
                      , s = t[9]
                      , l = t[2]
                      , u = t[6]
                      , c = t[10]
                      , d = n + o + c;
                    if (d > 0) {
                        var f = .5 / Math.sqrt(d + 1);
                        this._w = .25 / f,
                        this._x = (u - s) * f,
                        this._y = (i - l) * f,
                        this._z = (a - r) * f
                    } else if (n > o && n > c) {
                        var h = 2 * Math.sqrt(1 + n - o - c);
                        this._w = (u - s) / h,
                        this._x = .25 * h,
                        this._y = (r + a) / h,
                        this._z = (i + l) / h
                    } else if (o > c) {
                        var p = 2 * Math.sqrt(1 + o - n - c);
                        this._w = (i - l) / p,
                        this._x = (r + a) / p,
                        this._y = .25 * p,
                        this._z = (s + u) / p
                    } else {
                        var m = 2 * Math.sqrt(1 + c - n - o);
                        this._w = (a - r) / m,
                        this._x = (i + l) / m,
                        this._y = (s + u) / m,
                        this._z = .25 * m
                    }
                    return this._onChangeCallback(),
                    this
                }
            }, {
                key: "setFromUnitVectors",
                value: function(e, t) {
                    var n = e.dot(t) + 1;
                    return n < Number.EPSILON ? (n = 0,
                    Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y,
                    this._y = e.x,
                    this._z = 0,
                    this._w = n) : (this._x = 0,
                    this._y = -e.z,
                    this._z = e.y,
                    this._w = n)) : (this._x = e.y * t.z - e.z * t.y,
                    this._y = e.z * t.x - e.x * t.z,
                    this._z = e.x * t.y - e.y * t.x,
                    this._w = n),
                    this.normalize()
                }
            }, {
                key: "angleTo",
                value: function(e) {
                    return 2 * Math.acos(Math.abs(ft(this.dot(e), -1, 1)))
                }
            }, {
                key: "rotateTowards",
                value: function(e, t) {
                    var n = this.angleTo(e);
                    if (0 === n)
                        return this;
                    var r = Math.min(1, t / n);
                    return this.slerp(e, r),
                    this
                }
            }, {
                key: "identity",
                value: function() {
                    return this.set(0, 0, 0, 1)
                }
            }, {
                key: "invert",
                value: function() {
                    return this.conjugate()
                }
            }, {
                key: "conjugate",
                value: function() {
                    return this._x *= -1,
                    this._y *= -1,
                    this._z *= -1,
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "dot",
                value: function(e) {
                    return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
                }
            }, {
                key: "lengthSq",
                value: function() {
                    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                }
            }, {
                key: "length",
                value: function() {
                    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                }
            }, {
                key: "normalize",
                value: function() {
                    var e = this.length();
                    return 0 === e ? (this._x = 0,
                    this._y = 0,
                    this._z = 0,
                    this._w = 1) : (e = 1 / e,
                    this._x = this._x * e,
                    this._y = this._y * e,
                    this._z = this._z * e,
                    this._w = this._w * e),
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "multiply",
                value: function(e) {
                    return this.multiplyQuaternions(this, e)
                }
            }, {
                key: "premultiply",
                value: function(e) {
                    return this.multiplyQuaternions(e, this)
                }
            }, {
                key: "multiplyQuaternions",
                value: function(e, t) {
                    var n = e._x
                      , r = e._y
                      , i = e._z
                      , a = e._w
                      , o = t._x
                      , s = t._y
                      , l = t._z
                      , u = t._w;
                    return this._x = n * u + a * o + r * l - i * s,
                    this._y = r * u + a * s + i * o - n * l,
                    this._z = i * u + a * l + n * s - r * o,
                    this._w = a * u - n * o - r * s - i * l,
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "slerp",
                value: function(e, t) {
                    if (0 === t)
                        return this;
                    if (1 === t)
                        return this.copy(e);
                    var n = this._x
                      , r = this._y
                      , i = this._z
                      , a = this._w
                      , o = a * e._w + n * e._x + r * e._y + i * e._z;
                    if (o < 0 ? (this._w = -e._w,
                    this._x = -e._x,
                    this._y = -e._y,
                    this._z = -e._z,
                    o = -o) : this.copy(e),
                    o >= 1)
                        return this._w = a,
                        this._x = n,
                        this._y = r,
                        this._z = i,
                        this;
                    var s = 1 - o * o;
                    if (s <= Number.EPSILON) {
                        var l = 1 - t;
                        return this._w = l * a + t * this._w,
                        this._x = l * n + t * this._x,
                        this._y = l * r + t * this._y,
                        this._z = l * i + t * this._z,
                        this.normalize(),
                        this
                    }
                    var u = Math.sqrt(s)
                      , c = Math.atan2(u, o)
                      , d = Math.sin((1 - t) * c) / u
                      , f = Math.sin(t * c) / u;
                    return this._w = a * d + this._w * f,
                    this._x = n * d + this._x * f,
                    this._y = r * d + this._y * f,
                    this._z = i * d + this._z * f,
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "slerpQuaternions",
                value: function(e, t, n) {
                    return this.copy(e).slerp(t, n)
                }
            }, {
                key: "random",
                value: function() {
                    var e = 2 * Math.PI * Math.random()
                      , t = 2 * Math.PI * Math.random()
                      , n = Math.random()
                      , r = Math.sqrt(1 - n)
                      , i = Math.sqrt(n);
                    return this.set(r * Math.sin(e), r * Math.cos(e), i * Math.sin(t), i * Math.cos(t))
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return this._x = e[t],
                    this._y = e[t + 1],
                    this._z = e[t + 2],
                    this._w = e[t + 3],
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return e[t] = this._x,
                    e[t + 1] = this._y,
                    e[t + 2] = this._z,
                    e[t + 3] = this._w,
                    e
                }
            }, {
                key: "fromBufferAttribute",
                value: function(e, t) {
                    return this._x = e.getX(t),
                    this._y = e.getY(t),
                    this._z = e.getZ(t),
                    this._w = e.getW(t),
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "toJSON",
                value: function() {
                    return this.toArray()
                }
            }, {
                key: "_onChange",
                value: function(e) {
                    return this._onChangeCallback = e,
                    this
                }
            }, {
                key: "_onChangeCallback",
                value: function() {}
            }, {
                key: Symbol.iterator,
                value: i().mark((function e() {
                    return i().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2,
                                this._x;
                            case 2:
                                return e.next = 4,
                                this._y;
                            case 4:
                                return e.next = 6,
                                this._z;
                            case 6:
                                return e.next = 8,
                                this._w;
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))
            }], [{
                key: "slerpFlat",
                value: function(e, t, n, r, i, a, o) {
                    var s = n[r + 0]
                      , l = n[r + 1]
                      , u = n[r + 2]
                      , c = n[r + 3]
                      , d = i[a + 0]
                      , f = i[a + 1]
                      , h = i[a + 2]
                      , p = i[a + 3];
                    if (0 === o)
                        return e[t + 0] = s,
                        e[t + 1] = l,
                        e[t + 2] = u,
                        void (e[t + 3] = c);
                    if (1 === o)
                        return e[t + 0] = d,
                        e[t + 1] = f,
                        e[t + 2] = h,
                        void (e[t + 3] = p);
                    if (c !== p || s !== d || l !== f || u !== h) {
                        var m = 1 - o
                          , v = s * d + l * f + u * h + c * p
                          , g = v >= 0 ? 1 : -1
                          , _ = 1 - v * v;
                        if (_ > Number.EPSILON) {
                            var y = Math.sqrt(_)
                              , x = Math.atan2(y, v * g);
                            m = Math.sin(m * x) / y,
                            o = Math.sin(o * x) / y
                        }
                        var b = o * g;
                        if (s = s * m + d * b,
                        l = l * m + f * b,
                        u = u * m + h * b,
                        c = c * m + p * b,
                        m === 1 - o) {
                            var S = 1 / Math.sqrt(s * s + l * l + u * u + c * c);
                            s *= S,
                            l *= S,
                            u *= S,
                            c *= S
                        }
                    }
                    e[t] = s,
                    e[t + 1] = l,
                    e[t + 2] = u,
                    e[t + 3] = c
                }
            }, {
                key: "multiplyQuaternionsFlat",
                value: function(e, t, n, r, i, a) {
                    var o = n[r]
                      , s = n[r + 1]
                      , l = n[r + 2]
                      , u = n[r + 3]
                      , c = i[a]
                      , d = i[a + 1]
                      , f = i[a + 2]
                      , h = i[a + 3];
                    return e[t] = o * h + u * c + s * f - l * d,
                    e[t + 1] = s * h + u * d + l * c - o * f,
                    e[t + 2] = l * h + u * f + o * d - s * c,
                    e[t + 3] = u * h - o * c - s * d - l * f,
                    e
                }
            }]),
            t
        }()
          , Yt = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                  , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                _(this, t),
                t.prototype.isVector3 = !0,
                this.x = e,
                this.y = n,
                this.z = r
            }
            return x(t, [{
                key: "set",
                value: function(e, t, n) {
                    return void 0 === n && (n = this.z),
                    this.x = e,
                    this.y = t,
                    this.z = n,
                    this
                }
            }, {
                key: "setScalar",
                value: function(e) {
                    return this.x = e,
                    this.y = e,
                    this.z = e,
                    this
                }
            }, {
                key: "setX",
                value: function(e) {
                    return this.x = e,
                    this
                }
            }, {
                key: "setY",
                value: function(e) {
                    return this.y = e,
                    this
                }
            }, {
                key: "setZ",
                value: function(e) {
                    return this.z = e,
                    this
                }
            }, {
                key: "setComponent",
                value: function(e, t) {
                    switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                    return this
                }
            }, {
                key: "getComponent",
                value: function(e) {
                    switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    default:
                        throw new Error("index is out of range: " + e)
                    }
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this.x,this.y,this.z)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.x = e.x,
                    this.y = e.y,
                    this.z = e.z,
                    this
                }
            }, {
                key: "add",
                value: function(e) {
                    return this.x += e.x,
                    this.y += e.y,
                    this.z += e.z,
                    this
                }
            }, {
                key: "addScalar",
                value: function(e) {
                    return this.x += e,
                    this.y += e,
                    this.z += e,
                    this
                }
            }, {
                key: "addVectors",
                value: function(e, t) {
                    return this.x = e.x + t.x,
                    this.y = e.y + t.y,
                    this.z = e.z + t.z,
                    this
                }
            }, {
                key: "addScaledVector",
                value: function(e, t) {
                    return this.x += e.x * t,
                    this.y += e.y * t,
                    this.z += e.z * t,
                    this
                }
            }, {
                key: "sub",
                value: function(e) {
                    return this.x -= e.x,
                    this.y -= e.y,
                    this.z -= e.z,
                    this
                }
            }, {
                key: "subScalar",
                value: function(e) {
                    return this.x -= e,
                    this.y -= e,
                    this.z -= e,
                    this
                }
            }, {
                key: "subVectors",
                value: function(e, t) {
                    return this.x = e.x - t.x,
                    this.y = e.y - t.y,
                    this.z = e.z - t.z,
                    this
                }
            }, {
                key: "multiply",
                value: function(e) {
                    return this.x *= e.x,
                    this.y *= e.y,
                    this.z *= e.z,
                    this
                }
            }, {
                key: "multiplyScalar",
                value: function(e) {
                    return this.x *= e,
                    this.y *= e,
                    this.z *= e,
                    this
                }
            }, {
                key: "multiplyVectors",
                value: function(e, t) {
                    return this.x = e.x * t.x,
                    this.y = e.y * t.y,
                    this.z = e.z * t.z,
                    this
                }
            }, {
                key: "applyEuler",
                value: function(e) {
                    return this.applyQuaternion(Zt.setFromEuler(e))
                }
            }, {
                key: "applyAxisAngle",
                value: function(e, t) {
                    return this.applyQuaternion(Zt.setFromAxisAngle(e, t))
                }
            }, {
                key: "applyMatrix3",
                value: function(e) {
                    var t = this.x
                      , n = this.y
                      , r = this.z
                      , i = e.elements;
                    return this.x = i[0] * t + i[3] * n + i[6] * r,
                    this.y = i[1] * t + i[4] * n + i[7] * r,
                    this.z = i[2] * t + i[5] * n + i[8] * r,
                    this
                }
            }, {
                key: "applyNormalMatrix",
                value: function(e) {
                    return this.applyMatrix3(e).normalize()
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    var t = this.x
                      , n = this.y
                      , r = this.z
                      , i = e.elements
                      , a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
                    return this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a,
                    this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a,
                    this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a,
                    this
                }
            }, {
                key: "applyQuaternion",
                value: function(e) {
                    var t = this.x
                      , n = this.y
                      , r = this.z
                      , i = e.x
                      , a = e.y
                      , o = e.z
                      , s = e.w
                      , l = 2 * (a * r - o * n)
                      , u = 2 * (o * t - i * r)
                      , c = 2 * (i * n - a * t);
                    return this.x = t + s * l + a * c - o * u,
                    this.y = n + s * u + o * l - i * c,
                    this.z = r + s * c + i * u - a * l,
                    this
                }
            }, {
                key: "project",
                value: function(e) {
                    return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
                }
            }, {
                key: "unproject",
                value: function(e) {
                    return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
                }
            }, {
                key: "transformDirection",
                value: function(e) {
                    var t = this.x
                      , n = this.y
                      , r = this.z
                      , i = e.elements;
                    return this.x = i[0] * t + i[4] * n + i[8] * r,
                    this.y = i[1] * t + i[5] * n + i[9] * r,
                    this.z = i[2] * t + i[6] * n + i[10] * r,
                    this.normalize()
                }
            }, {
                key: "divide",
                value: function(e) {
                    return this.x /= e.x,
                    this.y /= e.y,
                    this.z /= e.z,
                    this
                }
            }, {
                key: "divideScalar",
                value: function(e) {
                    return this.multiplyScalar(1 / e)
                }
            }, {
                key: "min",
                value: function(e) {
                    return this.x = Math.min(this.x, e.x),
                    this.y = Math.min(this.y, e.y),
                    this.z = Math.min(this.z, e.z),
                    this
                }
            }, {
                key: "max",
                value: function(e) {
                    return this.x = Math.max(this.x, e.x),
                    this.y = Math.max(this.y, e.y),
                    this.z = Math.max(this.z, e.z),
                    this
                }
            }, {
                key: "clamp",
                value: function(e, t) {
                    return this.x = ft(this.x, e.x, t.x),
                    this.y = ft(this.y, e.y, t.y),
                    this.z = ft(this.z, e.z, t.z),
                    this
                }
            }, {
                key: "clampScalar",
                value: function(e, t) {
                    return this.x = ft(this.x, e, t),
                    this.y = ft(this.y, e, t),
                    this.z = ft(this.z, e, t),
                    this
                }
            }, {
                key: "clampLength",
                value: function(e, t) {
                    var n = this.length();
                    return this.divideScalar(n || 1).multiplyScalar(ft(n, e, t))
                }
            }, {
                key: "floor",
                value: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this
                }
            }, {
                key: "ceil",
                value: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this
                }
            }, {
                key: "round",
                value: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this
                }
            }, {
                key: "roundToZero",
                value: function() {
                    return this.x = Math.trunc(this.x),
                    this.y = Math.trunc(this.y),
                    this.z = Math.trunc(this.z),
                    this
                }
            }, {
                key: "negate",
                value: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this
                }
            }, {
                key: "dot",
                value: function(e) {
                    return this.x * e.x + this.y * e.y + this.z * e.z
                }
            }, {
                key: "lengthSq",
                value: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                }
            }, {
                key: "length",
                value: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                }
            }, {
                key: "manhattanLength",
                value: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                }
            }, {
                key: "normalize",
                value: function() {
                    return this.divideScalar(this.length() || 1)
                }
            }, {
                key: "setLength",
                value: function(e) {
                    return this.normalize().multiplyScalar(e)
                }
            }, {
                key: "lerp",
                value: function(e, t) {
                    return this.x += (e.x - this.x) * t,
                    this.y += (e.y - this.y) * t,
                    this.z += (e.z - this.z) * t,
                    this
                }
            }, {
                key: "lerpVectors",
                value: function(e, t, n) {
                    return this.x = e.x + (t.x - e.x) * n,
                    this.y = e.y + (t.y - e.y) * n,
                    this.z = e.z + (t.z - e.z) * n,
                    this
                }
            }, {
                key: "cross",
                value: function(e) {
                    return this.crossVectors(this, e)
                }
            }, {
                key: "crossVectors",
                value: function(e, t) {
                    var n = e.x
                      , r = e.y
                      , i = e.z
                      , a = t.x
                      , o = t.y
                      , s = t.z;
                    return this.x = r * s - i * o,
                    this.y = i * a - n * s,
                    this.z = n * o - r * a,
                    this
                }
            }, {
                key: "projectOnVector",
                value: function(e) {
                    var t = e.lengthSq();
                    if (0 === t)
                        return this.set(0, 0, 0);
                    var n = e.dot(this) / t;
                    return this.copy(e).multiplyScalar(n)
                }
            }, {
                key: "projectOnPlane",
                value: function(e) {
                    return Kt.copy(this).projectOnVector(e),
                    this.sub(Kt)
                }
            }, {
                key: "reflect",
                value: function(e) {
                    return this.sub(Kt.copy(e).multiplyScalar(2 * this.dot(e)))
                }
            }, {
                key: "angleTo",
                value: function(e) {
                    var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                    if (0 === t)
                        return Math.PI / 2;
                    var n = this.dot(e) / t;
                    return Math.acos(ft(n, -1, 1))
                }
            }, {
                key: "distanceTo",
                value: function(e) {
                    return Math.sqrt(this.distanceToSquared(e))
                }
            }, {
                key: "distanceToSquared",
                value: function(e) {
                    var t = this.x - e.x
                      , n = this.y - e.y
                      , r = this.z - e.z;
                    return t * t + n * n + r * r
                }
            }, {
                key: "manhattanDistanceTo",
                value: function(e) {
                    return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
                }
            }, {
                key: "setFromSpherical",
                value: function(e) {
                    return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
                }
            }, {
                key: "setFromSphericalCoords",
                value: function(e, t, n) {
                    var r = Math.sin(t) * e;
                    return this.x = r * Math.sin(n),
                    this.y = Math.cos(t) * e,
                    this.z = r * Math.cos(n),
                    this
                }
            }, {
                key: "setFromCylindrical",
                value: function(e) {
                    return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
                }
            }, {
                key: "setFromCylindricalCoords",
                value: function(e, t, n) {
                    return this.x = e * Math.sin(t),
                    this.y = n,
                    this.z = e * Math.cos(t),
                    this
                }
            }, {
                key: "setFromMatrixPosition",
                value: function(e) {
                    var t = e.elements;
                    return this.x = t[12],
                    this.y = t[13],
                    this.z = t[14],
                    this
                }
            }, {
                key: "setFromMatrixScale",
                value: function(e) {
                    var t = this.setFromMatrixColumn(e, 0).length()
                      , n = this.setFromMatrixColumn(e, 1).length()
                      , r = this.setFromMatrixColumn(e, 2).length();
                    return this.x = t,
                    this.y = n,
                    this.z = r,
                    this
                }
            }, {
                key: "setFromMatrixColumn",
                value: function(e, t) {
                    return this.fromArray(e.elements, 4 * t)
                }
            }, {
                key: "setFromMatrix3Column",
                value: function(e, t) {
                    return this.fromArray(e.elements, 3 * t)
                }
            }, {
                key: "setFromEuler",
                value: function(e) {
                    return this.x = e._x,
                    this.y = e._y,
                    this.z = e._z,
                    this
                }
            }, {
                key: "setFromColor",
                value: function(e) {
                    return this.x = e.r,
                    this.y = e.g,
                    this.z = e.b,
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.x === this.x && e.y === this.y && e.z === this.z
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return this.x = e[t],
                    this.y = e[t + 1],
                    this.z = e[t + 2],
                    this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return e[t] = this.x,
                    e[t + 1] = this.y,
                    e[t + 2] = this.z,
                    e
                }
            }, {
                key: "fromBufferAttribute",
                value: function(e, t) {
                    return this.x = e.getX(t),
                    this.y = e.getY(t),
                    this.z = e.getZ(t),
                    this
                }
            }, {
                key: "random",
                value: function() {
                    return this.x = Math.random(),
                    this.y = Math.random(),
                    this.z = Math.random(),
                    this
                }
            }, {
                key: "randomDirection",
                value: function() {
                    var e = Math.random() * Math.PI * 2
                      , t = 2 * Math.random() - 1
                      , n = Math.sqrt(1 - t * t);
                    return this.x = n * Math.cos(e),
                    this.y = t,
                    this.z = n * Math.sin(e),
                    this
                }
            }, {
                key: Symbol.iterator,
                value: i().mark((function e() {
                    return i().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2,
                                this.x;
                            case 2:
                                return e.next = 4,
                                this.y;
                            case 4:
                                return e.next = 6,
                                this.z;
                            case 6:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))
            }]),
            t
        }()
          , Kt = new Yt
          , Zt = new qt
          , Qt = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Yt(1 / 0,1 / 0,1 / 0)
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Yt(-1 / 0,-1 / 0,-1 / 0);
                _(this, e),
                this.isBox3 = !0,
                this.min = t,
                this.max = n
            }
            return x(e, [{
                key: "set",
                value: function(e, t) {
                    return this.min.copy(e),
                    this.max.copy(t),
                    this
                }
            }, {
                key: "setFromArray",
                value: function(e) {
                    this.makeEmpty();
                    for (var t = 0, n = e.length; t < n; t += 3)
                        this.expandByPoint($t.fromArray(e, t));
                    return this
                }
            }, {
                key: "setFromBufferAttribute",
                value: function(e) {
                    this.makeEmpty();
                    for (var t = 0, n = e.count; t < n; t++)
                        this.expandByPoint($t.fromBufferAttribute(e, t));
                    return this
                }
            }, {
                key: "setFromPoints",
                value: function(e) {
                    this.makeEmpty();
                    for (var t = 0, n = e.length; t < n; t++)
                        this.expandByPoint(e[t]);
                    return this
                }
            }, {
                key: "setFromCenterAndSize",
                value: function(e, t) {
                    var n = $t.copy(t).multiplyScalar(.5);
                    return this.min.copy(e).sub(n),
                    this.max.copy(e).add(n),
                    this
                }
            }, {
                key: "setFromObject",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    return this.makeEmpty(),
                    this.expandByObject(e, t)
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.min.copy(e.min),
                    this.max.copy(e.max),
                    this
                }
            }, {
                key: "makeEmpty",
                value: function() {
                    return this.min.x = this.min.y = this.min.z = 1 / 0,
                    this.max.x = this.max.y = this.max.z = -1 / 0,
                    this
                }
            }, {
                key: "isEmpty",
                value: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                }
            }, {
                key: "getCenter",
                value: function(e) {
                    return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                }
            }, {
                key: "getSize",
                value: function(e) {
                    return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
                }
            }, {
                key: "expandByPoint",
                value: function(e) {
                    return this.min.min(e),
                    this.max.max(e),
                    this
                }
            }, {
                key: "expandByVector",
                value: function(e) {
                    return this.min.sub(e),
                    this.max.add(e),
                    this
                }
            }, {
                key: "expandByScalar",
                value: function(e) {
                    return this.min.addScalar(-e),
                    this.max.addScalar(e),
                    this
                }
            }, {
                key: "expandByObject",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                    e.updateWorldMatrix(!1, !1);
                    var n = e.geometry;
                    if (void 0 !== n) {
                        var r = n.getAttribute("position");
                        if (!0 === t && void 0 !== r && !0 !== e.isInstancedMesh)
                            for (var i = 0, a = r.count; i < a; i++)
                                !0 === e.isMesh ? e.getVertexPosition(i, $t) : $t.fromBufferAttribute(r, i),
                                $t.applyMatrix4(e.matrixWorld),
                                this.expandByPoint($t);
                        else
                            void 0 !== e.boundingBox ? (null === e.boundingBox && e.computeBoundingBox(),
                            en.copy(e.boundingBox)) : (null === n.boundingBox && n.computeBoundingBox(),
                            en.copy(n.boundingBox)),
                            en.applyMatrix4(e.matrixWorld),
                            this.union(en)
                    }
                    for (var o = e.children, s = 0, l = o.length; s < l; s++)
                        this.expandByObject(o[s], t);
                    return this
                }
            }, {
                key: "containsPoint",
                value: function(e) {
                    return e.x >= this.min.x && e.x <= this.max.x && e.y >= this.min.y && e.y <= this.max.y && e.z >= this.min.z && e.z <= this.max.z
                }
            }, {
                key: "containsBox",
                value: function(e) {
                    return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
                }
            }, {
                key: "getParameter",
                value: function(e, t) {
                    return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
                }
            }, {
                key: "intersectsBox",
                value: function(e) {
                    return e.max.x >= this.min.x && e.min.x <= this.max.x && e.max.y >= this.min.y && e.min.y <= this.max.y && e.max.z >= this.min.z && e.min.z <= this.max.z
                }
            }, {
                key: "intersectsSphere",
                value: function(e) {
                    return this.clampPoint(e.center, $t),
                    $t.distanceToSquared(e.center) <= e.radius * e.radius
                }
            }, {
                key: "intersectsPlane",
                value: function(e) {
                    var t, n;
                    return e.normal.x > 0 ? (t = e.normal.x * this.min.x,
                    n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x,
                    n = e.normal.x * this.min.x),
                    e.normal.y > 0 ? (t += e.normal.y * this.min.y,
                    n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y,
                    n += e.normal.y * this.min.y),
                    e.normal.z > 0 ? (t += e.normal.z * this.min.z,
                    n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z,
                    n += e.normal.z * this.min.z),
                    t <= -e.constant && n >= -e.constant
                }
            }, {
                key: "intersectsTriangle",
                value: function(e) {
                    if (this.isEmpty())
                        return !1;
                    this.getCenter(ln),
                    un.subVectors(this.max, ln),
                    tn.subVectors(e.a, ln),
                    nn.subVectors(e.b, ln),
                    rn.subVectors(e.c, ln),
                    an.subVectors(nn, tn),
                    on.subVectors(rn, nn),
                    sn.subVectors(tn, rn);
                    var t = [0, -an.z, an.y, 0, -on.z, on.y, 0, -sn.z, sn.y, an.z, 0, -an.x, on.z, 0, -on.x, sn.z, 0, -sn.x, -an.y, an.x, 0, -on.y, on.x, 0, -sn.y, sn.x, 0];
                    return !!fn(t, tn, nn, rn, un) && (!!fn(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], tn, nn, rn, un) && (cn.crossVectors(an, on),
                    fn(t = [cn.x, cn.y, cn.z], tn, nn, rn, un)))
                }
            }, {
                key: "clampPoint",
                value: function(e, t) {
                    return t.copy(e).clamp(this.min, this.max)
                }
            }, {
                key: "distanceToPoint",
                value: function(e) {
                    return this.clampPoint(e, $t).distanceTo(e)
                }
            }, {
                key: "getBoundingSphere",
                value: function(e) {
                    return this.isEmpty() ? e.makeEmpty() : (this.getCenter(e.center),
                    e.radius = .5 * this.getSize($t).length()),
                    e
                }
            }, {
                key: "intersect",
                value: function(e) {
                    return this.min.max(e.min),
                    this.max.min(e.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                }
            }, {
                key: "union",
                value: function(e) {
                    return this.min.min(e.min),
                    this.max.max(e.max),
                    this
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    return this.isEmpty() || (Jt[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
                    Jt[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
                    Jt[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
                    Jt[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
                    Jt[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
                    Jt[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
                    Jt[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
                    Jt[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
                    this.setFromPoints(Jt)),
                    this
                }
            }, {
                key: "translate",
                value: function(e) {
                    return this.min.add(e),
                    this.max.add(e),
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.min.equals(this.min) && e.max.equals(this.max)
                }
            }]),
            e
        }()
          , Jt = [new Yt, new Yt, new Yt, new Yt, new Yt, new Yt, new Yt, new Yt]
          , $t = new Yt
          , en = new Qt
          , tn = new Yt
          , nn = new Yt
          , rn = new Yt
          , an = new Yt
          , on = new Yt
          , sn = new Yt
          , ln = new Yt
          , un = new Yt
          , cn = new Yt
          , dn = new Yt;
        function fn(e, t, n, r, i) {
            for (var a = 0, o = e.length - 3; a <= o; a += 3) {
                dn.fromArray(e, a);
                var s = i.x * Math.abs(dn.x) + i.y * Math.abs(dn.y) + i.z * Math.abs(dn.z)
                  , l = t.dot(dn)
                  , u = n.dot(dn)
                  , c = r.dot(dn);
                if (Math.max(-Math.max(l, u, c), Math.min(l, u, c)) > s)
                    return !1
            }
            return !0
        }
        var hn = new Qt
          , pn = new Yt
          , mn = new Yt
          , vn = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Yt
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1;
                _(this, e),
                this.isSphere = !0,
                this.center = t,
                this.radius = n
            }
            return x(e, [{
                key: "set",
                value: function(e, t) {
                    return this.center.copy(e),
                    this.radius = t,
                    this
                }
            }, {
                key: "setFromPoints",
                value: function(e, t) {
                    var n = this.center;
                    void 0 !== t ? n.copy(t) : hn.setFromPoints(e).getCenter(n);
                    for (var r = 0, i = 0, a = e.length; i < a; i++)
                        r = Math.max(r, n.distanceToSquared(e[i]));
                    return this.radius = Math.sqrt(r),
                    this
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.center.copy(e.center),
                    this.radius = e.radius,
                    this
                }
            }, {
                key: "isEmpty",
                value: function() {
                    return this.radius < 0
                }
            }, {
                key: "makeEmpty",
                value: function() {
                    return this.center.set(0, 0, 0),
                    this.radius = -1,
                    this
                }
            }, {
                key: "containsPoint",
                value: function(e) {
                    return e.distanceToSquared(this.center) <= this.radius * this.radius
                }
            }, {
                key: "distanceToPoint",
                value: function(e) {
                    return e.distanceTo(this.center) - this.radius
                }
            }, {
                key: "intersectsSphere",
                value: function(e) {
                    var t = this.radius + e.radius;
                    return e.center.distanceToSquared(this.center) <= t * t
                }
            }, {
                key: "intersectsBox",
                value: function(e) {
                    return e.intersectsSphere(this)
                }
            }, {
                key: "intersectsPlane",
                value: function(e) {
                    return Math.abs(e.distanceToPoint(this.center)) <= this.radius
                }
            }, {
                key: "clampPoint",
                value: function(e, t) {
                    var n = this.center.distanceToSquared(e);
                    return t.copy(e),
                    n > this.radius * this.radius && (t.sub(this.center).normalize(),
                    t.multiplyScalar(this.radius).add(this.center)),
                    t
                }
            }, {
                key: "getBoundingBox",
                value: function(e) {
                    return this.isEmpty() ? (e.makeEmpty(),
                    e) : (e.set(this.center, this.center),
                    e.expandByScalar(this.radius),
                    e)
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    return this.center.applyMatrix4(e),
                    this.radius = this.radius * e.getMaxScaleOnAxis(),
                    this
                }
            }, {
                key: "translate",
                value: function(e) {
                    return this.center.add(e),
                    this
                }
            }, {
                key: "expandByPoint",
                value: function(e) {
                    if (this.isEmpty())
                        return this.center.copy(e),
                        this.radius = 0,
                        this;
                    pn.subVectors(e, this.center);
                    var t = pn.lengthSq();
                    if (t > this.radius * this.radius) {
                        var n = Math.sqrt(t)
                          , r = .5 * (n - this.radius);
                        this.center.addScaledVector(pn, r / n),
                        this.radius += r
                    }
                    return this
                }
            }, {
                key: "union",
                value: function(e) {
                    return e.isEmpty() ? this : this.isEmpty() ? (this.copy(e),
                    this) : (!0 === this.center.equals(e.center) ? this.radius = Math.max(this.radius, e.radius) : (mn.subVectors(e.center, this.center).setLength(e.radius),
                    this.expandByPoint(pn.copy(e.center).add(mn)),
                    this.expandByPoint(pn.copy(e.center).sub(mn))),
                    this)
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.center.equals(this.center) && e.radius === this.radius
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }]),
            e
        }()
          , gn = new Yt
          , _n = new Yt
          , yn = new Yt
          , xn = new Yt
          , bn = new Yt
          , Sn = new Yt
          , Mn = new Yt
          , En = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Yt
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Yt(0,0,-1);
                _(this, e),
                this.origin = t,
                this.direction = n
            }
            return x(e, [{
                key: "set",
                value: function(e, t) {
                    return this.origin.copy(e),
                    this.direction.copy(t),
                    this
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.origin.copy(e.origin),
                    this.direction.copy(e.direction),
                    this
                }
            }, {
                key: "at",
                value: function(e, t) {
                    return t.copy(this.origin).addScaledVector(this.direction, e)
                }
            }, {
                key: "lookAt",
                value: function(e) {
                    return this.direction.copy(e).sub(this.origin).normalize(),
                    this
                }
            }, {
                key: "recast",
                value: function(e) {
                    return this.origin.copy(this.at(e, gn)),
                    this
                }
            }, {
                key: "closestPointToPoint",
                value: function(e, t) {
                    t.subVectors(e, this.origin);
                    var n = t.dot(this.direction);
                    return n < 0 ? t.copy(this.origin) : t.copy(this.origin).addScaledVector(this.direction, n)
                }
            }, {
                key: "distanceToPoint",
                value: function(e) {
                    return Math.sqrt(this.distanceSqToPoint(e))
                }
            }, {
                key: "distanceSqToPoint",
                value: function(e) {
                    var t = gn.subVectors(e, this.origin).dot(this.direction);
                    return t < 0 ? this.origin.distanceToSquared(e) : (gn.copy(this.origin).addScaledVector(this.direction, t),
                    gn.distanceToSquared(e))
                }
            }, {
                key: "distanceSqToSegment",
                value: function(e, t, n, r) {
                    _n.copy(e).add(t).multiplyScalar(.5),
                    yn.copy(t).sub(e).normalize(),
                    xn.copy(this.origin).sub(_n);
                    var i, a, o, s, l = .5 * e.distanceTo(t), u = -this.direction.dot(yn), c = xn.dot(this.direction), d = -xn.dot(yn), f = xn.lengthSq(), h = Math.abs(1 - u * u);
                    if (h > 0)
                        if (a = u * c - d,
                        s = l * h,
                        (i = u * d - c) >= 0)
                            if (a >= -s)
                                if (a <= s) {
                                    var p = 1 / h;
                                    o = (i *= p) * (i + u * (a *= p) + 2 * c) + a * (u * i + a + 2 * d) + f
                                } else
                                    a = l,
                                    o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * d) + f;
                            else
                                a = -l,
                                o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * d) + f;
                        else
                            a <= -s ? o = -(i = Math.max(0, -(-u * l + c))) * i + (a = i > 0 ? -l : Math.min(Math.max(-l, -d), l)) * (a + 2 * d) + f : a <= s ? (i = 0,
                            o = (a = Math.min(Math.max(-l, -d), l)) * (a + 2 * d) + f) : o = -(i = Math.max(0, -(u * l + c))) * i + (a = i > 0 ? l : Math.min(Math.max(-l, -d), l)) * (a + 2 * d) + f;
                    else
                        a = u > 0 ? -l : l,
                        o = -(i = Math.max(0, -(u * a + c))) * i + a * (a + 2 * d) + f;
                    return n && n.copy(this.origin).addScaledVector(this.direction, i),
                    r && r.copy(_n).addScaledVector(yn, a),
                    o
                }
            }, {
                key: "intersectSphere",
                value: function(e, t) {
                    gn.subVectors(e.center, this.origin);
                    var n = gn.dot(this.direction)
                      , r = gn.dot(gn) - n * n
                      , i = e.radius * e.radius;
                    if (r > i)
                        return null;
                    var a = Math.sqrt(i - r)
                      , o = n - a
                      , s = n + a;
                    return s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t)
                }
            }, {
                key: "intersectsSphere",
                value: function(e) {
                    return this.distanceSqToPoint(e.center) <= e.radius * e.radius
                }
            }, {
                key: "distanceToPlane",
                value: function(e) {
                    var t = e.normal.dot(this.direction);
                    if (0 === t)
                        return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                    var n = -(this.origin.dot(e.normal) + e.constant) / t;
                    return n >= 0 ? n : null
                }
            }, {
                key: "intersectPlane",
                value: function(e, t) {
                    var n = this.distanceToPlane(e);
                    return null === n ? null : this.at(n, t)
                }
            }, {
                key: "intersectsPlane",
                value: function(e) {
                    var t = e.distanceToPoint(this.origin);
                    return 0 === t || e.normal.dot(this.direction) * t < 0
                }
            }, {
                key: "intersectBox",
                value: function(e, t) {
                    var n, r, i, a, o, s, l = 1 / this.direction.x, u = 1 / this.direction.y, c = 1 / this.direction.z, d = this.origin;
                    return l >= 0 ? (n = (e.min.x - d.x) * l,
                    r = (e.max.x - d.x) * l) : (n = (e.max.x - d.x) * l,
                    r = (e.min.x - d.x) * l),
                    u >= 0 ? (i = (e.min.y - d.y) * u,
                    a = (e.max.y - d.y) * u) : (i = (e.max.y - d.y) * u,
                    a = (e.min.y - d.y) * u),
                    n > a || i > r ? null : ((i > n || isNaN(n)) && (n = i),
                    (a < r || isNaN(r)) && (r = a),
                    c >= 0 ? (o = (e.min.z - d.z) * c,
                    s = (e.max.z - d.z) * c) : (o = (e.max.z - d.z) * c,
                    s = (e.min.z - d.z) * c),
                    n > s || o > r ? null : ((o > n || n !== n) && (n = o),
                    (s < r || r !== r) && (r = s),
                    r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                }
            }, {
                key: "intersectsBox",
                value: function(e) {
                    return null !== this.intersectBox(e, gn)
                }
            }, {
                key: "intersectTriangle",
                value: function(e, t, n, r, i) {
                    bn.subVectors(t, e),
                    Sn.subVectors(n, e),
                    Mn.crossVectors(bn, Sn);
                    var a, o = this.direction.dot(Mn);
                    if (o > 0) {
                        if (r)
                            return null;
                        a = 1
                    } else {
                        if (!(o < 0))
                            return null;
                        a = -1,
                        o = -o
                    }
                    xn.subVectors(this.origin, e);
                    var s = a * this.direction.dot(Sn.crossVectors(xn, Sn));
                    if (s < 0)
                        return null;
                    var l = a * this.direction.dot(bn.cross(xn));
                    if (l < 0)
                        return null;
                    if (s + l > o)
                        return null;
                    var u = -a * xn.dot(Mn);
                    return u < 0 ? null : this.at(u / o, i)
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    return this.origin.applyMatrix4(e),
                    this.direction.transformDirection(e),
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.origin.equals(this.origin) && e.direction.equals(this.direction)
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }]),
            e
        }()
          , Tn = function() {
            function e(t, n, r, i, a, o, s, l, u, c, d, f, h, p, m, v) {
                _(this, e),
                e.prototype.isMatrix4 = !0,
                this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
                void 0 !== t && this.set(t, n, r, i, a, o, s, l, u, c, d, f, h, p, m, v)
            }
            return x(e, [{
                key: "set",
                value: function(e, t, n, r, i, a, o, s, l, u, c, d, f, h, p, m) {
                    var v = this.elements;
                    return v[0] = e,
                    v[4] = t,
                    v[8] = n,
                    v[12] = r,
                    v[1] = i,
                    v[5] = a,
                    v[9] = o,
                    v[13] = s,
                    v[2] = l,
                    v[6] = u,
                    v[10] = c,
                    v[14] = d,
                    v[3] = f,
                    v[7] = h,
                    v[11] = p,
                    v[15] = m,
                    this
                }
            }, {
                key: "identity",
                value: function() {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    return (new e).fromArray(this.elements)
                }
            }, {
                key: "copy",
                value: function(e) {
                    var t = this.elements
                      , n = e.elements;
                    return t[0] = n[0],
                    t[1] = n[1],
                    t[2] = n[2],
                    t[3] = n[3],
                    t[4] = n[4],
                    t[5] = n[5],
                    t[6] = n[6],
                    t[7] = n[7],
                    t[8] = n[8],
                    t[9] = n[9],
                    t[10] = n[10],
                    t[11] = n[11],
                    t[12] = n[12],
                    t[13] = n[13],
                    t[14] = n[14],
                    t[15] = n[15],
                    this
                }
            }, {
                key: "copyPosition",
                value: function(e) {
                    var t = this.elements
                      , n = e.elements;
                    return t[12] = n[12],
                    t[13] = n[13],
                    t[14] = n[14],
                    this
                }
            }, {
                key: "setFromMatrix3",
                value: function(e) {
                    var t = e.elements;
                    return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "extractBasis",
                value: function(e, t, n) {
                    return e.setFromMatrixColumn(this, 0),
                    t.setFromMatrixColumn(this, 1),
                    n.setFromMatrixColumn(this, 2),
                    this
                }
            }, {
                key: "makeBasis",
                value: function(e, t, n) {
                    return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "extractRotation",
                value: function(e) {
                    var t = this.elements
                      , n = e.elements
                      , r = 1 / wn.setFromMatrixColumn(e, 0).length()
                      , i = 1 / wn.setFromMatrixColumn(e, 1).length()
                      , a = 1 / wn.setFromMatrixColumn(e, 2).length();
                    return t[0] = n[0] * r,
                    t[1] = n[1] * r,
                    t[2] = n[2] * r,
                    t[3] = 0,
                    t[4] = n[4] * i,
                    t[5] = n[5] * i,
                    t[6] = n[6] * i,
                    t[7] = 0,
                    t[8] = n[8] * a,
                    t[9] = n[9] * a,
                    t[10] = n[10] * a,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    this
                }
            }, {
                key: "makeRotationFromEuler",
                value: function(e) {
                    var t = this.elements
                      , n = e.x
                      , r = e.y
                      , i = e.z
                      , a = Math.cos(n)
                      , o = Math.sin(n)
                      , s = Math.cos(r)
                      , l = Math.sin(r)
                      , u = Math.cos(i)
                      , c = Math.sin(i);
                    if ("XYZ" === e.order) {
                        var d = a * u
                          , f = a * c
                          , h = o * u
                          , p = o * c;
                        t[0] = s * u,
                        t[4] = -s * c,
                        t[8] = l,
                        t[1] = f + h * l,
                        t[5] = d - p * l,
                        t[9] = -o * s,
                        t[2] = p - d * l,
                        t[6] = h + f * l,
                        t[10] = a * s
                    } else if ("YXZ" === e.order) {
                        var m = s * u
                          , v = s * c
                          , g = l * u
                          , _ = l * c;
                        t[0] = m + _ * o,
                        t[4] = g * o - v,
                        t[8] = a * l,
                        t[1] = a * c,
                        t[5] = a * u,
                        t[9] = -o,
                        t[2] = v * o - g,
                        t[6] = _ + m * o,
                        t[10] = a * s
                    } else if ("ZXY" === e.order) {
                        var y = s * u
                          , x = s * c
                          , b = l * u
                          , S = l * c;
                        t[0] = y - S * o,
                        t[4] = -a * c,
                        t[8] = b + x * o,
                        t[1] = x + b * o,
                        t[5] = a * u,
                        t[9] = S - y * o,
                        t[2] = -a * l,
                        t[6] = o,
                        t[10] = a * s
                    } else if ("ZYX" === e.order) {
                        var M = a * u
                          , E = a * c
                          , T = o * u
                          , w = o * c;
                        t[0] = s * u,
                        t[4] = T * l - E,
                        t[8] = M * l + w,
                        t[1] = s * c,
                        t[5] = w * l + M,
                        t[9] = E * l - T,
                        t[2] = -l,
                        t[6] = o * s,
                        t[10] = a * s
                    } else if ("YZX" === e.order) {
                        var A = a * s
                          , R = a * l
                          , C = o * s
                          , k = o * l;
                        t[0] = s * u,
                        t[4] = k - A * c,
                        t[8] = C * c + R,
                        t[1] = c,
                        t[5] = a * u,
                        t[9] = -o * u,
                        t[2] = -l * u,
                        t[6] = R * c + C,
                        t[10] = A - k * c
                    } else if ("XZY" === e.order) {
                        var P = a * s
                          , L = a * l
                          , U = o * s
                          , D = o * l;
                        t[0] = s * u,
                        t[4] = -c,
                        t[8] = l * u,
                        t[1] = P * c + D,
                        t[5] = a * u,
                        t[9] = L * c - U,
                        t[2] = U * c - L,
                        t[6] = o * u,
                        t[10] = D * c + P
                    }
                    return t[3] = 0,
                    t[7] = 0,
                    t[11] = 0,
                    t[12] = 0,
                    t[13] = 0,
                    t[14] = 0,
                    t[15] = 1,
                    this
                }
            }, {
                key: "makeRotationFromQuaternion",
                value: function(e) {
                    return this.compose(Rn, e, Cn)
                }
            }, {
                key: "lookAt",
                value: function(e, t, n) {
                    var r = this.elements;
                    return Ln.subVectors(e, t),
                    0 === Ln.lengthSq() && (Ln.z = 1),
                    Ln.normalize(),
                    kn.crossVectors(n, Ln),
                    0 === kn.lengthSq() && (1 === Math.abs(n.z) ? Ln.x += 1e-4 : Ln.z += 1e-4,
                    Ln.normalize(),
                    kn.crossVectors(n, Ln)),
                    kn.normalize(),
                    Pn.crossVectors(Ln, kn),
                    r[0] = kn.x,
                    r[4] = Pn.x,
                    r[8] = Ln.x,
                    r[1] = kn.y,
                    r[5] = Pn.y,
                    r[9] = Ln.y,
                    r[2] = kn.z,
                    r[6] = Pn.z,
                    r[10] = Ln.z,
                    this
                }
            }, {
                key: "multiply",
                value: function(e) {
                    return this.multiplyMatrices(this, e)
                }
            }, {
                key: "premultiply",
                value: function(e) {
                    return this.multiplyMatrices(e, this)
                }
            }, {
                key: "multiplyMatrices",
                value: function(e, t) {
                    var n = e.elements
                      , r = t.elements
                      , i = this.elements
                      , a = n[0]
                      , o = n[4]
                      , s = n[8]
                      , l = n[12]
                      , u = n[1]
                      , c = n[5]
                      , d = n[9]
                      , f = n[13]
                      , h = n[2]
                      , p = n[6]
                      , m = n[10]
                      , v = n[14]
                      , g = n[3]
                      , _ = n[7]
                      , y = n[11]
                      , x = n[15]
                      , b = r[0]
                      , S = r[4]
                      , M = r[8]
                      , E = r[12]
                      , T = r[1]
                      , w = r[5]
                      , A = r[9]
                      , R = r[13]
                      , C = r[2]
                      , k = r[6]
                      , P = r[10]
                      , L = r[14]
                      , U = r[3]
                      , D = r[7]
                      , N = r[11]
                      , I = r[15];
                    return i[0] = a * b + o * T + s * C + l * U,
                    i[4] = a * S + o * w + s * k + l * D,
                    i[8] = a * M + o * A + s * P + l * N,
                    i[12] = a * E + o * R + s * L + l * I,
                    i[1] = u * b + c * T + d * C + f * U,
                    i[5] = u * S + c * w + d * k + f * D,
                    i[9] = u * M + c * A + d * P + f * N,
                    i[13] = u * E + c * R + d * L + f * I,
                    i[2] = h * b + p * T + m * C + v * U,
                    i[6] = h * S + p * w + m * k + v * D,
                    i[10] = h * M + p * A + m * P + v * N,
                    i[14] = h * E + p * R + m * L + v * I,
                    i[3] = g * b + _ * T + y * C + x * U,
                    i[7] = g * S + _ * w + y * k + x * D,
                    i[11] = g * M + _ * A + y * P + x * N,
                    i[15] = g * E + _ * R + y * L + x * I,
                    this
                }
            }, {
                key: "multiplyScalar",
                value: function(e) {
                    var t = this.elements;
                    return t[0] *= e,
                    t[4] *= e,
                    t[8] *= e,
                    t[12] *= e,
                    t[1] *= e,
                    t[5] *= e,
                    t[9] *= e,
                    t[13] *= e,
                    t[2] *= e,
                    t[6] *= e,
                    t[10] *= e,
                    t[14] *= e,
                    t[3] *= e,
                    t[7] *= e,
                    t[11] *= e,
                    t[15] *= e,
                    this
                }
            }, {
                key: "determinant",
                value: function() {
                    var e = this.elements
                      , t = e[0]
                      , n = e[4]
                      , r = e[8]
                      , i = e[12]
                      , a = e[1]
                      , o = e[5]
                      , s = e[9]
                      , l = e[13]
                      , u = e[2]
                      , c = e[6]
                      , d = e[10]
                      , f = e[14];
                    return e[3] * (+i * s * c - r * l * c - i * o * d + n * l * d + r * o * f - n * s * f) + e[7] * (+t * s * f - t * l * d + i * a * d - r * a * f + r * l * u - i * s * u) + e[11] * (+t * l * c - t * o * f - i * a * c + n * a * f + i * o * u - n * l * u) + e[15] * (-r * o * u - t * s * c + t * o * d + r * a * c - n * a * d + n * s * u)
                }
            }, {
                key: "transpose",
                value: function() {
                    var e, t = this.elements;
                    return e = t[1],
                    t[1] = t[4],
                    t[4] = e,
                    e = t[2],
                    t[2] = t[8],
                    t[8] = e,
                    e = t[6],
                    t[6] = t[9],
                    t[9] = e,
                    e = t[3],
                    t[3] = t[12],
                    t[12] = e,
                    e = t[7],
                    t[7] = t[13],
                    t[13] = e,
                    e = t[11],
                    t[11] = t[14],
                    t[14] = e,
                    this
                }
            }, {
                key: "setPosition",
                value: function(e, t, n) {
                    var r = this.elements;
                    return e.isVector3 ? (r[12] = e.x,
                    r[13] = e.y,
                    r[14] = e.z) : (r[12] = e,
                    r[13] = t,
                    r[14] = n),
                    this
                }
            }, {
                key: "invert",
                value: function() {
                    var e = this.elements
                      , t = e[0]
                      , n = e[1]
                      , r = e[2]
                      , i = e[3]
                      , a = e[4]
                      , o = e[5]
                      , s = e[6]
                      , l = e[7]
                      , u = e[8]
                      , c = e[9]
                      , d = e[10]
                      , f = e[11]
                      , h = e[12]
                      , p = e[13]
                      , m = e[14]
                      , v = e[15]
                      , g = c * m * l - p * d * l + p * s * f - o * m * f - c * s * v + o * d * v
                      , _ = h * d * l - u * m * l - h * s * f + a * m * f + u * s * v - a * d * v
                      , y = u * p * l - h * c * l + h * o * f - a * p * f - u * o * v + a * c * v
                      , x = h * c * s - u * p * s - h * o * d + a * p * d + u * o * m - a * c * m
                      , b = t * g + n * _ + r * y + i * x;
                    if (0 === b)
                        return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                    var S = 1 / b;
                    return e[0] = g * S,
                    e[1] = (p * d * i - c * m * i - p * r * f + n * m * f + c * r * v - n * d * v) * S,
                    e[2] = (o * m * i - p * s * i + p * r * l - n * m * l - o * r * v + n * s * v) * S,
                    e[3] = (c * s * i - o * d * i - c * r * l + n * d * l + o * r * f - n * s * f) * S,
                    e[4] = _ * S,
                    e[5] = (u * m * i - h * d * i + h * r * f - t * m * f - u * r * v + t * d * v) * S,
                    e[6] = (h * s * i - a * m * i - h * r * l + t * m * l + a * r * v - t * s * v) * S,
                    e[7] = (a * d * i - u * s * i + u * r * l - t * d * l - a * r * f + t * s * f) * S,
                    e[8] = y * S,
                    e[9] = (h * c * i - u * p * i - h * n * f + t * p * f + u * n * v - t * c * v) * S,
                    e[10] = (a * p * i - h * o * i + h * n * l - t * p * l - a * n * v + t * o * v) * S,
                    e[11] = (u * o * i - a * c * i - u * n * l + t * c * l + a * n * f - t * o * f) * S,
                    e[12] = x * S,
                    e[13] = (u * p * r - h * c * r + h * n * d - t * p * d - u * n * m + t * c * m) * S,
                    e[14] = (h * o * r - a * p * r - h * n * s + t * p * s + a * n * m - t * o * m) * S,
                    e[15] = (a * c * r - u * o * r + u * n * s - t * c * s - a * n * d + t * o * d) * S,
                    this
                }
            }, {
                key: "scale",
                value: function(e) {
                    var t = this.elements
                      , n = e.x
                      , r = e.y
                      , i = e.z;
                    return t[0] *= n,
                    t[4] *= r,
                    t[8] *= i,
                    t[1] *= n,
                    t[5] *= r,
                    t[9] *= i,
                    t[2] *= n,
                    t[6] *= r,
                    t[10] *= i,
                    t[3] *= n,
                    t[7] *= r,
                    t[11] *= i,
                    this
                }
            }, {
                key: "getMaxScaleOnAxis",
                value: function() {
                    var e = this.elements
                      , t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2]
                      , n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6]
                      , r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                    return Math.sqrt(Math.max(t, n, r))
                }
            }, {
                key: "makeTranslation",
                value: function(e, t, n) {
                    return e.isVector3 ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1) : this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "makeRotationX",
                value: function(e) {
                    var t = Math.cos(e)
                      , n = Math.sin(e);
                    return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "makeRotationY",
                value: function(e) {
                    var t = Math.cos(e)
                      , n = Math.sin(e);
                    return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "makeRotationZ",
                value: function(e) {
                    var t = Math.cos(e)
                      , n = Math.sin(e);
                    return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "makeRotationAxis",
                value: function(e, t) {
                    var n = Math.cos(t)
                      , r = Math.sin(t)
                      , i = 1 - n
                      , a = e.x
                      , o = e.y
                      , s = e.z
                      , l = i * a
                      , u = i * o;
                    return this.set(l * a + n, l * o - r * s, l * s + r * o, 0, l * o + r * s, u * o + n, u * s - r * a, 0, l * s - r * o, u * s + r * a, i * s * s + n, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "makeScale",
                value: function(e, t, n) {
                    return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "makeShear",
                value: function(e, t, n, r, i, a) {
                    return this.set(1, n, i, 0, e, 1, a, 0, t, r, 1, 0, 0, 0, 0, 1),
                    this
                }
            }, {
                key: "compose",
                value: function(e, t, n) {
                    var r = this.elements
                      , i = t._x
                      , a = t._y
                      , o = t._z
                      , s = t._w
                      , l = i + i
                      , u = a + a
                      , c = o + o
                      , d = i * l
                      , f = i * u
                      , h = i * c
                      , p = a * u
                      , m = a * c
                      , v = o * c
                      , g = s * l
                      , _ = s * u
                      , y = s * c
                      , x = n.x
                      , b = n.y
                      , S = n.z;
                    return r[0] = (1 - (p + v)) * x,
                    r[1] = (f + y) * x,
                    r[2] = (h - _) * x,
                    r[3] = 0,
                    r[4] = (f - y) * b,
                    r[5] = (1 - (d + v)) * b,
                    r[6] = (m + g) * b,
                    r[7] = 0,
                    r[8] = (h + _) * S,
                    r[9] = (m - g) * S,
                    r[10] = (1 - (d + p)) * S,
                    r[11] = 0,
                    r[12] = e.x,
                    r[13] = e.y,
                    r[14] = e.z,
                    r[15] = 1,
                    this
                }
            }, {
                key: "decompose",
                value: function(e, t, n) {
                    var r = this.elements
                      , i = wn.set(r[0], r[1], r[2]).length()
                      , a = wn.set(r[4], r[5], r[6]).length()
                      , o = wn.set(r[8], r[9], r[10]).length();
                    this.determinant() < 0 && (i = -i),
                    e.x = r[12],
                    e.y = r[13],
                    e.z = r[14],
                    An.copy(this);
                    var s = 1 / i
                      , l = 1 / a
                      , u = 1 / o;
                    return An.elements[0] *= s,
                    An.elements[1] *= s,
                    An.elements[2] *= s,
                    An.elements[4] *= l,
                    An.elements[5] *= l,
                    An.elements[6] *= l,
                    An.elements[8] *= u,
                    An.elements[9] *= u,
                    An.elements[10] *= u,
                    t.setFromRotationMatrix(An),
                    n.x = i,
                    n.y = a,
                    n.z = o,
                    this
                }
            }, {
                key: "makePerspective",
                value: function(e, t, n, r, i, a) {
                    var o, s, l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : it, u = this.elements, c = 2 * i / (t - e), d = 2 * i / (n - r), f = (t + e) / (t - e), h = (n + r) / (n - r);
                    if (l === it)
                        o = -(a + i) / (a - i),
                        s = -2 * a * i / (a - i);
                    else {
                        if (l !== at)
                            throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: " + l);
                        o = -a / (a - i),
                        s = -a * i / (a - i)
                    }
                    return u[0] = c,
                    u[4] = 0,
                    u[8] = f,
                    u[12] = 0,
                    u[1] = 0,
                    u[5] = d,
                    u[9] = h,
                    u[13] = 0,
                    u[2] = 0,
                    u[6] = 0,
                    u[10] = o,
                    u[14] = s,
                    u[3] = 0,
                    u[7] = 0,
                    u[11] = -1,
                    u[15] = 0,
                    this
                }
            }, {
                key: "makeOrthographic",
                value: function(e, t, n, r, i, a) {
                    var o, s, l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : it, u = this.elements, c = 1 / (t - e), d = 1 / (n - r), f = 1 / (a - i), h = (t + e) * c, p = (n + r) * d;
                    if (l === it)
                        o = (a + i) * f,
                        s = -2 * f;
                    else {
                        if (l !== at)
                            throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: " + l);
                        o = i * f,
                        s = -1 * f
                    }
                    return u[0] = 2 * c,
                    u[4] = 0,
                    u[8] = 0,
                    u[12] = -h,
                    u[1] = 0,
                    u[5] = 2 * d,
                    u[9] = 0,
                    u[13] = -p,
                    u[2] = 0,
                    u[6] = 0,
                    u[10] = s,
                    u[14] = -o,
                    u[3] = 0,
                    u[7] = 0,
                    u[11] = 0,
                    u[15] = 1,
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
                        if (t[r] !== n[r])
                            return !1;
                    return !0
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = 0; n < 16; n++)
                        this.elements[n] = e[n + t];
                    return this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                      , n = this.elements;
                    return e[t] = n[0],
                    e[t + 1] = n[1],
                    e[t + 2] = n[2],
                    e[t + 3] = n[3],
                    e[t + 4] = n[4],
                    e[t + 5] = n[5],
                    e[t + 6] = n[6],
                    e[t + 7] = n[7],
                    e[t + 8] = n[8],
                    e[t + 9] = n[9],
                    e[t + 10] = n[10],
                    e[t + 11] = n[11],
                    e[t + 12] = n[12],
                    e[t + 13] = n[13],
                    e[t + 14] = n[14],
                    e[t + 15] = n[15],
                    e
                }
            }]),
            e
        }()
          , wn = new Yt
          , An = new Tn
          , Rn = new Yt(0,0,0)
          , Cn = new Yt(1,1,1)
          , kn = new Yt
          , Pn = new Yt
          , Ln = new Yt
          , Un = new Tn
          , Dn = new qt
          , Nn = function(e) {
            function t() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                  , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0
                  , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : t.DEFAULT_ORDER;
                _(this, t),
                this.isEuler = !0,
                this._x = e,
                this._y = n,
                this._z = r,
                this._order = i
            }
            return x(t, [{
                key: "x",
                get: function() {
                    return this._x
                },
                set: function(e) {
                    this._x = e,
                    this._onChangeCallback()
                }
            }, {
                key: "y",
                get: function() {
                    return this._y
                },
                set: function(e) {
                    this._y = e,
                    this._onChangeCallback()
                }
            }, {
                key: "z",
                get: function() {
                    return this._z
                },
                set: function(e) {
                    this._z = e,
                    this._onChangeCallback()
                }
            }, {
                key: "order",
                get: function() {
                    return this._order
                },
                set: function(e) {
                    this._order = e,
                    this._onChangeCallback()
                }
            }, {
                key: "set",
                value: function(e, t, n) {
                    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this._order;
                    return this._x = e,
                    this._y = t,
                    this._z = n,
                    this._order = r,
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this._x,this._y,this._z,this._order)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this._x = e._x,
                    this._y = e._y,
                    this._z = e._z,
                    this._order = e._order,
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "setFromRotationMatrix",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._order
                      , n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
                      , r = e.elements
                      , i = r[0]
                      , a = r[4]
                      , o = r[8]
                      , s = r[1]
                      , l = r[5]
                      , u = r[9]
                      , c = r[2]
                      , d = r[6]
                      , f = r[10];
                    switch (t) {
                    case "XYZ":
                        this._y = Math.asin(ft(o, -1, 1)),
                        Math.abs(o) < .9999999 ? (this._x = Math.atan2(-u, f),
                        this._z = Math.atan2(-a, i)) : (this._x = Math.atan2(d, l),
                        this._z = 0);
                        break;
                    case "YXZ":
                        this._x = Math.asin(-ft(u, -1, 1)),
                        Math.abs(u) < .9999999 ? (this._y = Math.atan2(o, f),
                        this._z = Math.atan2(s, l)) : (this._y = Math.atan2(-c, i),
                        this._z = 0);
                        break;
                    case "ZXY":
                        this._x = Math.asin(ft(d, -1, 1)),
                        Math.abs(d) < .9999999 ? (this._y = Math.atan2(-c, f),
                        this._z = Math.atan2(-a, l)) : (this._y = 0,
                        this._z = Math.atan2(s, i));
                        break;
                    case "ZYX":
                        this._y = Math.asin(-ft(c, -1, 1)),
                        Math.abs(c) < .9999999 ? (this._x = Math.atan2(d, f),
                        this._z = Math.atan2(s, i)) : (this._x = 0,
                        this._z = Math.atan2(-a, l));
                        break;
                    case "YZX":
                        this._z = Math.asin(ft(s, -1, 1)),
                        Math.abs(s) < .9999999 ? (this._x = Math.atan2(-u, l),
                        this._y = Math.atan2(-c, i)) : (this._x = 0,
                        this._y = Math.atan2(o, f));
                        break;
                    case "XZY":
                        this._z = Math.asin(-ft(a, -1, 1)),
                        Math.abs(a) < .9999999 ? (this._x = Math.atan2(d, l),
                        this._y = Math.atan2(o, i)) : (this._x = Math.atan2(-u, f),
                        this._y = 0);
                        break;
                    default:
                        console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t)
                    }
                    return this._order = t,
                    !0 === n && this._onChangeCallback(),
                    this
                }
            }, {
                key: "setFromQuaternion",
                value: function(e, t, n) {
                    return Un.makeRotationFromQuaternion(e),
                    this.setFromRotationMatrix(Un, t, n)
                }
            }, {
                key: "setFromVector3",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._order;
                    return this.set(e.x, e.y, e.z, t)
                }
            }, {
                key: "reorder",
                value: function(e) {
                    return Dn.setFromEuler(this),
                    this.setFromQuaternion(Dn, e)
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    return this._x = e[0],
                    this._y = e[1],
                    this._z = e[2],
                    void 0 !== e[3] && (this._order = e[3]),
                    this._onChangeCallback(),
                    this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return e[t] = this._x,
                    e[t + 1] = this._y,
                    e[t + 2] = this._z,
                    e[t + 3] = this._order,
                    e
                }
            }, {
                key: "_onChange",
                value: function(e) {
                    return this._onChangeCallback = e,
                    this
                }
            }, {
                key: "_onChangeCallback",
                value: function() {}
            }, {
                key: Symbol.iterator,
                value: i().mark((function e() {
                    return i().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2,
                                this._x;
                            case 2:
                                return e.next = 4,
                                this._y;
                            case 4:
                                return e.next = 6,
                                this._z;
                            case 6:
                                return e.next = 8,
                                this._order;
                            case 8:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))
            }]),
            t
        }();
        Nn.DEFAULT_ORDER = "XYZ";
        var In = function() {
            function e() {
                _(this, e),
                this.mask = 1
            }
            return x(e, [{
                key: "set",
                value: function(e) {
                    this.mask = (1 << e | 0) >>> 0
                }
            }, {
                key: "enable",
                value: function(e) {
                    this.mask |= 1 << e | 0
                }
            }, {
                key: "enableAll",
                value: function() {
                    this.mask = -1
                }
            }, {
                key: "toggle",
                value: function(e) {
                    this.mask ^= 1 << e | 0
                }
            }, {
                key: "disable",
                value: function(e) {
                    this.mask &= ~(1 << e | 0)
                }
            }, {
                key: "disableAll",
                value: function() {
                    this.mask = 0
                }
            }, {
                key: "test",
                value: function(e) {
                    return 0 !== (this.mask & e.mask)
                }
            }, {
                key: "isEnabled",
                value: function(e) {
                    return 0 !== (this.mask & (1 << e | 0))
                }
            }]),
            e
        }()
          , On = 0
          , Fn = new Yt
          , zn = new qt
          , Bn = new Tn
          , Vn = new Yt
          , Hn = new Yt
          , Gn = new Yt
          , Wn = new qt
          , Xn = new Yt(1,0,0)
          , jn = new Yt(0,1,0)
          , qn = new Yt(0,0,1)
          , Yn = {
            type: "added"
        }
          , Kn = {
            type: "removed"
        }
          , Zn = {
            type: "childadded",
            child: null
        }
          , Qn = {
            type: "childremoved",
            child: null
        }
          , Jn = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                _(this, n),
                (e = t.call(this)).isObject3D = !0,
                Object.defineProperty(s(e), "id", {
                    value: On++
                }),
                e.uuid = dt(),
                e.name = "",
                e.type = "Object3D",
                e.parent = null,
                e.children = [],
                e.up = n.DEFAULT_UP.clone();
                var r = new Yt
                  , i = new Nn
                  , a = new qt
                  , o = new Yt(1,1,1);
                return i._onChange((function() {
                    a.setFromEuler(i, !1)
                }
                )),
                a._onChange((function() {
                    i.setFromQuaternion(a, void 0, !1)
                }
                )),
                Object.defineProperties(s(e), {
                    position: {
                        configurable: !0,
                        enumerable: !0,
                        value: r
                    },
                    rotation: {
                        configurable: !0,
                        enumerable: !0,
                        value: i
                    },
                    quaternion: {
                        configurable: !0,
                        enumerable: !0,
                        value: a
                    },
                    scale: {
                        configurable: !0,
                        enumerable: !0,
                        value: o
                    },
                    modelViewMatrix: {
                        value: new Tn
                    },
                    normalMatrix: {
                        value: new yt
                    }
                }),
                e.matrix = new Tn,
                e.matrixWorld = new Tn,
                e.matrixAutoUpdate = n.DEFAULT_MATRIX_AUTO_UPDATE,
                e.matrixWorldAutoUpdate = n.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,
                e.matrixWorldNeedsUpdate = !1,
                e.layers = new In,
                e.visible = !0,
                e.castShadow = !1,
                e.receiveShadow = !1,
                e.frustumCulled = !0,
                e.renderOrder = 0,
                e.animations = [],
                e.userData = {},
                e
            }
            return x(n, [{
                key: "onBeforeShadow",
                value: function() {}
            }, {
                key: "onAfterShadow",
                value: function() {}
            }, {
                key: "onBeforeRender",
                value: function() {}
            }, {
                key: "onAfterRender",
                value: function() {}
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    this.matrixAutoUpdate && this.updateMatrix(),
                    this.matrix.premultiply(e),
                    this.matrix.decompose(this.position, this.quaternion, this.scale)
                }
            }, {
                key: "applyQuaternion",
                value: function(e) {
                    return this.quaternion.premultiply(e),
                    this
                }
            }, {
                key: "setRotationFromAxisAngle",
                value: function(e, t) {
                    this.quaternion.setFromAxisAngle(e, t)
                }
            }, {
                key: "setRotationFromEuler",
                value: function(e) {
                    this.quaternion.setFromEuler(e, !0)
                }
            }, {
                key: "setRotationFromMatrix",
                value: function(e) {
                    this.quaternion.setFromRotationMatrix(e)
                }
            }, {
                key: "setRotationFromQuaternion",
                value: function(e) {
                    this.quaternion.copy(e)
                }
            }, {
                key: "rotateOnAxis",
                value: function(e, t) {
                    return zn.setFromAxisAngle(e, t),
                    this.quaternion.multiply(zn),
                    this
                }
            }, {
                key: "rotateOnWorldAxis",
                value: function(e, t) {
                    return zn.setFromAxisAngle(e, t),
                    this.quaternion.premultiply(zn),
                    this
                }
            }, {
                key: "rotateX",
                value: function(e) {
                    return this.rotateOnAxis(Xn, e)
                }
            }, {
                key: "rotateY",
                value: function(e) {
                    return this.rotateOnAxis(jn, e)
                }
            }, {
                key: "rotateZ",
                value: function(e) {
                    return this.rotateOnAxis(qn, e)
                }
            }, {
                key: "translateOnAxis",
                value: function(e, t) {
                    return Fn.copy(e).applyQuaternion(this.quaternion),
                    this.position.add(Fn.multiplyScalar(t)),
                    this
                }
            }, {
                key: "translateX",
                value: function(e) {
                    return this.translateOnAxis(Xn, e)
                }
            }, {
                key: "translateY",
                value: function(e) {
                    return this.translateOnAxis(jn, e)
                }
            }, {
                key: "translateZ",
                value: function(e) {
                    return this.translateOnAxis(qn, e)
                }
            }, {
                key: "localToWorld",
                value: function(e) {
                    return this.updateWorldMatrix(!0, !1),
                    e.applyMatrix4(this.matrixWorld)
                }
            }, {
                key: "worldToLocal",
                value: function(e) {
                    return this.updateWorldMatrix(!0, !1),
                    e.applyMatrix4(Bn.copy(this.matrixWorld).invert())
                }
            }, {
                key: "lookAt",
                value: function(e, t, n) {
                    e.isVector3 ? Vn.copy(e) : Vn.set(e, t, n);
                    var r = this.parent;
                    this.updateWorldMatrix(!0, !1),
                    Hn.setFromMatrixPosition(this.matrixWorld),
                    this.isCamera || this.isLight ? Bn.lookAt(Hn, Vn, this.up) : Bn.lookAt(Vn, Hn, this.up),
                    this.quaternion.setFromRotationMatrix(Bn),
                    r && (Bn.extractRotation(r.matrixWorld),
                    zn.setFromRotationMatrix(Bn),
                    this.quaternion.premultiply(zn.invert()))
                }
            }, {
                key: "add",
                value: function(e) {
                    if (arguments.length > 1) {
                        for (var t = 0; t < arguments.length; t++)
                            this.add(arguments[t]);
                        return this
                    }
                    return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e),
                    this) : (e && e.isObject3D ? (e.removeFromParent(),
                    e.parent = this,
                    this.children.push(e),
                    e.dispatchEvent(Yn),
                    Zn.child = e,
                    this.dispatchEvent(Zn),
                    Zn.child = null) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e),
                    this)
                }
            }, {
                key: "remove",
                value: function(e) {
                    if (arguments.length > 1) {
                        for (var t = 0; t < arguments.length; t++)
                            this.remove(arguments[t]);
                        return this
                    }
                    var n = this.children.indexOf(e);
                    return -1 !== n && (e.parent = null,
                    this.children.splice(n, 1),
                    e.dispatchEvent(Kn),
                    Qn.child = e,
                    this.dispatchEvent(Qn),
                    Qn.child = null),
                    this
                }
            }, {
                key: "removeFromParent",
                value: function() {
                    var e = this.parent;
                    return null !== e && e.remove(this),
                    this
                }
            }, {
                key: "clear",
                value: function() {
                    return this.remove.apply(this, w(this.children))
                }
            }, {
                key: "attach",
                value: function(e) {
                    return this.updateWorldMatrix(!0, !1),
                    Bn.copy(this.matrixWorld).invert(),
                    null !== e.parent && (e.parent.updateWorldMatrix(!0, !1),
                    Bn.multiply(e.parent.matrixWorld)),
                    e.applyMatrix4(Bn),
                    e.removeFromParent(),
                    e.parent = this,
                    this.children.push(e),
                    e.updateWorldMatrix(!1, !0),
                    e.dispatchEvent(Yn),
                    Zn.child = e,
                    this.dispatchEvent(Zn),
                    Zn.child = null,
                    this
                }
            }, {
                key: "getObjectById",
                value: function(e) {
                    return this.getObjectByProperty("id", e)
                }
            }, {
                key: "getObjectByName",
                value: function(e) {
                    return this.getObjectByProperty("name", e)
                }
            }, {
                key: "getObjectByProperty",
                value: function(e, t) {
                    if (this[e] === t)
                        return this;
                    for (var n = 0, r = this.children.length; n < r; n++) {
                        var i = this.children[n].getObjectByProperty(e, t);
                        if (void 0 !== i)
                            return i
                    }
                }
            }, {
                key: "getObjectsByProperty",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
                    this[e] === t && n.push(this);
                    for (var r = this.children, i = 0, a = r.length; i < a; i++)
                        r[i].getObjectsByProperty(e, t, n);
                    return n
                }
            }, {
                key: "getWorldPosition",
                value: function(e) {
                    return this.updateWorldMatrix(!0, !1),
                    e.setFromMatrixPosition(this.matrixWorld)
                }
            }, {
                key: "getWorldQuaternion",
                value: function(e) {
                    return this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(Hn, e, Gn),
                    e
                }
            }, {
                key: "getWorldScale",
                value: function(e) {
                    return this.updateWorldMatrix(!0, !1),
                    this.matrixWorld.decompose(Hn, Wn, e),
                    e
                }
            }, {
                key: "getWorldDirection",
                value: function(e) {
                    this.updateWorldMatrix(!0, !1);
                    var t = this.matrixWorld.elements;
                    return e.set(t[8], t[9], t[10]).normalize()
                }
            }, {
                key: "raycast",
                value: function() {}
            }, {
                key: "traverse",
                value: function(e) {
                    e(this);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++)
                        t[n].traverse(e)
                }
            }, {
                key: "traverseVisible",
                value: function(e) {
                    if (!1 !== this.visible) {
                        e(this);
                        for (var t = this.children, n = 0, r = t.length; n < r; n++)
                            t[n].traverseVisible(e)
                    }
                }
            }, {
                key: "traverseAncestors",
                value: function(e) {
                    var t = this.parent;
                    null !== t && (e(t),
                    t.traverseAncestors(e))
                }
            }, {
                key: "updateMatrix",
                value: function() {
                    this.matrix.compose(this.position, this.quaternion, this.scale),
                    this.matrixWorldNeedsUpdate = !0
                }
            }, {
                key: "updateMatrixWorld",
                value: function(e) {
                    this.matrixAutoUpdate && this.updateMatrix(),
                    (this.matrixWorldNeedsUpdate || e) && (!0 === this.matrixWorldAutoUpdate && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix)),
                    this.matrixWorldNeedsUpdate = !1,
                    e = !0);
                    for (var t = this.children, n = 0, r = t.length; n < r; n++) {
                        t[n].updateMatrixWorld(e)
                    }
                }
            }, {
                key: "updateWorldMatrix",
                value: function(e, t) {
                    var n = this.parent;
                    if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1),
                    this.matrixAutoUpdate && this.updateMatrix(),
                    !0 === this.matrixWorldAutoUpdate && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix)),
                    !0 === t)
                        for (var r = this.children, i = 0, a = r.length; i < a; i++) {
                            r[i].updateWorldMatrix(!1, !0)
                        }
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = void 0 === e || "string" === typeof e
                      , n = {};
                    t && (e = {
                        geometries: {},
                        materials: {},
                        textures: {},
                        images: {},
                        shapes: {},
                        skeletons: {},
                        animations: {},
                        nodes: {}
                    },
                    n.metadata = {
                        version: 4.6,
                        type: "Object",
                        generator: "Object3D.toJSON"
                    });
                    var r = {};
                    function i(t, n) {
                        return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)),
                        n.uuid
                    }
                    if (r.uuid = this.uuid,
                    r.type = this.type,
                    "" !== this.name && (r.name = this.name),
                    !0 === this.castShadow && (r.castShadow = !0),
                    !0 === this.receiveShadow && (r.receiveShadow = !0),
                    !1 === this.visible && (r.visible = !1),
                    !1 === this.frustumCulled && (r.frustumCulled = !1),
                    0 !== this.renderOrder && (r.renderOrder = this.renderOrder),
                    Object.keys(this.userData).length > 0 && (r.userData = this.userData),
                    r.layers = this.layers.mask,
                    r.matrix = this.matrix.toArray(),
                    r.up = this.up.toArray(),
                    !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1),
                    this.isInstancedMesh && (r.type = "InstancedMesh",
                    r.count = this.count,
                    r.instanceMatrix = this.instanceMatrix.toJSON(),
                    null !== this.instanceColor && (r.instanceColor = this.instanceColor.toJSON())),
                    this.isBatchedMesh && (r.type = "BatchedMesh",
                    r.perObjectFrustumCulled = this.perObjectFrustumCulled,
                    r.sortObjects = this.sortObjects,
                    r.drawRanges = this._drawRanges,
                    r.reservedRanges = this._reservedRanges,
                    r.visibility = this._visibility,
                    r.active = this._active,
                    r.bounds = this._bounds.map((function(e) {
                        return {
                            boxInitialized: e.boxInitialized,
                            boxMin: e.box.min.toArray(),
                            boxMax: e.box.max.toArray(),
                            sphereInitialized: e.sphereInitialized,
                            sphereRadius: e.sphere.radius,
                            sphereCenter: e.sphere.center.toArray()
                        }
                    }
                    )),
                    r.maxInstanceCount = this._maxInstanceCount,
                    r.maxVertexCount = this._maxVertexCount,
                    r.maxIndexCount = this._maxIndexCount,
                    r.geometryInitialized = this._geometryInitialized,
                    r.geometryCount = this._geometryCount,
                    r.matricesTexture = this._matricesTexture.toJSON(e),
                    null !== this._colorsTexture && (r.colorsTexture = this._colorsTexture.toJSON(e)),
                    null !== this.boundingSphere && (r.boundingSphere = {
                        center: r.boundingSphere.center.toArray(),
                        radius: r.boundingSphere.radius
                    }),
                    null !== this.boundingBox && (r.boundingBox = {
                        min: r.boundingBox.min.toArray(),
                        max: r.boundingBox.max.toArray()
                    })),
                    this.isScene)
                        this.background && (this.background.isColor ? r.background = this.background.toJSON() : this.background.isTexture && (r.background = this.background.toJSON(e).uuid)),
                        this.environment && this.environment.isTexture && !0 !== this.environment.isRenderTargetTexture && (r.environment = this.environment.toJSON(e).uuid);
                    else if (this.isMesh || this.isLine || this.isPoints) {
                        r.geometry = i(e.geometries, this.geometry);
                        var a = this.geometry.parameters;
                        if (void 0 !== a && void 0 !== a.shapes) {
                            var o = a.shapes;
                            if (Array.isArray(o))
                                for (var s = 0, l = o.length; s < l; s++) {
                                    var u = o[s];
                                    i(e.shapes, u)
                                }
                            else
                                i(e.shapes, o)
                        }
                    }
                    if (this.isSkinnedMesh && (r.bindMode = this.bindMode,
                    r.bindMatrix = this.bindMatrix.toArray(),
                    void 0 !== this.skeleton && (i(e.skeletons, this.skeleton),
                    r.skeleton = this.skeleton.uuid)),
                    void 0 !== this.material)
                        if (Array.isArray(this.material)) {
                            for (var c = [], d = 0, f = this.material.length; d < f; d++)
                                c.push(i(e.materials, this.material[d]));
                            r.material = c
                        } else
                            r.material = i(e.materials, this.material);
                    if (this.children.length > 0) {
                        r.children = [];
                        for (var h = 0; h < this.children.length; h++)
                            r.children.push(this.children[h].toJSON(e).object)
                    }
                    if (this.animations.length > 0) {
                        r.animations = [];
                        for (var p = 0; p < this.animations.length; p++) {
                            var m = this.animations[p];
                            r.animations.push(i(e.animations, m))
                        }
                    }
                    if (t) {
                        var v = E(e.geometries)
                          , g = E(e.materials)
                          , _ = E(e.textures)
                          , y = E(e.images)
                          , x = E(e.shapes)
                          , b = E(e.skeletons)
                          , S = E(e.animations)
                          , M = E(e.nodes);
                        v.length > 0 && (n.geometries = v),
                        g.length > 0 && (n.materials = g),
                        _.length > 0 && (n.textures = _),
                        y.length > 0 && (n.images = y),
                        x.length > 0 && (n.shapes = x),
                        b.length > 0 && (n.skeletons = b),
                        S.length > 0 && (n.animations = S),
                        M.length > 0 && (n.nodes = M)
                    }
                    return n.object = r,
                    n;
                    function E(e) {
                        var t = [];
                        for (var n in e) {
                            var r = e[n];
                            delete r.metadata,
                            t.push(r)
                        }
                        return t
                    }
                }
            }, {
                key: "clone",
                value: function(e) {
                    return (new this.constructor).copy(this, e)
                }
            }, {
                key: "copy",
                value: function(e) {
                    var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                    if (this.name = e.name,
                    this.up.copy(e.up),
                    this.position.copy(e.position),
                    this.rotation.order = e.rotation.order,
                    this.quaternion.copy(e.quaternion),
                    this.scale.copy(e.scale),
                    this.matrix.copy(e.matrix),
                    this.matrixWorld.copy(e.matrixWorld),
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate,
                    this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate,
                    this.layers.mask = e.layers.mask,
                    this.visible = e.visible,
                    this.castShadow = e.castShadow,
                    this.receiveShadow = e.receiveShadow,
                    this.frustumCulled = e.frustumCulled,
                    this.renderOrder = e.renderOrder,
                    this.animations = e.animations.slice(),
                    this.userData = JSON.parse(JSON.stringify(e.userData)),
                    !0 === t)
                        for (var n = 0; n < e.children.length; n++) {
                            var r = e.children[n];
                            this.add(r.clone())
                        }
                    return this
                }
            }]),
            n
        }(ot);
        Jn.DEFAULT_UP = new Yt(0,1,0),
        Jn.DEFAULT_MATRIX_AUTO_UPDATE = !0,
        Jn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
        var $n = new Yt
          , er = new Yt
          , tr = new Yt
          , nr = new Yt
          , rr = new Yt
          , ir = new Yt
          , ar = new Yt
          , or = new Yt
          , sr = new Yt
          , lr = new Yt
          , ur = new Ht
          , cr = new Ht
          , dr = new Ht
          , fr = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Yt
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Yt
                  , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Yt;
                _(this, e),
                this.a = t,
                this.b = n,
                this.c = r
            }
            return x(e, [{
                key: "set",
                value: function(e, t, n) {
                    return this.a.copy(e),
                    this.b.copy(t),
                    this.c.copy(n),
                    this
                }
            }, {
                key: "setFromPointsAndIndices",
                value: function(e, t, n, r) {
                    return this.a.copy(e[t]),
                    this.b.copy(e[n]),
                    this.c.copy(e[r]),
                    this
                }
            }, {
                key: "setFromAttributeAndIndices",
                value: function(e, t, n, r) {
                    return this.a.fromBufferAttribute(e, t),
                    this.b.fromBufferAttribute(e, n),
                    this.c.fromBufferAttribute(e, r),
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.a.copy(e.a),
                    this.b.copy(e.b),
                    this.c.copy(e.c),
                    this
                }
            }, {
                key: "getArea",
                value: function() {
                    return $n.subVectors(this.c, this.b),
                    er.subVectors(this.a, this.b),
                    .5 * $n.cross(er).length()
                }
            }, {
                key: "getMidpoint",
                value: function(e) {
                    return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                }
            }, {
                key: "getNormal",
                value: function(t) {
                    return e.getNormal(this.a, this.b, this.c, t)
                }
            }, {
                key: "getPlane",
                value: function(e) {
                    return e.setFromCoplanarPoints(this.a, this.b, this.c)
                }
            }, {
                key: "getBarycoord",
                value: function(t, n) {
                    return e.getBarycoord(t, this.a, this.b, this.c, n)
                }
            }, {
                key: "getInterpolation",
                value: function(t, n, r, i, a) {
                    return e.getInterpolation(t, this.a, this.b, this.c, n, r, i, a)
                }
            }, {
                key: "containsPoint",
                value: function(t) {
                    return e.containsPoint(t, this.a, this.b, this.c)
                }
            }, {
                key: "isFrontFacing",
                value: function(t) {
                    return e.isFrontFacing(this.a, this.b, this.c, t)
                }
            }, {
                key: "intersectsBox",
                value: function(e) {
                    return e.intersectsTriangle(this)
                }
            }, {
                key: "closestPointToPoint",
                value: function(e, t) {
                    var n, r, i = this.a, a = this.b, o = this.c;
                    rr.subVectors(a, i),
                    ir.subVectors(o, i),
                    or.subVectors(e, i);
                    var s = rr.dot(or)
                      , l = ir.dot(or);
                    if (s <= 0 && l <= 0)
                        return t.copy(i);
                    sr.subVectors(e, a);
                    var u = rr.dot(sr)
                      , c = ir.dot(sr);
                    if (u >= 0 && c <= u)
                        return t.copy(a);
                    var d = s * c - u * l;
                    if (d <= 0 && s >= 0 && u <= 0)
                        return n = s / (s - u),
                        t.copy(i).addScaledVector(rr, n);
                    lr.subVectors(e, o);
                    var f = rr.dot(lr)
                      , h = ir.dot(lr);
                    if (h >= 0 && f <= h)
                        return t.copy(o);
                    var p = f * l - s * h;
                    if (p <= 0 && l >= 0 && h <= 0)
                        return r = l / (l - h),
                        t.copy(i).addScaledVector(ir, r);
                    var m = u * h - f * c;
                    if (m <= 0 && c - u >= 0 && f - h >= 0)
                        return ar.subVectors(o, a),
                        r = (c - u) / (c - u + (f - h)),
                        t.copy(a).addScaledVector(ar, r);
                    var v = 1 / (m + p + d);
                    return n = p * v,
                    r = d * v,
                    t.copy(i).addScaledVector(rr, n).addScaledVector(ir, r)
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
                }
            }], [{
                key: "getNormal",
                value: function(e, t, n, r) {
                    r.subVectors(n, t),
                    $n.subVectors(e, t),
                    r.cross($n);
                    var i = r.lengthSq();
                    return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0)
                }
            }, {
                key: "getBarycoord",
                value: function(e, t, n, r, i) {
                    $n.subVectors(r, t),
                    er.subVectors(n, t),
                    tr.subVectors(e, t);
                    var a = $n.dot($n)
                      , o = $n.dot(er)
                      , s = $n.dot(tr)
                      , l = er.dot(er)
                      , u = er.dot(tr)
                      , c = a * l - o * o;
                    if (0 === c)
                        return i.set(0, 0, 0),
                        null;
                    var d = 1 / c
                      , f = (l * s - o * u) * d
                      , h = (a * u - o * s) * d;
                    return i.set(1 - f - h, h, f)
                }
            }, {
                key: "containsPoint",
                value: function(e, t, n, r) {
                    return null !== this.getBarycoord(e, t, n, r, nr) && (nr.x >= 0 && nr.y >= 0 && nr.x + nr.y <= 1)
                }
            }, {
                key: "getInterpolation",
                value: function(e, t, n, r, i, a, o, s) {
                    return null === this.getBarycoord(e, t, n, r, nr) ? (s.x = 0,
                    s.y = 0,
                    "z"in s && (s.z = 0),
                    "w"in s && (s.w = 0),
                    null) : (s.setScalar(0),
                    s.addScaledVector(i, nr.x),
                    s.addScaledVector(a, nr.y),
                    s.addScaledVector(o, nr.z),
                    s)
                }
            }, {
                key: "getInterpolatedAttribute",
                value: function(e, t, n, r, i, a) {
                    return ur.setScalar(0),
                    cr.setScalar(0),
                    dr.setScalar(0),
                    ur.fromBufferAttribute(e, t),
                    cr.fromBufferAttribute(e, n),
                    dr.fromBufferAttribute(e, r),
                    a.setScalar(0),
                    a.addScaledVector(ur, i.x),
                    a.addScaledVector(cr, i.y),
                    a.addScaledVector(dr, i.z),
                    a
                }
            }, {
                key: "isFrontFacing",
                value: function(e, t, n, r) {
                    return $n.subVectors(n, t),
                    er.subVectors(e, t),
                    $n.cross(er).dot(r) < 0
                }
            }]),
            e
        }()
          , hr = {
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            rebeccapurple: 6697881,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        }
          , pr = {
            h: 0,
            s: 0,
            l: 0
        }
          , mr = {
            h: 0,
            s: 0,
            l: 0
        };
        function vr(e, t, n) {
            return n < 0 && (n += 1),
            n > 1 && (n -= 1),
            n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
        }
        var gr = function(e) {
            function t(e, n, r) {
                return _(this, t),
                this.isColor = !0,
                this.r = 1,
                this.g = 1,
                this.b = 1,
                this.set(e, n, r)
            }
            return x(t, [{
                key: "set",
                value: function(e, t, n) {
                    if (void 0 === t && void 0 === n) {
                        var r = e;
                        r && r.isColor ? this.copy(r) : "number" === typeof r ? this.setHex(r) : "string" === typeof r && this.setStyle(r)
                    } else
                        this.setRGB(e, t, n);
                    return this
                }
            }, {
                key: "setScalar",
                value: function(e) {
                    return this.r = e,
                    this.g = e,
                    this.b = e,
                    this
                }
            }, {
                key: "setHex",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Qe;
                    return e = Math.floor(e),
                    this.r = (e >> 16 & 255) / 255,
                    this.g = (e >> 8 & 255) / 255,
                    this.b = (255 & e) / 255,
                    Ut.toWorkingColorSpace(this, t),
                    this
                }
            }, {
                key: "setRGB",
                value: function(e, t, n) {
                    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Ut.workingColorSpace;
                    return this.r = e,
                    this.g = t,
                    this.b = n,
                    Ut.toWorkingColorSpace(this, r),
                    this
                }
            }, {
                key: "setHSL",
                value: function(e, t, n) {
                    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Ut.workingColorSpace;
                    if (e = ht(e, 1),
                    t = ft(t, 0, 1),
                    n = ft(n, 0, 1),
                    0 === t)
                        this.r = this.g = this.b = n;
                    else {
                        var i = n <= .5 ? n * (1 + t) : n + t - n * t
                          , a = 2 * n - i;
                        this.r = vr(a, i, e + 1 / 3),
                        this.g = vr(a, i, e),
                        this.b = vr(a, i, e - 1 / 3)
                    }
                    return Ut.toWorkingColorSpace(this, r),
                    this
                }
            }, {
                key: "setStyle",
                value: function(e) {
                    var t, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Qe;
                    function r(t) {
                        void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
                    }
                    if (t = /^(\w+)\(([^\)]*)\)/.exec(e)) {
                        var i, a = t[1], o = t[2];
                        switch (a) {
                        case "rgb":
                        case "rgba":
                            if (i = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))
                                return r(i[4]),
                                this.setRGB(Math.min(255, parseInt(i[1], 10)) / 255, Math.min(255, parseInt(i[2], 10)) / 255, Math.min(255, parseInt(i[3], 10)) / 255, n);
                            if (i = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))
                                return r(i[4]),
                                this.setRGB(Math.min(100, parseInt(i[1], 10)) / 100, Math.min(100, parseInt(i[2], 10)) / 100, Math.min(100, parseInt(i[3], 10)) / 100, n);
                            break;
                        case "hsl":
                        case "hsla":
                            if (i = /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))
                                return r(i[4]),
                                this.setHSL(parseFloat(i[1]) / 360, parseFloat(i[2]) / 100, parseFloat(i[3]) / 100, n);
                            break;
                        default:
                            console.warn("THREE.Color: Unknown color model " + e)
                        }
                    } else if (t = /^\#([A-Fa-f\d]+)$/.exec(e)) {
                        var s = t[1]
                          , l = s.length;
                        if (3 === l)
                            return this.setRGB(parseInt(s.charAt(0), 16) / 15, parseInt(s.charAt(1), 16) / 15, parseInt(s.charAt(2), 16) / 15, n);
                        if (6 === l)
                            return this.setHex(parseInt(s, 16), n);
                        console.warn("THREE.Color: Invalid hex color " + e)
                    } else if (e && e.length > 0)
                        return this.setColorName(e, n);
                    return this
                }
            }, {
                key: "setColorName",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Qe
                      , n = hr[e.toLowerCase()];
                    return void 0 !== n ? this.setHex(n, t) : console.warn("THREE.Color: Unknown color " + e),
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this.r,this.g,this.b)
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.r = e.r,
                    this.g = e.g,
                    this.b = e.b,
                    this
                }
            }, {
                key: "copySRGBToLinear",
                value: function(e) {
                    return this.r = Dt(e.r),
                    this.g = Dt(e.g),
                    this.b = Dt(e.b),
                    this
                }
            }, {
                key: "copyLinearToSRGB",
                value: function(e) {
                    return this.r = Nt(e.r),
                    this.g = Nt(e.g),
                    this.b = Nt(e.b),
                    this
                }
            }, {
                key: "convertSRGBToLinear",
                value: function() {
                    return this.copySRGBToLinear(this),
                    this
                }
            }, {
                key: "convertLinearToSRGB",
                value: function() {
                    return this.copyLinearToSRGB(this),
                    this
                }
            }, {
                key: "getHex",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Qe;
                    return Ut.fromWorkingColorSpace(_r.copy(this), e),
                    65536 * Math.round(ft(255 * _r.r, 0, 255)) + 256 * Math.round(ft(255 * _r.g, 0, 255)) + Math.round(ft(255 * _r.b, 0, 255))
                }
            }, {
                key: "getHexString",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Qe;
                    return ("000000" + this.getHex(e).toString(16)).slice(-6)
                }
            }, {
                key: "getHSL",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Ut.workingColorSpace;
                    Ut.fromWorkingColorSpace(_r.copy(this), t);
                    var n, r, i = _r.r, a = _r.g, o = _r.b, s = Math.max(i, a, o), l = Math.min(i, a, o), u = (l + s) / 2;
                    if (l === s)
                        n = 0,
                        r = 0;
                    else {
                        var c = s - l;
                        switch (r = u <= .5 ? c / (s + l) : c / (2 - s - l),
                        s) {
                        case i:
                            n = (a - o) / c + (a < o ? 6 : 0);
                            break;
                        case a:
                            n = (o - i) / c + 2;
                            break;
                        case o:
                            n = (i - a) / c + 4
                        }
                        n /= 6
                    }
                    return e.h = n,
                    e.s = r,
                    e.l = u,
                    e
                }
            }, {
                key: "getRGB",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Ut.workingColorSpace;
                    return Ut.fromWorkingColorSpace(_r.copy(this), t),
                    e.r = _r.r,
                    e.g = _r.g,
                    e.b = _r.b,
                    e
                }
            }, {
                key: "getStyle",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Qe;
                    Ut.fromWorkingColorSpace(_r.copy(this), e);
                    var t = _r.r
                      , n = _r.g
                      , r = _r.b;
                    return e !== Qe ? "color(".concat(e, " ").concat(t.toFixed(3), " ").concat(n.toFixed(3), " ").concat(r.toFixed(3), ")") : "rgb(".concat(Math.round(255 * t), ",").concat(Math.round(255 * n), ",").concat(Math.round(255 * r), ")")
                }
            }, {
                key: "offsetHSL",
                value: function(e, t, n) {
                    return this.getHSL(pr),
                    this.setHSL(pr.h + e, pr.s + t, pr.l + n)
                }
            }, {
                key: "add",
                value: function(e) {
                    return this.r += e.r,
                    this.g += e.g,
                    this.b += e.b,
                    this
                }
            }, {
                key: "addColors",
                value: function(e, t) {
                    return this.r = e.r + t.r,
                    this.g = e.g + t.g,
                    this.b = e.b + t.b,
                    this
                }
            }, {
                key: "addScalar",
                value: function(e) {
                    return this.r += e,
                    this.g += e,
                    this.b += e,
                    this
                }
            }, {
                key: "sub",
                value: function(e) {
                    return this.r = Math.max(0, this.r - e.r),
                    this.g = Math.max(0, this.g - e.g),
                    this.b = Math.max(0, this.b - e.b),
                    this
                }
            }, {
                key: "multiply",
                value: function(e) {
                    return this.r *= e.r,
                    this.g *= e.g,
                    this.b *= e.b,
                    this
                }
            }, {
                key: "multiplyScalar",
                value: function(e) {
                    return this.r *= e,
                    this.g *= e,
                    this.b *= e,
                    this
                }
            }, {
                key: "lerp",
                value: function(e, t) {
                    return this.r += (e.r - this.r) * t,
                    this.g += (e.g - this.g) * t,
                    this.b += (e.b - this.b) * t,
                    this
                }
            }, {
                key: "lerpColors",
                value: function(e, t, n) {
                    return this.r = e.r + (t.r - e.r) * n,
                    this.g = e.g + (t.g - e.g) * n,
                    this.b = e.b + (t.b - e.b) * n,
                    this
                }
            }, {
                key: "lerpHSL",
                value: function(e, t) {
                    this.getHSL(pr),
                    e.getHSL(mr);
                    var n = pt(pr.h, mr.h, t)
                      , r = pt(pr.s, mr.s, t)
                      , i = pt(pr.l, mr.l, t);
                    return this.setHSL(n, r, i),
                    this
                }
            }, {
                key: "setFromVector3",
                value: function(e) {
                    return this.r = e.x,
                    this.g = e.y,
                    this.b = e.z,
                    this
                }
            }, {
                key: "applyMatrix3",
                value: function(e) {
                    var t = this.r
                      , n = this.g
                      , r = this.b
                      , i = e.elements;
                    return this.r = i[0] * t + i[3] * n + i[6] * r,
                    this.g = i[1] * t + i[4] * n + i[7] * r,
                    this.b = i[2] * t + i[5] * n + i[8] * r,
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.r === this.r && e.g === this.g && e.b === this.b
                }
            }, {
                key: "fromArray",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return this.r = e[t],
                    this.g = e[t + 1],
                    this.b = e[t + 2],
                    this
                }
            }, {
                key: "toArray",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                      , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return e[t] = this.r,
                    e[t + 1] = this.g,
                    e[t + 2] = this.b,
                    e
                }
            }, {
                key: "fromBufferAttribute",
                value: function(e, t) {
                    return this.r = e.getX(t),
                    this.g = e.getY(t),
                    this.b = e.getZ(t),
                    this
                }
            }, {
                key: "toJSON",
                value: function() {
                    return this.getHex()
                }
            }, {
                key: Symbol.iterator,
                value: i().mark((function e() {
                    return i().wrap((function(e) {
                        for (; ; )
                            switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2,
                                this.r;
                            case 2:
                                return e.next = 4,
                                this.g;
                            case 4:
                                return e.next = 6,
                                this.b;
                            case 6:
                            case "end":
                                return e.stop()
                            }
                    }
                    ), e, this)
                }
                ))
            }]),
            t
        }()
          , _r = new gr;
        gr.NAMES = hr;
        var yr = 0
          , xr = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this)).isMaterial = !0,
                Object.defineProperty(s(e), "id", {
                    value: yr++
                }),
                e.uuid = dt(),
                e.name = "",
                e.type = "Material",
                e.blending = 1,
                e.side = 0,
                e.vertexColors = !1,
                e.opacity = 1,
                e.transparent = !1,
                e.alphaHash = !1,
                e.blendSrc = 204,
                e.blendDst = 205,
                e.blendEquation = R,
                e.blendSrcAlpha = null,
                e.blendDstAlpha = null,
                e.blendEquationAlpha = null,
                e.blendColor = new gr(0,0,0),
                e.blendAlpha = 0,
                e.depthFunc = 3,
                e.depthTest = !0,
                e.depthWrite = !0,
                e.stencilWriteMask = 255,
                e.stencilFunc = 519,
                e.stencilRef = 0,
                e.stencilFuncMask = 255,
                e.stencilFail = tt,
                e.stencilZFail = tt,
                e.stencilZPass = tt,
                e.stencilWrite = !1,
                e.clippingPlanes = null,
                e.clipIntersection = !1,
                e.clipShadows = !1,
                e.shadowSide = null,
                e.colorWrite = !0,
                e.precision = null,
                e.polygonOffset = !1,
                e.polygonOffsetFactor = 0,
                e.polygonOffsetUnits = 0,
                e.dithering = !1,
                e.alphaToCoverage = !1,
                e.premultipliedAlpha = !1,
                e.forceSinglePass = !1,
                e.visible = !0,
                e.toneMapped = !0,
                e.userData = {},
                e.version = 0,
                e._alphaTest = 0,
                e
            }
            return x(n, [{
                key: "alphaTest",
                get: function() {
                    return this._alphaTest
                },
                set: function(e) {
                    this._alphaTest > 0 !== e > 0 && this.version++,
                    this._alphaTest = e
                }
            }, {
                key: "onBeforeRender",
                value: function() {}
            }, {
                key: "onBeforeCompile",
                value: function() {}
            }, {
                key: "customProgramCacheKey",
                value: function() {
                    return this.onBeforeCompile.toString()
                }
            }, {
                key: "setValues",
                value: function(e) {
                    if (void 0 !== e)
                        for (var t in e) {
                            var n = e[t];
                            if (void 0 !== n) {
                                var r = this[t];
                                void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[t] = n : console.warn("THREE.Material: '".concat(t, "' is not a property of THREE.").concat(this.type, "."))
                            } else
                                console.warn("THREE.Material: parameter '".concat(t, "' has value of undefined."))
                        }
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = void 0 === e || "string" === typeof e;
                    t && (e = {
                        textures: {},
                        images: {}
                    });
                    var n = {
                        metadata: {
                            version: 4.6,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };
                    function r(e) {
                        var t = [];
                        for (var n in e) {
                            var r = e[n];
                            delete r.metadata,
                            t.push(r)
                        }
                        return t
                    }
                    if (n.uuid = this.uuid,
                    n.type = this.type,
                    "" !== this.name && (n.name = this.name),
                    this.color && this.color.isColor && (n.color = this.color.getHex()),
                    void 0 !== this.roughness && (n.roughness = this.roughness),
                    void 0 !== this.metalness && (n.metalness = this.metalness),
                    void 0 !== this.sheen && (n.sheen = this.sheen),
                    this.sheenColor && this.sheenColor.isColor && (n.sheenColor = this.sheenColor.getHex()),
                    void 0 !== this.sheenRoughness && (n.sheenRoughness = this.sheenRoughness),
                    this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()),
                    void 0 !== this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity),
                    this.specular && this.specular.isColor && (n.specular = this.specular.getHex()),
                    void 0 !== this.specularIntensity && (n.specularIntensity = this.specularIntensity),
                    this.specularColor && this.specularColor.isColor && (n.specularColor = this.specularColor.getHex()),
                    void 0 !== this.shininess && (n.shininess = this.shininess),
                    void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat),
                    void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness),
                    this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
                    this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid),
                    this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid,
                    n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()),
                    void 0 !== this.dispersion && (n.dispersion = this.dispersion),
                    void 0 !== this.iridescence && (n.iridescence = this.iridescence),
                    void 0 !== this.iridescenceIOR && (n.iridescenceIOR = this.iridescenceIOR),
                    void 0 !== this.iridescenceThicknessRange && (n.iridescenceThicknessRange = this.iridescenceThicknessRange),
                    this.iridescenceMap && this.iridescenceMap.isTexture && (n.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
                    this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture && (n.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(e).uuid),
                    void 0 !== this.anisotropy && (n.anisotropy = this.anisotropy),
                    void 0 !== this.anisotropyRotation && (n.anisotropyRotation = this.anisotropyRotation),
                    this.anisotropyMap && this.anisotropyMap.isTexture && (n.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
                    this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
                    this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid),
                    this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid),
                    this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid,
                    n.lightMapIntensity = this.lightMapIntensity),
                    this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid,
                    n.aoMapIntensity = this.aoMapIntensity),
                    this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid,
                    n.bumpScale = this.bumpScale),
                    this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid,
                    n.normalMapType = this.normalMapType,
                    n.normalScale = this.normalScale.toArray()),
                    this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid,
                    n.displacementScale = this.displacementScale,
                    n.displacementBias = this.displacementBias),
                    this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
                    this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
                    this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
                    this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid),
                    this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid),
                    this.specularColorMap && this.specularColorMap.isTexture && (n.specularColorMap = this.specularColorMap.toJSON(e).uuid),
                    this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid,
                    void 0 !== this.combine && (n.combine = this.combine)),
                    void 0 !== this.envMapRotation && (n.envMapRotation = this.envMapRotation.toArray()),
                    void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity),
                    void 0 !== this.reflectivity && (n.reflectivity = this.reflectivity),
                    void 0 !== this.refractionRatio && (n.refractionRatio = this.refractionRatio),
                    this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid),
                    void 0 !== this.transmission && (n.transmission = this.transmission),
                    this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
                    void 0 !== this.thickness && (n.thickness = this.thickness),
                    this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
                    void 0 !== this.attenuationDistance && this.attenuationDistance !== 1 / 0 && (n.attenuationDistance = this.attenuationDistance),
                    void 0 !== this.attenuationColor && (n.attenuationColor = this.attenuationColor.getHex()),
                    void 0 !== this.size && (n.size = this.size),
                    null !== this.shadowSide && (n.shadowSide = this.shadowSide),
                    void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation),
                    1 !== this.blending && (n.blending = this.blending),
                    0 !== this.side && (n.side = this.side),
                    !0 === this.vertexColors && (n.vertexColors = !0),
                    this.opacity < 1 && (n.opacity = this.opacity),
                    !0 === this.transparent && (n.transparent = !0),
                    204 !== this.blendSrc && (n.blendSrc = this.blendSrc),
                    205 !== this.blendDst && (n.blendDst = this.blendDst),
                    this.blendEquation !== R && (n.blendEquation = this.blendEquation),
                    null !== this.blendSrcAlpha && (n.blendSrcAlpha = this.blendSrcAlpha),
                    null !== this.blendDstAlpha && (n.blendDstAlpha = this.blendDstAlpha),
                    null !== this.blendEquationAlpha && (n.blendEquationAlpha = this.blendEquationAlpha),
                    this.blendColor && this.blendColor.isColor && (n.blendColor = this.blendColor.getHex()),
                    0 !== this.blendAlpha && (n.blendAlpha = this.blendAlpha),
                    3 !== this.depthFunc && (n.depthFunc = this.depthFunc),
                    !1 === this.depthTest && (n.depthTest = this.depthTest),
                    !1 === this.depthWrite && (n.depthWrite = this.depthWrite),
                    !1 === this.colorWrite && (n.colorWrite = this.colorWrite),
                    255 !== this.stencilWriteMask && (n.stencilWriteMask = this.stencilWriteMask),
                    519 !== this.stencilFunc && (n.stencilFunc = this.stencilFunc),
                    0 !== this.stencilRef && (n.stencilRef = this.stencilRef),
                    255 !== this.stencilFuncMask && (n.stencilFuncMask = this.stencilFuncMask),
                    this.stencilFail !== tt && (n.stencilFail = this.stencilFail),
                    this.stencilZFail !== tt && (n.stencilZFail = this.stencilZFail),
                    this.stencilZPass !== tt && (n.stencilZPass = this.stencilZPass),
                    !0 === this.stencilWrite && (n.stencilWrite = this.stencilWrite),
                    void 0 !== this.rotation && 0 !== this.rotation && (n.rotation = this.rotation),
                    !0 === this.polygonOffset && (n.polygonOffset = !0),
                    0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor),
                    0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits),
                    void 0 !== this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth),
                    void 0 !== this.dashSize && (n.dashSize = this.dashSize),
                    void 0 !== this.gapSize && (n.gapSize = this.gapSize),
                    void 0 !== this.scale && (n.scale = this.scale),
                    !0 === this.dithering && (n.dithering = !0),
                    this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
                    !0 === this.alphaHash && (n.alphaHash = !0),
                    !0 === this.alphaToCoverage && (n.alphaToCoverage = !0),
                    !0 === this.premultipliedAlpha && (n.premultipliedAlpha = !0),
                    !0 === this.forceSinglePass && (n.forceSinglePass = !0),
                    !0 === this.wireframe && (n.wireframe = !0),
                    this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin),
                    !0 === this.flatShading && (n.flatShading = !0),
                    !1 === this.visible && (n.visible = !1),
                    !1 === this.toneMapped && (n.toneMapped = !1),
                    !1 === this.fog && (n.fog = !1),
                    Object.keys(this.userData).length > 0 && (n.userData = this.userData),
                    t) {
                        var i = r(e.textures)
                          , a = r(e.images);
                        i.length > 0 && (n.textures = i),
                        a.length > 0 && (n.images = a)
                    }
                    return n
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }, {
                key: "copy",
                value: function(e) {
                    this.name = e.name,
                    this.blending = e.blending,
                    this.side = e.side,
                    this.vertexColors = e.vertexColors,
                    this.opacity = e.opacity,
                    this.transparent = e.transparent,
                    this.blendSrc = e.blendSrc,
                    this.blendDst = e.blendDst,
                    this.blendEquation = e.blendEquation,
                    this.blendSrcAlpha = e.blendSrcAlpha,
                    this.blendDstAlpha = e.blendDstAlpha,
                    this.blendEquationAlpha = e.blendEquationAlpha,
                    this.blendColor.copy(e.blendColor),
                    this.blendAlpha = e.blendAlpha,
                    this.depthFunc = e.depthFunc,
                    this.depthTest = e.depthTest,
                    this.depthWrite = e.depthWrite,
                    this.stencilWriteMask = e.stencilWriteMask,
                    this.stencilFunc = e.stencilFunc,
                    this.stencilRef = e.stencilRef,
                    this.stencilFuncMask = e.stencilFuncMask,
                    this.stencilFail = e.stencilFail,
                    this.stencilZFail = e.stencilZFail,
                    this.stencilZPass = e.stencilZPass,
                    this.stencilWrite = e.stencilWrite;
                    var t = e.clippingPlanes
                      , n = null;
                    if (null !== t) {
                        var r = t.length;
                        n = new Array(r);
                        for (var i = 0; i !== r; ++i)
                            n[i] = t[i].clone()
                    }
                    return this.clippingPlanes = n,
                    this.clipIntersection = e.clipIntersection,
                    this.clipShadows = e.clipShadows,
                    this.shadowSide = e.shadowSide,
                    this.colorWrite = e.colorWrite,
                    this.precision = e.precision,
                    this.polygonOffset = e.polygonOffset,
                    this.polygonOffsetFactor = e.polygonOffsetFactor,
                    this.polygonOffsetUnits = e.polygonOffsetUnits,
                    this.dithering = e.dithering,
                    this.alphaTest = e.alphaTest,
                    this.alphaHash = e.alphaHash,
                    this.alphaToCoverage = e.alphaToCoverage,
                    this.premultipliedAlpha = e.premultipliedAlpha,
                    this.forceSinglePass = e.forceSinglePass,
                    this.visible = e.visible,
                    this.toneMapped = e.toneMapped,
                    this.userData = JSON.parse(JSON.stringify(e.userData)),
                    this
                }
            }, {
                key: "dispose",
                value: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }, {
                key: "needsUpdate",
                set: function(e) {
                    !0 === e && this.version++
                }
            }, {
                key: "onBuild",
                value: function() {
                    console.warn("Material: onBuild() has been removed.")
                }
            }]),
            n
        }(ot)
          , br = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isMeshBasicMaterial = !0,
                r.type = "MeshBasicMaterial",
                r.color = new gr(16777215),
                r.map = null,
                r.lightMap = null,
                r.lightMapIntensity = 1,
                r.aoMap = null,
                r.aoMapIntensity = 1,
                r.specularMap = null,
                r.alphaMap = null,
                r.envMap = null,
                r.envMapRotation = new Nn,
                r.combine = 0,
                r.reflectivity = 1,
                r.refractionRatio = .98,
                r.wireframe = !1,
                r.wireframeLinewidth = 1,
                r.wireframeLinecap = "round",
                r.wireframeLinejoin = "round",
                r.fog = !0,
                r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    this.map = e.map,
                    this.lightMap = e.lightMap,
                    this.lightMapIntensity = e.lightMapIntensity,
                    this.aoMap = e.aoMap,
                    this.aoMapIntensity = e.aoMapIntensity,
                    this.specularMap = e.specularMap,
                    this.alphaMap = e.alphaMap,
                    this.envMap = e.envMap,
                    this.envMapRotation.copy(e.envMapRotation),
                    this.combine = e.combine,
                    this.reflectivity = e.reflectivity,
                    this.refractionRatio = e.refractionRatio,
                    this.wireframe = e.wireframe,
                    this.wireframeLinewidth = e.wireframeLinewidth,
                    this.wireframeLinecap = e.wireframeLinecap,
                    this.wireframeLinejoin = e.wireframeLinejoin,
                    this.fog = e.fog,
                    this
                }
            }]),
            n
        }(xr);
        var Sr = new Yt
          , Mr = new _t
          , Er = function() {
            function e(t, n) {
                var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                if (_(this, e),
                Array.isArray(t))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.isBufferAttribute = !0,
                this.name = "",
                this.array = t,
                this.itemSize = n,
                this.count = void 0 !== t ? t.length / n : 0,
                this.normalized = r,
                this.usage = nt,
                this.updateRanges = [],
                this.gpuType = Y,
                this.version = 0
            }
            return x(e, [{
                key: "onUploadCallback",
                value: function() {}
            }, {
                key: "needsUpdate",
                set: function(e) {
                    !0 === e && this.version++
                }
            }, {
                key: "setUsage",
                value: function(e) {
                    return this.usage = e,
                    this
                }
            }, {
                key: "addUpdateRange",
                value: function(e, t) {
                    this.updateRanges.push({
                        start: e,
                        count: t
                    })
                }
            }, {
                key: "clearUpdateRanges",
                value: function() {
                    this.updateRanges.length = 0
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.name = e.name,
                    this.array = new e.array.constructor(e.array),
                    this.itemSize = e.itemSize,
                    this.count = e.count,
                    this.normalized = e.normalized,
                    this.usage = e.usage,
                    this.gpuType = e.gpuType,
                    this
                }
            }, {
                key: "copyAt",
                value: function(e, t, n) {
                    e *= this.itemSize,
                    n *= t.itemSize;
                    for (var r = 0, i = this.itemSize; r < i; r++)
                        this.array[e + r] = t.array[n + r];
                    return this
                }
            }, {
                key: "copyArray",
                value: function(e) {
                    return this.array.set(e),
                    this
                }
            }, {
                key: "applyMatrix3",
                value: function(e) {
                    if (2 === this.itemSize)
                        for (var t = 0, n = this.count; t < n; t++)
                            Mr.fromBufferAttribute(this, t),
                            Mr.applyMatrix3(e),
                            this.setXY(t, Mr.x, Mr.y);
                    else if (3 === this.itemSize)
                        for (var r = 0, i = this.count; r < i; r++)
                            Sr.fromBufferAttribute(this, r),
                            Sr.applyMatrix3(e),
                            this.setXYZ(r, Sr.x, Sr.y, Sr.z);
                    return this
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    for (var t = 0, n = this.count; t < n; t++)
                        Sr.fromBufferAttribute(this, t),
                        Sr.applyMatrix4(e),
                        this.setXYZ(t, Sr.x, Sr.y, Sr.z);
                    return this
                }
            }, {
                key: "applyNormalMatrix",
                value: function(e) {
                    for (var t = 0, n = this.count; t < n; t++)
                        Sr.fromBufferAttribute(this, t),
                        Sr.applyNormalMatrix(e),
                        this.setXYZ(t, Sr.x, Sr.y, Sr.z);
                    return this
                }
            }, {
                key: "transformDirection",
                value: function(e) {
                    for (var t = 0, n = this.count; t < n; t++)
                        Sr.fromBufferAttribute(this, t),
                        Sr.transformDirection(e),
                        this.setXYZ(t, Sr.x, Sr.y, Sr.z);
                    return this
                }
            }, {
                key: "set",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return this.array.set(e, t),
                    this
                }
            }, {
                key: "getComponent",
                value: function(e, t) {
                    var n = this.array[e * this.itemSize + t];
                    return this.normalized && (n = mt(n, this.array)),
                    n
                }
            }, {
                key: "setComponent",
                value: function(e, t, n) {
                    return this.normalized && (n = vt(n, this.array)),
                    this.array[e * this.itemSize + t] = n,
                    this
                }
            }, {
                key: "getX",
                value: function(e) {
                    var t = this.array[e * this.itemSize];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "setX",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.array[e * this.itemSize] = t,
                    this
                }
            }, {
                key: "getY",
                value: function(e) {
                    var t = this.array[e * this.itemSize + 1];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "setY",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.array[e * this.itemSize + 1] = t,
                    this
                }
            }, {
                key: "getZ",
                value: function(e) {
                    var t = this.array[e * this.itemSize + 2];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "setZ",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.array[e * this.itemSize + 2] = t,
                    this
                }
            }, {
                key: "getW",
                value: function(e) {
                    var t = this.array[e * this.itemSize + 3];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "setW",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.array[e * this.itemSize + 3] = t,
                    this
                }
            }, {
                key: "setXY",
                value: function(e, t, n) {
                    return e *= this.itemSize,
                    this.normalized && (t = vt(t, this.array),
                    n = vt(n, this.array)),
                    this.array[e + 0] = t,
                    this.array[e + 1] = n,
                    this
                }
            }, {
                key: "setXYZ",
                value: function(e, t, n, r) {
                    return e *= this.itemSize,
                    this.normalized && (t = vt(t, this.array),
                    n = vt(n, this.array),
                    r = vt(r, this.array)),
                    this.array[e + 0] = t,
                    this.array[e + 1] = n,
                    this.array[e + 2] = r,
                    this
                }
            }, {
                key: "setXYZW",
                value: function(e, t, n, r, i) {
                    return e *= this.itemSize,
                    this.normalized && (t = vt(t, this.array),
                    n = vt(n, this.array),
                    r = vt(r, this.array),
                    i = vt(i, this.array)),
                    this.array[e + 0] = t,
                    this.array[e + 1] = n,
                    this.array[e + 2] = r,
                    this.array[e + 3] = i,
                    this
                }
            }, {
                key: "onUpload",
                value: function(e) {
                    return this.onUploadCallback = e,
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    return new this.constructor(this.array,this.itemSize).copy(this)
                }
            }, {
                key: "toJSON",
                value: function() {
                    var e = {
                        itemSize: this.itemSize,
                        type: this.array.constructor.name,
                        array: Array.from(this.array),
                        normalized: this.normalized
                    };
                    return "" !== this.name && (e.name = this.name),
                    this.usage !== nt && (e.usage = this.usage),
                    e
                }
            }]),
            e
        }()
          , Tr = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i) {
                return _(this, n),
                t.call(this, new Uint16Array(e), r, i)
            }
            return x(n)
        }(Er)
          , wr = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i) {
                return _(this, n),
                t.call(this, new Uint32Array(e), r, i)
            }
            return x(n)
        }(Er)
          , Ar = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i) {
                return _(this, n),
                t.call(this, new Float32Array(e), r, i)
            }
            return x(n)
        }(Er)
          , Rr = 0
          , Cr = new Tn
          , kr = new Jn
          , Pr = new Yt
          , Lr = new Qt
          , Ur = new Qt
          , Dr = new Yt
          , Nr = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this)).isBufferGeometry = !0,
                Object.defineProperty(s(e), "id", {
                    value: Rr++
                }),
                e.uuid = dt(),
                e.name = "",
                e.type = "BufferGeometry",
                e.index = null,
                e.indirect = null,
                e.attributes = {},
                e.morphAttributes = {},
                e.morphTargetsRelative = !1,
                e.groups = [],
                e.boundingBox = null,
                e.boundingSphere = null,
                e.drawRange = {
                    start: 0,
                    count: 1 / 0
                },
                e.userData = {},
                e
            }
            return x(n, [{
                key: "getIndex",
                value: function() {
                    return this.index
                }
            }, {
                key: "setIndex",
                value: function(e) {
                    return Array.isArray(e) ? this.index = new (bt(e) ? wr : Tr)(e,1) : this.index = e,
                    this
                }
            }, {
                key: "setIndirect",
                value: function(e) {
                    return this.indirect = e,
                    this
                }
            }, {
                key: "getIndirect",
                value: function() {
                    return this.indirect
                }
            }, {
                key: "getAttribute",
                value: function(e) {
                    return this.attributes[e]
                }
            }, {
                key: "setAttribute",
                value: function(e, t) {
                    return this.attributes[e] = t,
                    this
                }
            }, {
                key: "deleteAttribute",
                value: function(e) {
                    return delete this.attributes[e],
                    this
                }
            }, {
                key: "hasAttribute",
                value: function(e) {
                    return void 0 !== this.attributes[e]
                }
            }, {
                key: "addGroup",
                value: function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    this.groups.push({
                        start: e,
                        count: t,
                        materialIndex: n
                    })
                }
            }, {
                key: "clearGroups",
                value: function() {
                    this.groups = []
                }
            }, {
                key: "setDrawRange",
                value: function(e, t) {
                    this.drawRange.start = e,
                    this.drawRange.count = t
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    var t = this.attributes.position;
                    void 0 !== t && (t.applyMatrix4(e),
                    t.needsUpdate = !0);
                    var n = this.attributes.normal;
                    if (void 0 !== n) {
                        var r = (new yt).getNormalMatrix(e);
                        n.applyNormalMatrix(r),
                        n.needsUpdate = !0
                    }
                    var i = this.attributes.tangent;
                    return void 0 !== i && (i.transformDirection(e),
                    i.needsUpdate = !0),
                    null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this
                }
            }, {
                key: "applyQuaternion",
                value: function(e) {
                    return Cr.makeRotationFromQuaternion(e),
                    this.applyMatrix4(Cr),
                    this
                }
            }, {
                key: "rotateX",
                value: function(e) {
                    return Cr.makeRotationX(e),
                    this.applyMatrix4(Cr),
                    this
                }
            }, {
                key: "rotateY",
                value: function(e) {
                    return Cr.makeRotationY(e),
                    this.applyMatrix4(Cr),
                    this
                }
            }, {
                key: "rotateZ",
                value: function(e) {
                    return Cr.makeRotationZ(e),
                    this.applyMatrix4(Cr),
                    this
                }
            }, {
                key: "translate",
                value: function(e, t, n) {
                    return Cr.makeTranslation(e, t, n),
                    this.applyMatrix4(Cr),
                    this
                }
            }, {
                key: "scale",
                value: function(e, t, n) {
                    return Cr.makeScale(e, t, n),
                    this.applyMatrix4(Cr),
                    this
                }
            }, {
                key: "lookAt",
                value: function(e) {
                    return kr.lookAt(e),
                    kr.updateMatrix(),
                    this.applyMatrix4(kr.matrix),
                    this
                }
            }, {
                key: "center",
                value: function() {
                    return this.computeBoundingBox(),
                    this.boundingBox.getCenter(Pr).negate(),
                    this.translate(Pr.x, Pr.y, Pr.z),
                    this
                }
            }, {
                key: "setFromPoints",
                value: function(e) {
                    var t = this.getAttribute("position");
                    if (void 0 === t) {
                        for (var n = [], r = 0, i = e.length; r < i; r++) {
                            var a = e[r];
                            n.push(a.x, a.y, a.z || 0)
                        }
                        this.setAttribute("position", new Ar(n,3))
                    } else {
                        for (var o = Math.min(e.length, t.count), s = 0; s < o; s++) {
                            var l = e[s];
                            t.setXYZ(s, l.x, l.y, l.z || 0)
                        }
                        e.length > t.count && console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),
                        t.needsUpdate = !0
                    }
                    return this
                }
            }, {
                key: "computeBoundingBox",
                value: function() {
                    null === this.boundingBox && (this.boundingBox = new Qt);
                    var e = this.attributes.position
                      , t = this.morphAttributes.position;
                    if (e && e.isGLBufferAttribute)
                        return console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.", this),
                        void this.boundingBox.set(new Yt(-1 / 0,-1 / 0,-1 / 0), new Yt(1 / 0,1 / 0,1 / 0));
                    if (void 0 !== e) {
                        if (this.boundingBox.setFromBufferAttribute(e),
                        t)
                            for (var n = 0, r = t.length; n < r; n++) {
                                var i = t[n];
                                Lr.setFromBufferAttribute(i),
                                this.morphTargetsRelative ? (Dr.addVectors(this.boundingBox.min, Lr.min),
                                this.boundingBox.expandByPoint(Dr),
                                Dr.addVectors(this.boundingBox.max, Lr.max),
                                this.boundingBox.expandByPoint(Dr)) : (this.boundingBox.expandByPoint(Lr.min),
                                this.boundingBox.expandByPoint(Lr.max))
                            }
                    } else
                        this.boundingBox.makeEmpty();
                    (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                }
            }, {
                key: "computeBoundingSphere",
                value: function() {
                    null === this.boundingSphere && (this.boundingSphere = new vn);
                    var e = this.attributes.position
                      , t = this.morphAttributes.position;
                    if (e && e.isGLBufferAttribute)
                        return console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.", this),
                        void this.boundingSphere.set(new Yt, 1 / 0);
                    if (e) {
                        var n = this.boundingSphere.center;
                        if (Lr.setFromBufferAttribute(e),
                        t)
                            for (var r = 0, i = t.length; r < i; r++) {
                                var a = t[r];
                                Ur.setFromBufferAttribute(a),
                                this.morphTargetsRelative ? (Dr.addVectors(Lr.min, Ur.min),
                                Lr.expandByPoint(Dr),
                                Dr.addVectors(Lr.max, Ur.max),
                                Lr.expandByPoint(Dr)) : (Lr.expandByPoint(Ur.min),
                                Lr.expandByPoint(Ur.max))
                            }
                        Lr.getCenter(n);
                        for (var o = 0, s = 0, l = e.count; s < l; s++)
                            Dr.fromBufferAttribute(e, s),
                            o = Math.max(o, n.distanceToSquared(Dr));
                        if (t)
                            for (var u = 0, c = t.length; u < c; u++)
                                for (var d = t[u], f = this.morphTargetsRelative, h = 0, p = d.count; h < p; h++)
                                    Dr.fromBufferAttribute(d, h),
                                    f && (Pr.fromBufferAttribute(e, h),
                                    Dr.add(Pr)),
                                    o = Math.max(o, n.distanceToSquared(Dr));
                        this.boundingSphere.radius = Math.sqrt(o),
                        isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                    }
                }
            }, {
                key: "computeTangents",
                value: function() {
                    var e = this.index
                      , t = this.attributes;
                    if (null !== e && void 0 !== t.position && void 0 !== t.normal && void 0 !== t.uv) {
                        var n = t.position
                          , r = t.normal
                          , i = t.uv;
                        !1 === this.hasAttribute("tangent") && this.setAttribute("tangent", new Er(new Float32Array(4 * n.count),4));
                        for (var a = this.getAttribute("tangent"), o = [], s = [], l = 0; l < n.count; l++)
                            o[l] = new Yt,
                            s[l] = new Yt;
                        var u = new Yt
                          , c = new Yt
                          , d = new Yt
                          , f = new _t
                          , h = new _t
                          , p = new _t
                          , m = new Yt
                          , v = new Yt
                          , g = this.groups;
                        0 === g.length && (g = [{
                            start: 0,
                            count: e.count
                        }]);
                        for (var _ = 0, y = g.length; _ < y; ++_)
                            for (var x = g[_], b = x.start, S = b, M = b + x.count; S < M; S += 3)
                                D(e.getX(S + 0), e.getX(S + 1), e.getX(S + 2));
                        for (var E = new Yt, T = new Yt, w = new Yt, A = new Yt, R = 0, C = g.length; R < C; ++R)
                            for (var k = g[R], P = k.start, L = P, U = P + k.count; L < U; L += 3)
                                N(e.getX(L + 0)),
                                N(e.getX(L + 1)),
                                N(e.getX(L + 2))
                    } else
                        console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");
                    function D(e, t, r) {
                        u.fromBufferAttribute(n, e),
                        c.fromBufferAttribute(n, t),
                        d.fromBufferAttribute(n, r),
                        f.fromBufferAttribute(i, e),
                        h.fromBufferAttribute(i, t),
                        p.fromBufferAttribute(i, r),
                        c.sub(u),
                        d.sub(u),
                        h.sub(f),
                        p.sub(f);
                        var a = 1 / (h.x * p.y - p.x * h.y);
                        isFinite(a) && (m.copy(c).multiplyScalar(p.y).addScaledVector(d, -h.y).multiplyScalar(a),
                        v.copy(d).multiplyScalar(h.x).addScaledVector(c, -p.x).multiplyScalar(a),
                        o[e].add(m),
                        o[t].add(m),
                        o[r].add(m),
                        s[e].add(v),
                        s[t].add(v),
                        s[r].add(v))
                    }
                    function N(e) {
                        w.fromBufferAttribute(r, e),
                        A.copy(w);
                        var t = o[e];
                        E.copy(t),
                        E.sub(w.multiplyScalar(w.dot(t))).normalize(),
                        T.crossVectors(A, t);
                        var n = T.dot(s[e]) < 0 ? -1 : 1;
                        a.setXYZW(e, E.x, E.y, E.z, n)
                    }
                }
            }, {
                key: "computeVertexNormals",
                value: function() {
                    var e = this.index
                      , t = this.getAttribute("position");
                    if (void 0 !== t) {
                        var n = this.getAttribute("normal");
                        if (void 0 === n)
                            n = new Er(new Float32Array(3 * t.count),3),
                            this.setAttribute("normal", n);
                        else
                            for (var r = 0, i = n.count; r < i; r++)
                                n.setXYZ(r, 0, 0, 0);
                        var a = new Yt
                          , o = new Yt
                          , s = new Yt
                          , l = new Yt
                          , u = new Yt
                          , c = new Yt
                          , d = new Yt
                          , f = new Yt;
                        if (e)
                            for (var h = 0, p = e.count; h < p; h += 3) {
                                var m = e.getX(h + 0)
                                  , v = e.getX(h + 1)
                                  , g = e.getX(h + 2);
                                a.fromBufferAttribute(t, m),
                                o.fromBufferAttribute(t, v),
                                s.fromBufferAttribute(t, g),
                                d.subVectors(s, o),
                                f.subVectors(a, o),
                                d.cross(f),
                                l.fromBufferAttribute(n, m),
                                u.fromBufferAttribute(n, v),
                                c.fromBufferAttribute(n, g),
                                l.add(d),
                                u.add(d),
                                c.add(d),
                                n.setXYZ(m, l.x, l.y, l.z),
                                n.setXYZ(v, u.x, u.y, u.z),
                                n.setXYZ(g, c.x, c.y, c.z)
                            }
                        else
                            for (var _ = 0, y = t.count; _ < y; _ += 3)
                                a.fromBufferAttribute(t, _ + 0),
                                o.fromBufferAttribute(t, _ + 1),
                                s.fromBufferAttribute(t, _ + 2),
                                d.subVectors(s, o),
                                f.subVectors(a, o),
                                d.cross(f),
                                n.setXYZ(_ + 0, d.x, d.y, d.z),
                                n.setXYZ(_ + 1, d.x, d.y, d.z),
                                n.setXYZ(_ + 2, d.x, d.y, d.z);
                        this.normalizeNormals(),
                        n.needsUpdate = !0
                    }
                }
            }, {
                key: "normalizeNormals",
                value: function() {
                    for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++)
                        Dr.fromBufferAttribute(e, t),
                        Dr.normalize(),
                        e.setXYZ(t, Dr.x, Dr.y, Dr.z)
                }
            }, {
                key: "toNonIndexed",
                value: function() {
                    function e(e, t) {
                        for (var n = e.array, r = e.itemSize, i = e.normalized, a = new n.constructor(t.length * r), o = 0, s = 0, l = 0, u = t.length; l < u; l++) {
                            o = e.isInterleavedBufferAttribute ? t[l] * e.data.stride + e.offset : t[l] * r;
                            for (var c = 0; c < r; c++)
                                a[s++] = n[o++]
                        }
                        return new Er(a,r,i)
                    }
                    if (null === this.index)
                        return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),
                        this;
                    var t = new n
                      , r = this.index.array
                      , i = this.attributes;
                    for (var a in i) {
                        var o = e(i[a], r);
                        t.setAttribute(a, o)
                    }
                    var s = this.morphAttributes;
                    for (var l in s) {
                        for (var u = [], c = s[l], d = 0, f = c.length; d < f; d++) {
                            var h = e(c[d], r);
                            u.push(h)
                        }
                        t.morphAttributes[l] = u
                    }
                    t.morphTargetsRelative = this.morphTargetsRelative;
                    for (var p = this.groups, m = 0, v = p.length; m < v; m++) {
                        var g = p[m];
                        t.addGroup(g.start, g.count, g.materialIndex)
                    }
                    return t
                }
            }, {
                key: "toJSON",
                value: function() {
                    var e = {
                        metadata: {
                            version: 4.6,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (e.uuid = this.uuid,
                    e.type = this.type,
                    "" !== this.name && (e.name = this.name),
                    Object.keys(this.userData).length > 0 && (e.userData = this.userData),
                    void 0 !== this.parameters) {
                        var t = this.parameters;
                        for (var n in t)
                            void 0 !== t[n] && (e[n] = t[n]);
                        return e
                    }
                    e.data = {
                        attributes: {}
                    };
                    var r = this.index;
                    null !== r && (e.data.index = {
                        type: r.array.constructor.name,
                        array: Array.prototype.slice.call(r.array)
                    });
                    var i = this.attributes;
                    for (var a in i) {
                        var o = i[a];
                        e.data.attributes[a] = o.toJSON(e.data)
                    }
                    var s = {}
                      , l = !1;
                    for (var u in this.morphAttributes) {
                        for (var c = this.morphAttributes[u], d = [], f = 0, h = c.length; f < h; f++) {
                            var p = c[f];
                            d.push(p.toJSON(e.data))
                        }
                        d.length > 0 && (s[u] = d,
                        l = !0)
                    }
                    l && (e.data.morphAttributes = s,
                    e.data.morphTargetsRelative = this.morphTargetsRelative);
                    var m = this.groups;
                    m.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(m)));
                    var v = this.boundingSphere;
                    return null !== v && (e.data.boundingSphere = {
                        center: v.center.toArray(),
                        radius: v.radius
                    }),
                    e
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }, {
                key: "copy",
                value: function(e) {
                    this.index = null,
                    this.attributes = {},
                    this.morphAttributes = {},
                    this.groups = [],
                    this.boundingBox = null,
                    this.boundingSphere = null;
                    var t = {};
                    this.name = e.name;
                    var n = e.index;
                    null !== n && this.setIndex(n.clone(t));
                    var r = e.attributes;
                    for (var i in r) {
                        var a = r[i];
                        this.setAttribute(i, a.clone(t))
                    }
                    var o = e.morphAttributes;
                    for (var s in o) {
                        for (var l = [], u = o[s], c = 0, d = u.length; c < d; c++)
                            l.push(u[c].clone(t));
                        this.morphAttributes[s] = l
                    }
                    this.morphTargetsRelative = e.morphTargetsRelative;
                    for (var f = e.groups, h = 0, p = f.length; h < p; h++) {
                        var m = f[h];
                        this.addGroup(m.start, m.count, m.materialIndex)
                    }
                    var v = e.boundingBox;
                    null !== v && (this.boundingBox = v.clone());
                    var g = e.boundingSphere;
                    return null !== g && (this.boundingSphere = g.clone()),
                    this.drawRange.start = e.drawRange.start,
                    this.drawRange.count = e.drawRange.count,
                    this.userData = e.userData,
                    this
                }
            }, {
                key: "dispose",
                value: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            }]),
            n
        }(ot)
          , Ir = new Tn
          , Or = new En
          , Fr = new vn
          , zr = new Yt
          , Br = new Yt
          , Vr = new Yt
          , Hr = new Yt
          , Gr = new Yt
          , Wr = new Yt
          , Xr = new Yt
          , jr = new Yt
          , qr = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Nr, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new br;
                return _(this, n),
                (e = t.call(this)).isMesh = !0,
                e.type = "Mesh",
                e.geometry = r,
                e.material = i,
                e.updateMorphTargets(),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
                    void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)),
                    this.material = Array.isArray(e.material) ? e.material.slice() : e.material,
                    this.geometry = e.geometry,
                    this
                }
            }, {
                key: "updateMorphTargets",
                value: function() {
                    var e = this.geometry.morphAttributes
                      , t = Object.keys(e);
                    if (t.length > 0) {
                        var n = e[t[0]];
                        if (void 0 !== n) {
                            this.morphTargetInfluences = [],
                            this.morphTargetDictionary = {};
                            for (var r = 0, i = n.length; r < i; r++) {
                                var a = n[r].name || String(r);
                                this.morphTargetInfluences.push(0),
                                this.morphTargetDictionary[a] = r
                            }
                        }
                    }
                }
            }, {
                key: "getVertexPosition",
                value: function(e, t) {
                    var n = this.geometry
                      , r = n.attributes.position
                      , i = n.morphAttributes.position
                      , a = n.morphTargetsRelative;
                    t.fromBufferAttribute(r, e);
                    var o = this.morphTargetInfluences;
                    if (i && o) {
                        Wr.set(0, 0, 0);
                        for (var s = 0, l = i.length; s < l; s++) {
                            var u = o[s]
                              , c = i[s];
                            0 !== u && (Gr.fromBufferAttribute(c, e),
                            a ? Wr.addScaledVector(Gr, u) : Wr.addScaledVector(Gr.sub(t), u))
                        }
                        t.add(Wr)
                    }
                    return t
                }
            }, {
                key: "raycast",
                value: function(e, t) {
                    var n = this.geometry
                      , r = this.material
                      , i = this.matrixWorld;
                    if (void 0 !== r) {
                        if (null === n.boundingSphere && n.computeBoundingSphere(),
                        Fr.copy(n.boundingSphere),
                        Fr.applyMatrix4(i),
                        Or.copy(e.ray).recast(e.near),
                        !1 === Fr.containsPoint(Or.origin)) {
                            if (null === Or.intersectSphere(Fr, zr))
                                return;
                            if (Or.origin.distanceToSquared(zr) > Math.pow(e.far - e.near, 2))
                                return
                        }
                        Ir.copy(i).invert(),
                        Or.copy(e.ray).applyMatrix4(Ir),
                        null !== n.boundingBox && !1 === Or.intersectsBox(n.boundingBox) || this._computeIntersections(e, t, Or)
                    }
                }
            }, {
                key: "_computeIntersections",
                value: function(e, t, n) {
                    var r, i = this.geometry, a = this.material, o = i.index, s = i.attributes.position, l = i.attributes.uv, u = i.attributes.uv1, c = i.attributes.normal, d = i.groups, f = i.drawRange;
                    if (null !== o)
                        if (Array.isArray(a))
                            for (var h = 0, p = d.length; h < p; h++)
                                for (var m = d[h], v = a[m.materialIndex], g = Math.max(m.start, f.start), _ = Math.min(o.count, Math.min(m.start + m.count, f.start + f.count)); g < _; g += 3) {
                                    (r = Yr(this, v, e, n, l, u, c, o.getX(g), o.getX(g + 1), o.getX(g + 2))) && (r.faceIndex = Math.floor(g / 3),
                                    r.face.materialIndex = m.materialIndex,
                                    t.push(r))
                                }
                        else
                            for (var y = Math.max(0, f.start), x = Math.min(o.count, f.start + f.count); y < x; y += 3) {
                                (r = Yr(this, a, e, n, l, u, c, o.getX(y), o.getX(y + 1), o.getX(y + 2))) && (r.faceIndex = Math.floor(y / 3),
                                t.push(r))
                            }
                    else if (void 0 !== s)
                        if (Array.isArray(a))
                            for (var b = 0, S = d.length; b < S; b++)
                                for (var M = d[b], E = a[M.materialIndex], T = Math.max(M.start, f.start), w = Math.min(s.count, Math.min(M.start + M.count, f.start + f.count)); T < w; T += 3) {
                                    (r = Yr(this, E, e, n, l, u, c, T, T + 1, T + 2)) && (r.faceIndex = Math.floor(T / 3),
                                    r.face.materialIndex = M.materialIndex,
                                    t.push(r))
                                }
                        else
                            for (var A = Math.max(0, f.start), R = Math.min(s.count, f.start + f.count); A < R; A += 3) {
                                (r = Yr(this, a, e, n, l, u, c, A, A + 1, A + 2)) && (r.faceIndex = Math.floor(A / 3),
                                t.push(r))
                            }
                }
            }]),
            n
        }(Jn);
        function Yr(e, t, n, r, i, a, o, s, l, u) {
            e.getVertexPosition(s, Br),
            e.getVertexPosition(l, Vr),
            e.getVertexPosition(u, Hr);
            var c = function(e, t, n, r, i, a, o, s) {
                if (null === (1 === t.side ? r.intersectTriangle(o, a, i, !0, s) : r.intersectTriangle(i, a, o, 0 === t.side, s)))
                    return null;
                jr.copy(s),
                jr.applyMatrix4(e.matrixWorld);
                var l = n.ray.origin.distanceTo(jr);
                return l < n.near || l > n.far ? null : {
                    distance: l,
                    point: jr.clone(),
                    object: e
                }
            }(e, t, n, r, Br, Vr, Hr, Xr);
            if (c) {
                var d = new Yt;
                fr.getBarycoord(Xr, Br, Vr, Hr, d),
                i && (c.uv = fr.getInterpolatedAttribute(i, s, l, u, d, new _t)),
                a && (c.uv1 = fr.getInterpolatedAttribute(a, s, l, u, d, new _t)),
                o && (c.normal = fr.getInterpolatedAttribute(o, s, l, u, d, new Yt),
                c.normal.dot(r.direction) > 0 && c.normal.multiplyScalar(-1));
                var f = {
                    a: s,
                    b: l,
                    c: u,
                    normal: new Yt,
                    materialIndex: 0
                };
                fr.getNormal(Br, Vr, Hr, f.normal),
                c.face = f,
                c.barycoord = d
            }
            return c
        }
        var Kr = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1, l = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1;
                _(this, n),
                (e = t.call(this)).type = "BoxGeometry",
                e.parameters = {
                    width: r,
                    height: i,
                    depth: a,
                    widthSegments: o,
                    heightSegments: l,
                    depthSegments: u
                };
                var c = s(e);
                o = Math.floor(o),
                l = Math.floor(l),
                u = Math.floor(u);
                var d = []
                  , f = []
                  , h = []
                  , p = []
                  , m = 0
                  , v = 0;
                function g(e, t, n, r, i, a, o, s, l, u, g) {
                    for (var _ = a / l, y = o / u, x = a / 2, b = o / 2, S = s / 2, M = l + 1, E = u + 1, T = 0, w = 0, A = new Yt, R = 0; R < E; R++)
                        for (var C = R * y - b, k = 0; k < M; k++) {
                            var P = k * _ - x;
                            A[e] = P * r,
                            A[t] = C * i,
                            A[n] = S,
                            f.push(A.x, A.y, A.z),
                            A[e] = 0,
                            A[t] = 0,
                            A[n] = s > 0 ? 1 : -1,
                            h.push(A.x, A.y, A.z),
                            p.push(k / l),
                            p.push(1 - R / u),
                            T += 1
                        }
                    for (var L = 0; L < u; L++)
                        for (var U = 0; U < l; U++) {
                            var D = m + U + M * L
                              , N = m + U + M * (L + 1)
                              , I = m + (U + 1) + M * (L + 1)
                              , O = m + (U + 1) + M * L;
                            d.push(D, N, O),
                            d.push(N, I, O),
                            w += 6
                        }
                    c.addGroup(v, w, g),
                    v += w,
                    m += T
                }
                return g("z", "y", "x", -1, -1, a, i, r, u, l, 0),
                g("z", "y", "x", 1, -1, a, i, -r, u, l, 1),
                g("x", "z", "y", 1, 1, r, a, i, o, u, 2),
                g("x", "z", "y", 1, -1, r, a, -i, o, u, 3),
                g("x", "y", "z", 1, -1, r, i, a, o, l, 4),
                g("x", "y", "z", -1, -1, r, i, -a, o, l, 5),
                e.setIndex(d),
                e.setAttribute("position", new Ar(f,3)),
                e.setAttribute("normal", new Ar(h,3)),
                e.setAttribute("uv", new Ar(p,2)),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.parameters = Object.assign({}, e.parameters),
                    this
                }
            }], [{
                key: "fromJSON",
                value: function(e) {
                    return new n(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)
                }
            }]),
            n
        }(Nr);
        function Zr(e) {
            var t = {};
            for (var n in e)
                for (var r in t[n] = {},
                e[n]) {
                    var i = e[n][r];
                    i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? i.isRenderTargetTexture ? (console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),
                    t[n][r] = null) : t[n][r] = i.clone() : Array.isArray(i) ? t[n][r] = i.slice() : t[n][r] = i
                }
            return t
        }
        function Qr(e) {
            for (var t = {}, n = 0; n < e.length; n++) {
                var r = Zr(e[n]);
                for (var i in r)
                    t[i] = r[i]
            }
            return t
        }
        function Jr(e) {
            var t = e.getRenderTarget();
            return null === t ? e.outputColorSpace : !0 === t.isXRRenderTarget ? t.texture.colorSpace : Ut.workingColorSpace
        }
        var $r, ei = {
            clone: Zr,
            merge: Qr
        }, ti = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isShaderMaterial = !0,
                r.type = "ShaderMaterial",
                r.defines = {},
                r.uniforms = {},
                r.uniformsGroups = [],
                r.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
                r.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
                r.linewidth = 1,
                r.wireframe = !1,
                r.wireframeLinewidth = 1,
                r.fog = !1,
                r.lights = !1,
                r.clipping = !1,
                r.forceSinglePass = !0,
                r.extensions = {
                    clipCullDistance: !1,
                    multiDraw: !1
                },
                r.defaultAttributeValues = {
                    color: [1, 1, 1],
                    uv: [0, 0],
                    uv1: [0, 0]
                },
                r.index0AttributeName = void 0,
                r.uniformsNeedUpdate = !1,
                r.glslVersion = null,
                void 0 !== e && r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.fragmentShader = e.fragmentShader,
                    this.vertexShader = e.vertexShader,
                    this.uniforms = Zr(e.uniforms),
                    this.uniformsGroups = function(e) {
                        for (var t = [], n = 0; n < e.length; n++)
                            t.push(e[n].clone());
                        return t
                    }(e.uniformsGroups),
                    this.defines = Object.assign({}, e.defines),
                    this.wireframe = e.wireframe,
                    this.wireframeLinewidth = e.wireframeLinewidth,
                    this.fog = e.fog,
                    this.lights = e.lights,
                    this.clipping = e.clipping,
                    this.extensions = Object.assign({}, e.extensions),
                    this.glslVersion = e.glslVersion,
                    this
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = T(c(n.prototype), "toJSON", this).call(this, e);
                    for (var r in t.glslVersion = this.glslVersion,
                    t.uniforms = {},
                    this.uniforms) {
                        var i = this.uniforms[r].value;
                        i && i.isTexture ? t.uniforms[r] = {
                            type: "t",
                            value: i.toJSON(e).uuid
                        } : i && i.isColor ? t.uniforms[r] = {
                            type: "c",
                            value: i.getHex()
                        } : i && i.isVector2 ? t.uniforms[r] = {
                            type: "v2",
                            value: i.toArray()
                        } : i && i.isVector3 ? t.uniforms[r] = {
                            type: "v3",
                            value: i.toArray()
                        } : i && i.isVector4 ? t.uniforms[r] = {
                            type: "v4",
                            value: i.toArray()
                        } : i && i.isMatrix3 ? t.uniforms[r] = {
                            type: "m3",
                            value: i.toArray()
                        } : i && i.isMatrix4 ? t.uniforms[r] = {
                            type: "m4",
                            value: i.toArray()
                        } : t.uniforms[r] = {
                            value: i
                        }
                    }
                    Object.keys(this.defines).length > 0 && (t.defines = this.defines),
                    t.vertexShader = this.vertexShader,
                    t.fragmentShader = this.fragmentShader,
                    t.lights = this.lights,
                    t.clipping = this.clipping;
                    var a = {};
                    for (var o in this.extensions)
                        !0 === this.extensions[o] && (a[o] = !0);
                    return Object.keys(a).length > 0 && (t.extensions = a),
                    t
                }
            }]),
            n
        }(xr), ni = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this)).isCamera = !0,
                e.type = "Camera",
                e.matrixWorldInverse = new Tn,
                e.projectionMatrix = new Tn,
                e.projectionMatrixInverse = new Tn,
                e.coordinateSystem = it,
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    this.matrixWorldInverse.copy(e.matrixWorldInverse),
                    this.projectionMatrix.copy(e.projectionMatrix),
                    this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
                    this.coordinateSystem = e.coordinateSystem,
                    this
                }
            }, {
                key: "getWorldDirection",
                value: function(e) {
                    return T(c(n.prototype), "getWorldDirection", this).call(this, e).negate()
                }
            }, {
                key: "updateMatrixWorld",
                value: function(e) {
                    T(c(n.prototype), "updateMatrixWorld", this).call(this, e),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert()
                }
            }, {
                key: "updateWorldMatrix",
                value: function(e, t) {
                    T(c(n.prototype), "updateWorldMatrix", this).call(this, e, t),
                    this.matrixWorldInverse.copy(this.matrixWorld).invert()
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }]),
            n
        }(Jn), ri = new Yt, ii = new _t, ai = new _t, oi = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 50, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 2e3;
                return _(this, n),
                (e = t.call(this)).isPerspectiveCamera = !0,
                e.type = "PerspectiveCamera",
                e.fov = r,
                e.zoom = 1,
                e.near = a,
                e.far = o,
                e.focus = 10,
                e.aspect = i,
                e.view = null,
                e.filmGauge = 35,
                e.filmOffset = 0,
                e.updateProjectionMatrix(),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    this.fov = e.fov,
                    this.zoom = e.zoom,
                    this.near = e.near,
                    this.far = e.far,
                    this.focus = e.focus,
                    this.aspect = e.aspect,
                    this.view = null === e.view ? null : Object.assign({}, e.view),
                    this.filmGauge = e.filmGauge,
                    this.filmOffset = e.filmOffset,
                    this
                }
            }, {
                key: "setFocalLength",
                value: function(e) {
                    var t = .5 * this.getFilmHeight() / e;
                    this.fov = 2 * ct * Math.atan(t),
                    this.updateProjectionMatrix()
                }
            }, {
                key: "getFocalLength",
                value: function() {
                    var e = Math.tan(.5 * ut * this.fov);
                    return .5 * this.getFilmHeight() / e
                }
            }, {
                key: "getEffectiveFOV",
                value: function() {
                    return 2 * ct * Math.atan(Math.tan(.5 * ut * this.fov) / this.zoom)
                }
            }, {
                key: "getFilmWidth",
                value: function() {
                    return this.filmGauge * Math.min(this.aspect, 1)
                }
            }, {
                key: "getFilmHeight",
                value: function() {
                    return this.filmGauge / Math.max(this.aspect, 1)
                }
            }, {
                key: "getViewBounds",
                value: function(e, t, n) {
                    ri.set(-1, -1, .5).applyMatrix4(this.projectionMatrixInverse),
                    t.set(ri.x, ri.y).multiplyScalar(-e / ri.z),
                    ri.set(1, 1, .5).applyMatrix4(this.projectionMatrixInverse),
                    n.set(ri.x, ri.y).multiplyScalar(-e / ri.z)
                }
            }, {
                key: "getViewSize",
                value: function(e, t) {
                    return this.getViewBounds(e, ii, ai),
                    t.subVectors(ai, ii)
                }
            }, {
                key: "setViewOffset",
                value: function(e, t, n, r, i, a) {
                    this.aspect = e / t,
                    null === this.view && (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1
                    }),
                    this.view.enabled = !0,
                    this.view.fullWidth = e,
                    this.view.fullHeight = t,
                    this.view.offsetX = n,
                    this.view.offsetY = r,
                    this.view.width = i,
                    this.view.height = a,
                    this.updateProjectionMatrix()
                }
            }, {
                key: "clearViewOffset",
                value: function() {
                    null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix()
                }
            }, {
                key: "updateProjectionMatrix",
                value: function() {
                    var e = this.near
                      , t = e * Math.tan(.5 * ut * this.fov) / this.zoom
                      , n = 2 * t
                      , r = this.aspect * n
                      , i = -.5 * r
                      , a = this.view;
                    if (null !== this.view && this.view.enabled) {
                        var o = a.fullWidth
                          , s = a.fullHeight;
                        i += a.offsetX * r / o,
                        t -= a.offsetY * n / s,
                        r *= a.width / o,
                        n *= a.height / s
                    }
                    var l = this.filmOffset;
                    0 !== l && (i += e * l / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(i, i + r, t, t - n, e, this.far, this.coordinateSystem),
                    this.projectionMatrixInverse.copy(this.projectionMatrix).invert()
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = T(c(n.prototype), "toJSON", this).call(this, e);
                    return t.object.fov = this.fov,
                    t.object.zoom = this.zoom,
                    t.object.near = this.near,
                    t.object.far = this.far,
                    t.object.focus = this.focus,
                    t.object.aspect = this.aspect,
                    null !== this.view && (t.object.view = Object.assign({}, this.view)),
                    t.object.filmGauge = this.filmGauge,
                    t.object.filmOffset = this.filmOffset,
                    t
                }
            }]),
            n
        }(ni), si = -90, li = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i) {
                var a;
                _(this, n),
                (a = t.call(this)).type = "CubeCamera",
                a.renderTarget = i,
                a.coordinateSystem = null,
                a.activeMipmapLevel = 0;
                var o = new oi(si,1,e,r);
                o.layers = a.layers,
                a.add(o);
                var s = new oi(si,1,e,r);
                s.layers = a.layers,
                a.add(s);
                var l = new oi(si,1,e,r);
                l.layers = a.layers,
                a.add(l);
                var u = new oi(si,1,e,r);
                u.layers = a.layers,
                a.add(u);
                var c = new oi(si,1,e,r);
                c.layers = a.layers,
                a.add(c);
                var d = new oi(si,1,e,r);
                return d.layers = a.layers,
                a.add(d),
                a
            }
            return x(n, [{
                key: "updateCoordinateSystem",
                value: function() {
                    var e, t = this.coordinateSystem, n = this.children.concat(), r = M(n, 6), i = r[0], a = r[1], o = r[2], s = r[3], l = r[4], u = r[5], c = g(n);
                    try {
                        for (c.s(); !(e = c.n()).done; ) {
                            var d = e.value;
                            this.remove(d)
                        }
                    } catch (m) {
                        c.e(m)
                    } finally {
                        c.f()
                    }
                    if (t === it)
                        i.up.set(0, 1, 0),
                        i.lookAt(1, 0, 0),
                        a.up.set(0, 1, 0),
                        a.lookAt(-1, 0, 0),
                        o.up.set(0, 0, -1),
                        o.lookAt(0, 1, 0),
                        s.up.set(0, 0, 1),
                        s.lookAt(0, -1, 0),
                        l.up.set(0, 1, 0),
                        l.lookAt(0, 0, 1),
                        u.up.set(0, 1, 0),
                        u.lookAt(0, 0, -1);
                    else {
                        if (t !== at)
                            throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: " + t);
                        i.up.set(0, -1, 0),
                        i.lookAt(-1, 0, 0),
                        a.up.set(0, -1, 0),
                        a.lookAt(1, 0, 0),
                        o.up.set(0, 0, 1),
                        o.lookAt(0, 1, 0),
                        s.up.set(0, 0, -1),
                        s.lookAt(0, -1, 0),
                        l.up.set(0, -1, 0),
                        l.lookAt(0, 0, 1),
                        u.up.set(0, -1, 0),
                        u.lookAt(0, 0, -1)
                    }
                    var f, h = g(n);
                    try {
                        for (h.s(); !(f = h.n()).done; ) {
                            var p = f.value;
                            this.add(p),
                            p.updateMatrixWorld()
                        }
                    } catch (m) {
                        h.e(m)
                    } finally {
                        h.f()
                    }
                }
            }, {
                key: "update",
                value: function(e, t) {
                    null === this.parent && this.updateMatrixWorld();
                    var n = this.renderTarget
                      , r = this.activeMipmapLevel;
                    this.coordinateSystem !== e.coordinateSystem && (this.coordinateSystem = e.coordinateSystem,
                    this.updateCoordinateSystem());
                    var i = M(this.children, 6)
                      , a = i[0]
                      , o = i[1]
                      , s = i[2]
                      , l = i[3]
                      , u = i[4]
                      , c = i[5]
                      , d = e.getRenderTarget()
                      , f = e.getActiveCubeFace()
                      , h = e.getActiveMipmapLevel()
                      , p = e.xr.enabled;
                    e.xr.enabled = !1;
                    var m = n.texture.generateMipmaps;
                    n.texture.generateMipmaps = !1,
                    e.setRenderTarget(n, 0, r),
                    e.render(t, a),
                    e.setRenderTarget(n, 1, r),
                    e.render(t, o),
                    e.setRenderTarget(n, 2, r),
                    e.render(t, s),
                    e.setRenderTarget(n, 3, r),
                    e.render(t, l),
                    e.setRenderTarget(n, 4, r),
                    e.render(t, u),
                    n.texture.generateMipmaps = m,
                    e.setRenderTarget(n, 5, r),
                    e.render(t, c),
                    e.setRenderTarget(d, f, h),
                    e.xr.enabled = p,
                    n.texture.needsPMREMUpdate = !0
                }
            }]),
            n
        }(Jn), ui = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a, o, s, l, u, c, d) {
                var f;
                return _(this, n),
                e = void 0 !== e ? e : [],
                r = void 0 !== r ? r : C,
                (f = t.call(this, e, r, i, a, o, s, l, u, c, d)).isCubeTexture = !0,
                f.flipY = !1,
                f
            }
            return x(n, [{
                key: "images",
                get: function() {
                    return this.image
                },
                set: function(e) {
                    this.image = e
                }
            }]),
            n
        }(Vt), ci = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                _(this, n),
                (e = t.call(this, r, r, i)).isWebGLCubeRenderTarget = !0;
                var a = {
                    width: r,
                    height: r,
                    depth: 1
                }
                  , o = [a, a, a, a, a, a];
                return e.texture = new ui(o,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),
                e.texture.isRenderTargetTexture = !0,
                e.texture.generateMipmaps = void 0 !== i.generateMipmaps && i.generateMipmaps,
                e.texture.minFilter = void 0 !== i.minFilter ? i.minFilter : z,
                e
            }
            return x(n, [{
                key: "fromEquirectangularTexture",
                value: function(e, t) {
                    this.texture.type = t.type,
                    this.texture.colorSpace = t.colorSpace,
                    this.texture.generateMipmaps = t.generateMipmaps,
                    this.texture.minFilter = t.minFilter,
                    this.texture.magFilter = t.magFilter;
                    var n = {
                        tEquirect: {
                            value: null
                        }
                    }
                      , r = "\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t"
                      , i = "\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t"
                      , a = new Kr(5,5,5)
                      , o = new ti({
                        name: "CubemapFromEquirect",
                        uniforms: Zr(n),
                        vertexShader: r,
                        fragmentShader: i,
                        side: 1,
                        blending: 0
                    });
                    o.uniforms.tEquirect.value = t;
                    var s = new qr(a,o)
                      , l = t.minFilter;
                    return t.minFilter === V && (t.minFilter = z),
                    new li(1,10,this).update(e, s),
                    t.minFilter = l,
                    s.geometry.dispose(),
                    s.material.dispose(),
                    this
                }
            }, {
                key: "clear",
                value: function(e, t, n, r) {
                    for (var i = e.getRenderTarget(), a = 0; a < 6; a++)
                        e.setRenderTarget(this, a),
                        e.clear(t, n, r);
                    e.setRenderTarget(i)
                }
            }]),
            n
        }(Wt), di = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this)).isScene = !0,
                e.type = "Scene",
                e.background = null,
                e.environment = null,
                e.fog = null,
                e.backgroundBlurriness = 0,
                e.backgroundIntensity = 1,
                e.backgroundRotation = new Nn,
                e.environmentIntensity = 1,
                e.environmentRotation = new Nn,
                e.overrideMaterial = null,
                "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
                    detail: s(e)
                })),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    null !== e.background && (this.background = e.background.clone()),
                    null !== e.environment && (this.environment = e.environment.clone()),
                    null !== e.fog && (this.fog = e.fog.clone()),
                    this.backgroundBlurriness = e.backgroundBlurriness,
                    this.backgroundIntensity = e.backgroundIntensity,
                    this.backgroundRotation.copy(e.backgroundRotation),
                    this.environmentIntensity = e.environmentIntensity,
                    this.environmentRotation.copy(e.environmentRotation),
                    null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()),
                    this.matrixAutoUpdate = e.matrixAutoUpdate,
                    this
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = T(c(n.prototype), "toJSON", this).call(this, e);
                    return null !== this.fog && (t.object.fog = this.fog.toJSON()),
                    this.backgroundBlurriness > 0 && (t.object.backgroundBlurriness = this.backgroundBlurriness),
                    1 !== this.backgroundIntensity && (t.object.backgroundIntensity = this.backgroundIntensity),
                    t.object.backgroundRotation = this.backgroundRotation.toArray(),
                    1 !== this.environmentIntensity && (t.object.environmentIntensity = this.environmentIntensity),
                    t.object.environmentRotation = this.environmentRotation.toArray(),
                    t
                }
            }]),
            n
        }(Jn), fi = function() {
            function e(t, n) {
                _(this, e),
                this.isInterleavedBuffer = !0,
                this.array = t,
                this.stride = n,
                this.count = void 0 !== t ? t.length / n : 0,
                this.usage = nt,
                this.updateRanges = [],
                this.version = 0,
                this.uuid = dt()
            }
            return x(e, [{
                key: "onUploadCallback",
                value: function() {}
            }, {
                key: "needsUpdate",
                set: function(e) {
                    !0 === e && this.version++
                }
            }, {
                key: "setUsage",
                value: function(e) {
                    return this.usage = e,
                    this
                }
            }, {
                key: "addUpdateRange",
                value: function(e, t) {
                    this.updateRanges.push({
                        start: e,
                        count: t
                    })
                }
            }, {
                key: "clearUpdateRanges",
                value: function() {
                    this.updateRanges.length = 0
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.array = new e.array.constructor(e.array),
                    this.count = e.count,
                    this.stride = e.stride,
                    this.usage = e.usage,
                    this
                }
            }, {
                key: "copyAt",
                value: function(e, t, n) {
                    e *= this.stride,
                    n *= t.stride;
                    for (var r = 0, i = this.stride; r < i; r++)
                        this.array[e + r] = t.array[n + r];
                    return this
                }
            }, {
                key: "set",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    return this.array.set(e, t),
                    this
                }
            }, {
                key: "clone",
                value: function(e) {
                    void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = dt()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
                    var t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid])
                      , n = new this.constructor(t,this.stride);
                    return n.setUsage(this.usage),
                    n
                }
            }, {
                key: "onUpload",
                value: function(e) {
                    return this.onUploadCallback = e,
                    this
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    return void 0 === e.arrayBuffers && (e.arrayBuffers = {}),
                    void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = dt()),
                    void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = Array.from(new Uint32Array(this.array.buffer))),
                    {
                        uuid: this.uuid,
                        buffer: this.array.buffer._uuid,
                        type: this.array.constructor.name,
                        stride: this.stride
                    }
                }
            }]),
            e
        }(), hi = new Yt, pi = function() {
            function e(t, n, r) {
                var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                _(this, e),
                this.isInterleavedBufferAttribute = !0,
                this.name = "",
                this.data = t,
                this.itemSize = n,
                this.offset = r,
                this.normalized = i
            }
            return x(e, [{
                key: "count",
                get: function() {
                    return this.data.count
                }
            }, {
                key: "array",
                get: function() {
                    return this.data.array
                }
            }, {
                key: "needsUpdate",
                set: function(e) {
                    this.data.needsUpdate = e
                }
            }, {
                key: "applyMatrix4",
                value: function(e) {
                    for (var t = 0, n = this.data.count; t < n; t++)
                        hi.fromBufferAttribute(this, t),
                        hi.applyMatrix4(e),
                        this.setXYZ(t, hi.x, hi.y, hi.z);
                    return this
                }
            }, {
                key: "applyNormalMatrix",
                value: function(e) {
                    for (var t = 0, n = this.count; t < n; t++)
                        hi.fromBufferAttribute(this, t),
                        hi.applyNormalMatrix(e),
                        this.setXYZ(t, hi.x, hi.y, hi.z);
                    return this
                }
            }, {
                key: "transformDirection",
                value: function(e) {
                    for (var t = 0, n = this.count; t < n; t++)
                        hi.fromBufferAttribute(this, t),
                        hi.transformDirection(e),
                        this.setXYZ(t, hi.x, hi.y, hi.z);
                    return this
                }
            }, {
                key: "getComponent",
                value: function(e, t) {
                    var n = this.array[e * this.data.stride + this.offset + t];
                    return this.normalized && (n = mt(n, this.array)),
                    n
                }
            }, {
                key: "setComponent",
                value: function(e, t, n) {
                    return this.normalized && (n = vt(n, this.array)),
                    this.data.array[e * this.data.stride + this.offset + t] = n,
                    this
                }
            }, {
                key: "setX",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.data.array[e * this.data.stride + this.offset] = t,
                    this
                }
            }, {
                key: "setY",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.data.array[e * this.data.stride + this.offset + 1] = t,
                    this
                }
            }, {
                key: "setZ",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.data.array[e * this.data.stride + this.offset + 2] = t,
                    this
                }
            }, {
                key: "setW",
                value: function(e, t) {
                    return this.normalized && (t = vt(t, this.array)),
                    this.data.array[e * this.data.stride + this.offset + 3] = t,
                    this
                }
            }, {
                key: "getX",
                value: function(e) {
                    var t = this.data.array[e * this.data.stride + this.offset];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "getY",
                value: function(e) {
                    var t = this.data.array[e * this.data.stride + this.offset + 1];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "getZ",
                value: function(e) {
                    var t = this.data.array[e * this.data.stride + this.offset + 2];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "getW",
                value: function(e) {
                    var t = this.data.array[e * this.data.stride + this.offset + 3];
                    return this.normalized && (t = mt(t, this.array)),
                    t
                }
            }, {
                key: "setXY",
                value: function(e, t, n) {
                    return e = e * this.data.stride + this.offset,
                    this.normalized && (t = vt(t, this.array),
                    n = vt(n, this.array)),
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = n,
                    this
                }
            }, {
                key: "setXYZ",
                value: function(e, t, n, r) {
                    return e = e * this.data.stride + this.offset,
                    this.normalized && (t = vt(t, this.array),
                    n = vt(n, this.array),
                    r = vt(r, this.array)),
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = n,
                    this.data.array[e + 2] = r,
                    this
                }
            }, {
                key: "setXYZW",
                value: function(e, t, n, r, i) {
                    return e = e * this.data.stride + this.offset,
                    this.normalized && (t = vt(t, this.array),
                    n = vt(n, this.array),
                    r = vt(r, this.array),
                    i = vt(i, this.array)),
                    this.data.array[e + 0] = t,
                    this.data.array[e + 1] = n,
                    this.data.array[e + 2] = r,
                    this.data.array[e + 3] = i,
                    this
                }
            }, {
                key: "clone",
                value: function(t) {
                    if (void 0 === t) {
                        console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");
                        for (var n = [], r = 0; r < this.count; r++)
                            for (var i = r * this.data.stride + this.offset, a = 0; a < this.itemSize; a++)
                                n.push(this.data.array[i + a]);
                        return new Er(new this.array.constructor(n),this.itemSize,this.normalized)
                    }
                    return void 0 === t.interleavedBuffers && (t.interleavedBuffers = {}),
                    void 0 === t.interleavedBuffers[this.data.uuid] && (t.interleavedBuffers[this.data.uuid] = this.data.clone(t)),
                    new e(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    if (void 0 === e) {
                        console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");
                        for (var t = [], n = 0; n < this.count; n++)
                            for (var r = n * this.data.stride + this.offset, i = 0; i < this.itemSize; i++)
                                t.push(this.data.array[r + i]);
                        return {
                            itemSize: this.itemSize,
                            type: this.array.constructor.name,
                            array: t,
                            normalized: this.normalized
                        }
                    }
                    return void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}),
                    void 0 === e.interleavedBuffers[this.data.uuid] && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)),
                    {
                        isInterleavedBufferAttribute: !0,
                        itemSize: this.itemSize,
                        data: this.data.uuid,
                        offset: this.offset,
                        normalized: this.normalized
                    }
                }
            }]),
            e
        }(), mi = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isSpriteMaterial = !0,
                r.type = "SpriteMaterial",
                r.color = new gr(16777215),
                r.map = null,
                r.alphaMap = null,
                r.rotation = 0,
                r.sizeAttenuation = !0,
                r.transparent = !0,
                r.fog = !0,
                r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    this.map = e.map,
                    this.alphaMap = e.alphaMap,
                    this.rotation = e.rotation,
                    this.sizeAttenuation = e.sizeAttenuation,
                    this.fog = e.fog,
                    this
                }
            }]),
            n
        }(xr), vi = new Yt, gi = new Yt, _i = new Yt, yi = new _t, xi = new _t, bi = new Tn, Si = new Yt, Mi = new Yt, Ei = new Yt, Ti = new _t, wi = new _t, Ai = new _t, Ri = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new mi;
                if (_(this, n),
                (e = t.call(this)).isSprite = !0,
                e.type = "Sprite",
                void 0 === $r) {
                    $r = new Nr;
                    var i = new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1])
                      , a = new fi(i,5);
                    $r.setIndex([0, 1, 2, 0, 2, 3]),
                    $r.setAttribute("position", new pi(a,3,0,!1)),
                    $r.setAttribute("uv", new pi(a,2,3,!1))
                }
                return e.geometry = $r,
                e.material = r,
                e.center = new _t(.5,.5),
                e
            }
            return x(n, [{
                key: "raycast",
                value: function(e, t) {
                    null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),
                    gi.setFromMatrixScale(this.matrixWorld),
                    bi.copy(e.camera.matrixWorld),
                    this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld),
                    _i.setFromMatrixPosition(this.modelViewMatrix),
                    e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && gi.multiplyScalar(-_i.z);
                    var n, r, i = this.material.rotation;
                    0 !== i && (r = Math.cos(i),
                    n = Math.sin(i));
                    var a = this.center;
                    Ci(Si.set(-.5, -.5, 0), _i, a, gi, n, r),
                    Ci(Mi.set(.5, -.5, 0), _i, a, gi, n, r),
                    Ci(Ei.set(.5, .5, 0), _i, a, gi, n, r),
                    Ti.set(0, 0),
                    wi.set(1, 0),
                    Ai.set(1, 1);
                    var o = e.ray.intersectTriangle(Si, Mi, Ei, !1, vi);
                    if (null !== o || (Ci(Mi.set(-.5, .5, 0), _i, a, gi, n, r),
                    wi.set(0, 1),
                    null !== (o = e.ray.intersectTriangle(Si, Ei, Mi, !1, vi)))) {
                        var s = e.ray.origin.distanceTo(vi);
                        s < e.near || s > e.far || t.push({
                            distance: s,
                            point: vi.clone(),
                            uv: fr.getInterpolation(vi, Si, Mi, Ei, Ti, wi, Ai, new _t),
                            face: null,
                            object: this
                        })
                    }
                }
            }, {
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    void 0 !== e.center && this.center.copy(e.center),
                    this.material = e.material,
                    this
                }
            }]),
            n
        }(Jn);
        function Ci(e, t, n, r, i, a) {
            yi.subVectors(e, n).addScalar(.5).multiply(r),
            void 0 !== i ? (xi.x = a * yi.x - i * yi.y,
            xi.y = i * yi.x + a * yi.y) : xi.copy(yi),
            e.copy(t),
            e.x += xi.x,
            e.y += xi.y,
            e.applyMatrix4(bi)
        }
        var ki = new Yt
          , Pi = new Yt
          , Li = new yt
          , Ui = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Yt(1,0,0)
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                _(this, e),
                this.isPlane = !0,
                this.normal = t,
                this.constant = n
            }
            return x(e, [{
                key: "set",
                value: function(e, t) {
                    return this.normal.copy(e),
                    this.constant = t,
                    this
                }
            }, {
                key: "setComponents",
                value: function(e, t, n, r) {
                    return this.normal.set(e, t, n),
                    this.constant = r,
                    this
                }
            }, {
                key: "setFromNormalAndCoplanarPoint",
                value: function(e, t) {
                    return this.normal.copy(e),
                    this.constant = -t.dot(this.normal),
                    this
                }
            }, {
                key: "setFromCoplanarPoints",
                value: function(e, t, n) {
                    var r = ki.subVectors(n, t).cross(Pi.subVectors(e, t)).normalize();
                    return this.setFromNormalAndCoplanarPoint(r, e),
                    this
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.normal.copy(e.normal),
                    this.constant = e.constant,
                    this
                }
            }, {
                key: "normalize",
                value: function() {
                    var e = 1 / this.normal.length();
                    return this.normal.multiplyScalar(e),
                    this.constant *= e,
                    this
                }
            }, {
                key: "negate",
                value: function() {
                    return this.constant *= -1,
                    this.normal.negate(),
                    this
                }
            }, {
                key: "distanceToPoint",
                value: function(e) {
                    return this.normal.dot(e) + this.constant
                }
            }, {
                key: "distanceToSphere",
                value: function(e) {
                    return this.distanceToPoint(e.center) - e.radius
                }
            }, {
                key: "projectPoint",
                value: function(e, t) {
                    return t.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e))
                }
            }, {
                key: "intersectLine",
                value: function(e, t) {
                    var n = e.delta(ki)
                      , r = this.normal.dot(n);
                    if (0 === r)
                        return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : null;
                    var i = -(e.start.dot(this.normal) + this.constant) / r;
                    return i < 0 || i > 1 ? null : t.copy(e.start).addScaledVector(n, i)
                }
            }, {
                key: "intersectsLine",
                value: function(e) {
                    var t = this.distanceToPoint(e.start)
                      , n = this.distanceToPoint(e.end);
                    return t < 0 && n > 0 || n < 0 && t > 0
                }
            }, {
                key: "intersectsBox",
                value: function(e) {
                    return e.intersectsPlane(this)
                }
            }, {
                key: "intersectsSphere",
                value: function(e) {
                    return e.intersectsPlane(this)
                }
            }, {
                key: "coplanarPoint",
                value: function(e) {
                    return e.copy(this.normal).multiplyScalar(-this.constant)
                }
            }, {
                key: "applyMatrix4",
                value: function(e, t) {
                    var n = t || Li.getNormalMatrix(e)
                      , r = this.coplanarPoint(ki).applyMatrix4(e)
                      , i = this.normal.applyMatrix3(n).normalize();
                    return this.constant = -r.dot(i),
                    this
                }
            }, {
                key: "translate",
                value: function(e) {
                    return this.constant -= e.dot(this.normal),
                    this
                }
            }, {
                key: "equals",
                value: function(e) {
                    return e.normal.equals(this.normal) && e.constant === this.constant
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }]),
            e
        }()
          , Di = new vn
          , Ni = new Yt
          , Ii = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Ui
                  , n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Ui
                  , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Ui
                  , i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : new Ui
                  , a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : new Ui
                  , o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : new Ui;
                _(this, e),
                this.planes = [t, n, r, i, a, o]
            }
            return x(e, [{
                key: "set",
                value: function(e, t, n, r, i, a) {
                    var o = this.planes;
                    return o[0].copy(e),
                    o[1].copy(t),
                    o[2].copy(n),
                    o[3].copy(r),
                    o[4].copy(i),
                    o[5].copy(a),
                    this
                }
            }, {
                key: "copy",
                value: function(e) {
                    for (var t = this.planes, n = 0; n < 6; n++)
                        t[n].copy(e.planes[n]);
                    return this
                }
            }, {
                key: "setFromProjectionMatrix",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : it
                      , n = this.planes
                      , r = e.elements
                      , i = r[0]
                      , a = r[1]
                      , o = r[2]
                      , s = r[3]
                      , l = r[4]
                      , u = r[5]
                      , c = r[6]
                      , d = r[7]
                      , f = r[8]
                      , h = r[9]
                      , p = r[10]
                      , m = r[11]
                      , v = r[12]
                      , g = r[13]
                      , _ = r[14]
                      , y = r[15];
                    if (n[0].setComponents(s - i, d - l, m - f, y - v).normalize(),
                    n[1].setComponents(s + i, d + l, m + f, y + v).normalize(),
                    n[2].setComponents(s + a, d + u, m + h, y + g).normalize(),
                    n[3].setComponents(s - a, d - u, m - h, y - g).normalize(),
                    n[4].setComponents(s - o, d - c, m - p, y - _).normalize(),
                    t === it)
                        n[5].setComponents(s + o, d + c, m + p, y + _).normalize();
                    else {
                        if (t !== at)
                            throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: " + t);
                        n[5].setComponents(o, c, p, _).normalize()
                    }
                    return this
                }
            }, {
                key: "intersectsObject",
                value: function(e) {
                    if (void 0 !== e.boundingSphere)
                        null === e.boundingSphere && e.computeBoundingSphere(),
                        Di.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
                    else {
                        var t = e.geometry;
                        null === t.boundingSphere && t.computeBoundingSphere(),
                        Di.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)
                    }
                    return this.intersectsSphere(Di)
                }
            }, {
                key: "intersectsSprite",
                value: function(e) {
                    return Di.center.set(0, 0, 0),
                    Di.radius = .7071067811865476,
                    Di.applyMatrix4(e.matrixWorld),
                    this.intersectsSphere(Di)
                }
            }, {
                key: "intersectsSphere",
                value: function(e) {
                    for (var t = this.planes, n = e.center, r = -e.radius, i = 0; i < 6; i++) {
                        if (t[i].distanceToPoint(n) < r)
                            return !1
                    }
                    return !0
                }
            }, {
                key: "intersectsBox",
                value: function(e) {
                    for (var t = this.planes, n = 0; n < 6; n++) {
                        var r = t[n];
                        if (Ni.x = r.normal.x > 0 ? e.max.x : e.min.x,
                        Ni.y = r.normal.y > 0 ? e.max.y : e.min.y,
                        Ni.z = r.normal.z > 0 ? e.max.z : e.min.z,
                        r.distanceToPoint(Ni) < 0)
                            return !1
                    }
                    return !0
                }
            }, {
                key: "containsPoint",
                value: function(e) {
                    for (var t = this.planes, n = 0; n < 6; n++)
                        if (t[n].distanceToPoint(e) < 0)
                            return !1;
                    return !0
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }]),
            e
        }();
        var Oi = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isLineBasicMaterial = !0,
                r.type = "LineBasicMaterial",
                r.color = new gr(16777215),
                r.map = null,
                r.linewidth = 1,
                r.linecap = "round",
                r.linejoin = "round",
                r.fog = !0,
                r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    this.map = e.map,
                    this.linewidth = e.linewidth,
                    this.linecap = e.linecap,
                    this.linejoin = e.linejoin,
                    this.fog = e.fog,
                    this
                }
            }]),
            n
        }(xr)
          , Fi = new Yt
          , zi = new Yt
          , Bi = new Tn
          , Vi = new En
          , Hi = new vn
          , Gi = new Yt
          , Wi = new Yt
          , Xi = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Nr, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Oi;
                return _(this, n),
                (e = t.call(this)).isLine = !0,
                e.type = "Line",
                e.geometry = r,
                e.material = i,
                e.updateMorphTargets(),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    this.material = Array.isArray(e.material) ? e.material.slice() : e.material,
                    this.geometry = e.geometry,
                    this
                }
            }, {
                key: "computeLineDistances",
                value: function() {
                    var e = this.geometry;
                    if (null === e.index) {
                        for (var t = e.attributes.position, n = [0], r = 1, i = t.count; r < i; r++)
                            Fi.fromBufferAttribute(t, r - 1),
                            zi.fromBufferAttribute(t, r),
                            n[r] = n[r - 1],
                            n[r] += Fi.distanceTo(zi);
                        e.setAttribute("lineDistance", new Ar(n,1))
                    } else
                        console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                    return this
                }
            }, {
                key: "raycast",
                value: function(e, t) {
                    var n = this.geometry
                      , r = this.matrixWorld
                      , i = e.params.Line.threshold
                      , a = n.drawRange;
                    if (null === n.boundingSphere && n.computeBoundingSphere(),
                    Hi.copy(n.boundingSphere),
                    Hi.applyMatrix4(r),
                    Hi.radius += i,
                    !1 !== e.ray.intersectsSphere(Hi)) {
                        Bi.copy(r).invert(),
                        Vi.copy(e.ray).applyMatrix4(Bi);
                        var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                          , s = o * o
                          , l = this.isLineSegments ? 2 : 1
                          , u = n.index
                          , c = n.attributes.position;
                        if (null !== u) {
                            for (var d = Math.max(0, a.start), f = Math.min(u.count, a.start + a.count), h = d, p = f - 1; h < p; h += l) {
                                var m = u.getX(h)
                                  , v = u.getX(h + 1)
                                  , g = ji(this, e, Vi, s, m, v);
                                g && t.push(g)
                            }
                            if (this.isLineLoop) {
                                var _ = u.getX(f - 1)
                                  , y = u.getX(d)
                                  , x = ji(this, e, Vi, s, _, y);
                                x && t.push(x)
                            }
                        } else {
                            for (var b = Math.max(0, a.start), S = Math.min(c.count, a.start + a.count), M = b, E = S - 1; M < E; M += l) {
                                var T = ji(this, e, Vi, s, M, M + 1);
                                T && t.push(T)
                            }
                            if (this.isLineLoop) {
                                var w = ji(this, e, Vi, s, S - 1, b);
                                w && t.push(w)
                            }
                        }
                    }
                }
            }, {
                key: "updateMorphTargets",
                value: function() {
                    var e = this.geometry.morphAttributes
                      , t = Object.keys(e);
                    if (t.length > 0) {
                        var n = e[t[0]];
                        if (void 0 !== n) {
                            this.morphTargetInfluences = [],
                            this.morphTargetDictionary = {};
                            for (var r = 0, i = n.length; r < i; r++) {
                                var a = n[r].name || String(r);
                                this.morphTargetInfluences.push(0),
                                this.morphTargetDictionary[a] = r
                            }
                        }
                    }
                }
            }]),
            n
        }(Jn);
        function ji(e, t, n, r, i, a) {
            var o = e.geometry.attributes.position;
            if (Fi.fromBufferAttribute(o, i),
            zi.fromBufferAttribute(o, a),
            !(n.distanceSqToSegment(Fi, zi, Gi, Wi) > r)) {
                Gi.applyMatrix4(e.matrixWorld);
                var s = t.ray.origin.distanceTo(Gi);
                if (!(s < t.near || s > t.far))
                    return {
                        distance: s,
                        point: Wi.clone().applyMatrix4(e.matrixWorld),
                        index: i,
                        face: null,
                        faceIndex: null,
                        barycoord: null,
                        object: e
                    }
            }
        }
        var qi = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isPointsMaterial = !0,
                r.type = "PointsMaterial",
                r.color = new gr(16777215),
                r.map = null,
                r.alphaMap = null,
                r.size = 1,
                r.sizeAttenuation = !0,
                r.fog = !0,
                r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.color.copy(e.color),
                    this.map = e.map,
                    this.alphaMap = e.alphaMap,
                    this.size = e.size,
                    this.sizeAttenuation = e.sizeAttenuation,
                    this.fog = e.fog,
                    this
                }
            }]),
            n
        }(xr)
          , Yi = new Tn
          , Ki = new En
          , Zi = new vn
          , Qi = new Yt
          , Ji = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Nr, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new qi;
                return _(this, n),
                (e = t.call(this)).isPoints = !0,
                e.type = "Points",
                e.geometry = r,
                e.material = i,
                e.updateMorphTargets(),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    this.material = Array.isArray(e.material) ? e.material.slice() : e.material,
                    this.geometry = e.geometry,
                    this
                }
            }, {
                key: "raycast",
                value: function(e, t) {
                    var n = this.geometry
                      , r = this.matrixWorld
                      , i = e.params.Points.threshold
                      , a = n.drawRange;
                    if (null === n.boundingSphere && n.computeBoundingSphere(),
                    Zi.copy(n.boundingSphere),
                    Zi.applyMatrix4(r),
                    Zi.radius += i,
                    !1 !== e.ray.intersectsSphere(Zi)) {
                        Yi.copy(r).invert(),
                        Ki.copy(e.ray).applyMatrix4(Yi);
                        var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                          , s = o * o
                          , l = n.index
                          , u = n.attributes.position;
                        if (null !== l)
                            for (var c = Math.max(0, a.start), d = Math.min(l.count, a.start + a.count); c < d; c++) {
                                var f = l.getX(c);
                                Qi.fromBufferAttribute(u, f),
                                $i(Qi, f, s, r, e, t, this)
                            }
                        else
                            for (var h = Math.max(0, a.start), p = Math.min(u.count, a.start + a.count); h < p; h++)
                                Qi.fromBufferAttribute(u, h),
                                $i(Qi, h, s, r, e, t, this)
                    }
                }
            }, {
                key: "updateMorphTargets",
                value: function() {
                    var e = this.geometry.morphAttributes
                      , t = Object.keys(e);
                    if (t.length > 0) {
                        var n = e[t[0]];
                        if (void 0 !== n) {
                            this.morphTargetInfluences = [],
                            this.morphTargetDictionary = {};
                            for (var r = 0, i = n.length; r < i; r++) {
                                var a = n[r].name || String(r);
                                this.morphTargetInfluences.push(0),
                                this.morphTargetDictionary[a] = r
                            }
                        }
                    }
                }
            }]),
            n
        }(Jn);
        function $i(e, t, n, r, i, a, o) {
            var s = Ki.distanceSqToPoint(e);
            if (s < n) {
                var l = new Yt;
                Ki.closestPointToPoint(e, l),
                l.applyMatrix4(r);
                var u = i.ray.origin.distanceTo(l);
                if (u < i.near || u > i.far)
                    return;
                a.push({
                    distance: u,
                    distanceToRay: Math.sqrt(s),
                    point: l,
                    index: t,
                    face: null,
                    faceIndex: null,
                    barycoord: null,
                    object: o
                })
            }
        }
        var ea = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this)).isGroup = !0,
                e.type = "Group",
                e
            }
            return x(n)
        }(Jn)
          , ta = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a, o, s, l, u, c) {
                var d;
                return _(this, n),
                (d = t.call(this, e, r, i, a, o, s, l, u, c)).isCanvasTexture = !0,
                d.needsUpdate = !0,
                d
            }
            return x(n)
        }(Vt)
          , na = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a, o, s, l, u, c) {
                var d, f = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : ae;
                if (_(this, n),
                f !== ae && f !== oe)
                    throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                return void 0 === i && f === ae && (i = q),
                void 0 === i && f === oe && (i = J),
                (d = t.call(this, null, a, o, s, l, u, f, i, c)).isDepthTexture = !0,
                d.image = {
                    width: e,
                    height: r
                },
                d.magFilter = void 0 !== l ? l : O,
                d.minFilter = void 0 !== u ? u : O,
                d.flipY = !1,
                d.generateMipmaps = !1,
                d.compareFunction = null,
                d
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.compareFunction = e.compareFunction,
                    this
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = T(c(n.prototype), "toJSON", this).call(this, e);
                    return null !== this.compareFunction && (t.compareFunction = this.compareFunction),
                    t
                }
            }]),
            n
        }(Vt);
        var ra = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 32, l = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1, u = arguments.length > 5 && void 0 !== arguments[5] && arguments[5], c = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0, d = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 2 * Math.PI;
                _(this, n),
                (e = t.call(this)).type = "CylinderGeometry",
                e.parameters = {
                    radiusTop: r,
                    radiusBottom: i,
                    height: a,
                    radialSegments: o,
                    heightSegments: l,
                    openEnded: u,
                    thetaStart: c,
                    thetaLength: d
                };
                var f = s(e);
                o = Math.floor(o),
                l = Math.floor(l);
                var h = []
                  , p = []
                  , m = []
                  , v = []
                  , g = 0
                  , y = []
                  , x = a / 2
                  , b = 0;
                function S() {
                    for (var e = new Yt, t = new Yt, n = 0, s = (i - r) / a, u = 0; u <= l; u++) {
                        for (var _ = [], S = u / l, M = S * (i - r) + r, E = 0; E <= o; E++) {
                            var T = E / o
                              , w = T * d + c
                              , A = Math.sin(w)
                              , R = Math.cos(w);
                            t.x = M * A,
                            t.y = -S * a + x,
                            t.z = M * R,
                            p.push(t.x, t.y, t.z),
                            e.set(A, s, R).normalize(),
                            m.push(e.x, e.y, e.z),
                            v.push(T, 1 - S),
                            _.push(g++)
                        }
                        y.push(_)
                    }
                    for (var C = 0; C < o; C++)
                        for (var k = 0; k < l; k++) {
                            var P = y[k][C]
                              , L = y[k + 1][C]
                              , U = y[k + 1][C + 1]
                              , D = y[k][C + 1];
                            (r > 0 || 0 !== k) && (h.push(P, L, D),
                            n += 3),
                            (i > 0 || k !== l - 1) && (h.push(L, U, D),
                            n += 3)
                        }
                    f.addGroup(b, n, 0),
                    b += n
                }
                function M(e) {
                    for (var t = g, n = new _t, a = new Yt, s = 0, l = !0 === e ? r : i, u = !0 === e ? 1 : -1, _ = 1; _ <= o; _++)
                        p.push(0, x * u, 0),
                        m.push(0, u, 0),
                        v.push(.5, .5),
                        g++;
                    for (var y = g, S = 0; S <= o; S++) {
                        var M = S / o * d + c
                          , E = Math.cos(M)
                          , T = Math.sin(M);
                        a.x = l * T,
                        a.y = x * u,
                        a.z = l * E,
                        p.push(a.x, a.y, a.z),
                        m.push(0, u, 0),
                        n.x = .5 * E + .5,
                        n.y = .5 * T * u + .5,
                        v.push(n.x, n.y),
                        g++
                    }
                    for (var w = 0; w < o; w++) {
                        var A = t + w
                          , R = y + w;
                        !0 === e ? h.push(R, R + 1, A) : h.push(R + 1, R, A),
                        s += 3
                    }
                    f.addGroup(b, s, !0 === e ? 1 : 2),
                    b += s
                }
                return S(),
                !1 === u && (r > 0 && M(!0),
                i > 0 && M(!1)),
                e.setIndex(h),
                e.setAttribute("position", new Ar(p,3)),
                e.setAttribute("normal", new Ar(m,3)),
                e.setAttribute("uv", new Ar(v,2)),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.parameters = Object.assign({}, e.parameters),
                    this
                }
            }], [{
                key: "fromJSON",
                value: function(e) {
                    return new n(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)
                }
            }]),
            n
        }(Nr);
        var ia = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                _(this, n),
                (e = t.call(this)).type = "PlaneGeometry",
                e.parameters = {
                    width: r,
                    height: i,
                    widthSegments: a,
                    heightSegments: o
                };
                for (var s = r / 2, l = i / 2, u = Math.floor(a), c = Math.floor(o), d = u + 1, f = c + 1, h = r / u, p = i / c, m = [], v = [], g = [], y = [], x = 0; x < f; x++)
                    for (var b = x * p - l, S = 0; S < d; S++) {
                        var M = S * h - s;
                        v.push(M, -b, 0),
                        g.push(0, 0, 1),
                        y.push(S / u),
                        y.push(1 - x / c)
                    }
                for (var E = 0; E < c; E++)
                    for (var T = 0; T < u; T++) {
                        var w = T + d * E
                          , A = T + d * (E + 1)
                          , R = T + 1 + d * (E + 1)
                          , C = T + 1 + d * E;
                        m.push(w, A, C),
                        m.push(A, R, C)
                    }
                return e.setIndex(m),
                e.setAttribute("position", new Ar(v,3)),
                e.setAttribute("normal", new Ar(g,3)),
                e.setAttribute("uv", new Ar(y,2)),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.parameters = Object.assign({}, e.parameters),
                    this
                }
            }], [{
                key: "fromJSON",
                value: function(e) {
                    return new n(e.width,e.height,e.widthSegments,e.heightSegments)
                }
            }]),
            n
        }(Nr);
        var aa = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 32, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 16, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2 * Math.PI, l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0, u = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : Math.PI;
                _(this, n),
                (e = t.call(this)).type = "SphereGeometry",
                e.parameters = {
                    radius: r,
                    widthSegments: i,
                    heightSegments: a,
                    phiStart: o,
                    phiLength: s,
                    thetaStart: l,
                    thetaLength: u
                },
                i = Math.max(3, Math.floor(i)),
                a = Math.max(2, Math.floor(a));
                for (var c = Math.min(l + u, Math.PI), d = 0, f = [], h = new Yt, p = new Yt, m = [], v = [], g = [], y = [], x = 0; x <= a; x++) {
                    var b = []
                      , S = x / a
                      , M = 0;
                    0 === x && 0 === l ? M = .5 / i : x === a && c === Math.PI && (M = -.5 / i);
                    for (var E = 0; E <= i; E++) {
                        var T = E / i;
                        h.x = -r * Math.cos(o + T * s) * Math.sin(l + S * u),
                        h.y = r * Math.cos(l + S * u),
                        h.z = r * Math.sin(o + T * s) * Math.sin(l + S * u),
                        v.push(h.x, h.y, h.z),
                        p.copy(h).normalize(),
                        g.push(p.x, p.y, p.z),
                        y.push(T + M, 1 - S),
                        b.push(d++)
                    }
                    f.push(b)
                }
                for (var w = 0; w < a; w++)
                    for (var A = 0; A < i; A++) {
                        var R = f[w][A + 1]
                          , C = f[w][A]
                          , k = f[w + 1][A]
                          , P = f[w + 1][A + 1];
                        (0 !== w || l > 0) && m.push(R, C, P),
                        (w !== a - 1 || c < Math.PI) && m.push(C, k, P)
                    }
                return e.setIndex(m),
                e.setAttribute("position", new Ar(v,3)),
                e.setAttribute("normal", new Ar(g,3)),
                e.setAttribute("uv", new Ar(y,2)),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.parameters = Object.assign({}, e.parameters),
                    this
                }
            }], [{
                key: "fromJSON",
                value: function(e) {
                    return new n(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)
                }
            }]),
            n
        }(Nr);
        var oa = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isMeshStandardMaterial = !0,
                r.type = "MeshStandardMaterial",
                r.defines = {
                    STANDARD: ""
                },
                r.color = new gr(16777215),
                r.roughness = 1,
                r.metalness = 0,
                r.map = null,
                r.lightMap = null,
                r.lightMapIntensity = 1,
                r.aoMap = null,
                r.aoMapIntensity = 1,
                r.emissive = new gr(0),
                r.emissiveIntensity = 1,
                r.emissiveMap = null,
                r.bumpMap = null,
                r.bumpScale = 1,
                r.normalMap = null,
                r.normalMapType = 0,
                r.normalScale = new _t(1,1),
                r.displacementMap = null,
                r.displacementScale = 1,
                r.displacementBias = 0,
                r.roughnessMap = null,
                r.metalnessMap = null,
                r.alphaMap = null,
                r.envMap = null,
                r.envMapRotation = new Nn,
                r.envMapIntensity = 1,
                r.wireframe = !1,
                r.wireframeLinewidth = 1,
                r.wireframeLinecap = "round",
                r.wireframeLinejoin = "round",
                r.flatShading = !1,
                r.fog = !0,
                r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.defines = {
                        STANDARD: ""
                    },
                    this.color.copy(e.color),
                    this.roughness = e.roughness,
                    this.metalness = e.metalness,
                    this.map = e.map,
                    this.lightMap = e.lightMap,
                    this.lightMapIntensity = e.lightMapIntensity,
                    this.aoMap = e.aoMap,
                    this.aoMapIntensity = e.aoMapIntensity,
                    this.emissive.copy(e.emissive),
                    this.emissiveMap = e.emissiveMap,
                    this.emissiveIntensity = e.emissiveIntensity,
                    this.bumpMap = e.bumpMap,
                    this.bumpScale = e.bumpScale,
                    this.normalMap = e.normalMap,
                    this.normalMapType = e.normalMapType,
                    this.normalScale.copy(e.normalScale),
                    this.displacementMap = e.displacementMap,
                    this.displacementScale = e.displacementScale,
                    this.displacementBias = e.displacementBias,
                    this.roughnessMap = e.roughnessMap,
                    this.metalnessMap = e.metalnessMap,
                    this.alphaMap = e.alphaMap,
                    this.envMap = e.envMap,
                    this.envMapRotation.copy(e.envMapRotation),
                    this.envMapIntensity = e.envMapIntensity,
                    this.wireframe = e.wireframe,
                    this.wireframeLinewidth = e.wireframeLinewidth,
                    this.wireframeLinecap = e.wireframeLinecap,
                    this.wireframeLinejoin = e.wireframeLinejoin,
                    this.flatShading = e.flatShading,
                    this.fog = e.fog,
                    this
                }
            }]),
            n
        }(xr)
          , sa = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isMeshDepthMaterial = !0,
                r.type = "MeshDepthMaterial",
                r.depthPacking = 3200,
                r.map = null,
                r.alphaMap = null,
                r.displacementMap = null,
                r.displacementScale = 1,
                r.displacementBias = 0,
                r.wireframe = !1,
                r.wireframeLinewidth = 1,
                r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.depthPacking = e.depthPacking,
                    this.map = e.map,
                    this.alphaMap = e.alphaMap,
                    this.displacementMap = e.displacementMap,
                    this.displacementScale = e.displacementScale,
                    this.displacementBias = e.displacementBias,
                    this.wireframe = e.wireframe,
                    this.wireframeLinewidth = e.wireframeLinewidth,
                    this
                }
            }]),
            n
        }(xr)
          , la = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r;
                return _(this, n),
                (r = t.call(this)).isMeshDistanceMaterial = !0,
                r.type = "MeshDistanceMaterial",
                r.map = null,
                r.alphaMap = null,
                r.displacementMap = null,
                r.displacementScale = 1,
                r.displacementBias = 0,
                r.setValues(e),
                r
            }
            return x(n, [{
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.map = e.map,
                    this.alphaMap = e.alphaMap,
                    this.displacementMap = e.displacementMap,
                    this.displacementScale = e.displacementScale,
                    this.displacementBias = e.displacementBias,
                    this
                }
            }]),
            n
        }(xr);
        function ua(e, t, n) {
            return !e || !n && e.constructor === t ? e : "number" === typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
        }
        function ca(e) {
            return ArrayBuffer.isView(e) && !(e instanceof DataView)
        }
        var da = function() {
            function e(t, n, r, i) {
                _(this, e),
                this.parameterPositions = t,
                this._cachedIndex = 0,
                this.resultBuffer = void 0 !== i ? i : new n.constructor(r),
                this.sampleValues = n,
                this.valueSize = r,
                this.settings = null,
                this.DefaultSettings_ = {}
            }
            return x(e, [{
                key: "evaluate",
                value: function(e) {
                    var t = this.parameterPositions
                      , n = this._cachedIndex
                      , r = t[n]
                      , i = t[n - 1];
                    e: {
                        t: {
                            var a;
                            n: {
                                r: if (!(e < r)) {
                                    for (var o = n + 2; ; ) {
                                        if (void 0 === r) {
                                            if (e < i)
                                                break r;
                                            return n = t.length,
                                            this._cachedIndex = n,
                                            this.copySampleValue_(n - 1)
                                        }
                                        if (n === o)
                                            break;
                                        if (i = r,
                                        e < (r = t[++n]))
                                            break t
                                    }
                                    a = t.length;
                                    break n
                                }
                                if (e >= i)
                                    break e;
                                var s = t[1];
                                e < s && (n = 2,
                                i = s);
                                for (var l = n - 2; ; ) {
                                    if (void 0 === i)
                                        return this._cachedIndex = 0,
                                        this.copySampleValue_(0);
                                    if (n === l)
                                        break;
                                    if (r = i,
                                    e >= (i = t[--n - 1]))
                                        break t
                                }
                                a = n,
                                n = 0
                            }
                            for (; n < a; ) {
                                var u = n + a >>> 1;
                                e < t[u] ? a = u : n = u + 1
                            }
                            if (r = t[n],
                            void 0 === (i = t[n - 1]))
                                return this._cachedIndex = 0,
                                this.copySampleValue_(0);
                            if (void 0 === r)
                                return n = t.length,
                                this._cachedIndex = n,
                                this.copySampleValue_(n - 1)
                        }
                        this._cachedIndex = n,
                        this.intervalChanged_(n, i, r)
                    }
                    return this.interpolate_(n, i, e, r)
                }
            }, {
                key: "getSettings_",
                value: function() {
                    return this.settings || this.DefaultSettings_
                }
            }, {
                key: "copySampleValue_",
                value: function(e) {
                    for (var t = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = e * r, a = 0; a !== r; ++a)
                        t[a] = n[i + a];
                    return t
                }
            }, {
                key: "interpolate_",
                value: function() {
                    throw new Error("call to abstract method")
                }
            }, {
                key: "intervalChanged_",
                value: function() {}
            }]),
            e
        }()
          , fa = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a) {
                var o;
                return _(this, n),
                (o = t.call(this, e, r, i, a))._weightPrev = -0,
                o._offsetPrev = -0,
                o._weightNext = -0,
                o._offsetNext = -0,
                o.DefaultSettings_ = {
                    endingStart: qe,
                    endingEnd: qe
                },
                o
            }
            return x(n, [{
                key: "intervalChanged_",
                value: function(e, t, n) {
                    var r = this.parameterPositions
                      , i = e - 2
                      , a = e + 1
                      , o = r[i]
                      , s = r[a];
                    if (void 0 === o)
                        switch (this.getSettings_().endingStart) {
                        case Ye:
                            i = e,
                            o = 2 * t - n;
                            break;
                        case Ke:
                            o = t + r[i = r.length - 2] - r[i + 1];
                            break;
                        default:
                            i = e,
                            o = n
                        }
                    if (void 0 === s)
                        switch (this.getSettings_().endingEnd) {
                        case Ye:
                            a = e,
                            s = 2 * n - t;
                            break;
                        case Ke:
                            a = 1,
                            s = n + r[1] - r[0];
                            break;
                        default:
                            a = e - 1,
                            s = t
                        }
                    var l = .5 * (n - t)
                      , u = this.valueSize;
                    this._weightPrev = l / (t - o),
                    this._weightNext = l / (s - n),
                    this._offsetPrev = i * u,
                    this._offsetNext = a * u
                }
            }, {
                key: "interpolate_",
                value: function(e, t, n, r) {
                    for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = this._offsetPrev, c = this._offsetNext, d = this._weightPrev, f = this._weightNext, h = (n - t) / (r - t), p = h * h, m = p * h, v = -d * m + 2 * d * p - d * h, g = (1 + d) * m + (-1.5 - 2 * d) * p + (-.5 + d) * h + 1, _ = (-1 - f) * m + (1.5 + f) * p + .5 * h, y = f * m - f * p, x = 0; x !== o; ++x)
                        i[x] = v * a[u + x] + g * a[l + x] + _ * a[s + x] + y * a[c + x];
                    return i
                }
            }]),
            n
        }(da)
          , ha = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a) {
                return _(this, n),
                t.call(this, e, r, i, a)
            }
            return x(n, [{
                key: "interpolate_",
                value: function(e, t, n, r) {
                    for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, l = s - o, u = (n - t) / (r - t), c = 1 - u, d = 0; d !== o; ++d)
                        i[d] = a[l + d] * c + a[s + d] * u;
                    return i
                }
            }]),
            n
        }(da)
          , pa = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a) {
                return _(this, n),
                t.call(this, e, r, i, a)
            }
            return x(n, [{
                key: "interpolate_",
                value: function(e) {
                    return this.copySampleValue_(e - 1)
                }
            }]),
            n
        }(da)
          , ma = function() {
            function e(t, n, r, i) {
                if (_(this, e),
                void 0 === t)
                    throw new Error("THREE.KeyframeTrack: track name is undefined");
                if (void 0 === n || 0 === n.length)
                    throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
                this.name = t,
                this.times = ua(n, this.TimeBufferType),
                this.values = ua(r, this.ValueBufferType),
                this.setInterpolation(i || this.DefaultInterpolation)
            }
            return x(e, [{
                key: "InterpolantFactoryMethodDiscrete",
                value: function(e) {
                    return new pa(this.times,this.values,this.getValueSize(),e)
                }
            }, {
                key: "InterpolantFactoryMethodLinear",
                value: function(e) {
                    return new ha(this.times,this.values,this.getValueSize(),e)
                }
            }, {
                key: "InterpolantFactoryMethodSmooth",
                value: function(e) {
                    return new fa(this.times,this.values,this.getValueSize(),e)
                }
            }, {
                key: "setInterpolation",
                value: function(e) {
                    var t;
                    switch (e) {
                    case We:
                        t = this.InterpolantFactoryMethodDiscrete;
                        break;
                    case Xe:
                        t = this.InterpolantFactoryMethodLinear;
                        break;
                    case je:
                        t = this.InterpolantFactoryMethodSmooth
                    }
                    if (void 0 === t) {
                        var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (e === this.DefaultInterpolation)
                                throw new Error(n);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                        return console.warn("THREE.KeyframeTrack:", n),
                        this
                    }
                    return this.createInterpolant = t,
                    this
                }
            }, {
                key: "getInterpolation",
                value: function() {
                    switch (this.createInterpolant) {
                    case this.InterpolantFactoryMethodDiscrete:
                        return We;
                    case this.InterpolantFactoryMethodLinear:
                        return Xe;
                    case this.InterpolantFactoryMethodSmooth:
                        return je
                    }
                }
            }, {
                key: "getValueSize",
                value: function() {
                    return this.values.length / this.times.length
                }
            }, {
                key: "shift",
                value: function(e) {
                    if (0 !== e)
                        for (var t = this.times, n = 0, r = t.length; n !== r; ++n)
                            t[n] += e;
                    return this
                }
            }, {
                key: "scale",
                value: function(e) {
                    if (1 !== e)
                        for (var t = this.times, n = 0, r = t.length; n !== r; ++n)
                            t[n] *= e;
                    return this
                }
            }, {
                key: "trim",
                value: function(e, t) {
                    for (var n = this.times, r = n.length, i = 0, a = r - 1; i !== r && n[i] < e; )
                        ++i;
                    for (; -1 !== a && n[a] > t; )
                        --a;
                    if (++a,
                    0 !== i || a !== r) {
                        i >= a && (i = (a = Math.max(a, 1)) - 1);
                        var o = this.getValueSize();
                        this.times = n.slice(i, a),
                        this.values = this.values.slice(i * o, a * o)
                    }
                    return this
                }
            }, {
                key: "validate",
                value: function() {
                    var e = !0
                      , t = this.getValueSize();
                    t - Math.floor(t) !== 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this),
                    e = !1);
                    var n = this.times
                      , r = this.values
                      , i = n.length;
                    0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this),
                    e = !1);
                    for (var a = null, o = 0; o !== i; o++) {
                        var s = n[o];
                        if ("number" === typeof s && isNaN(s)) {
                            console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o, s),
                            e = !1;
                            break
                        }
                        if (null !== a && a > s) {
                            console.error("THREE.KeyframeTrack: Out of order keys.", this, o, s, a),
                            e = !1;
                            break
                        }
                        a = s
                    }
                    if (void 0 !== r && ca(r))
                        for (var l = 0, u = r.length; l !== u; ++l) {
                            var c = r[l];
                            if (isNaN(c)) {
                                console.error("THREE.KeyframeTrack: Value is not a valid number.", this, l, c),
                                e = !1;
                                break
                            }
                        }
                    return e
                }
            }, {
                key: "optimize",
                value: function() {
                    for (var e = this.times.slice(), t = this.values.slice(), n = this.getValueSize(), r = this.getInterpolation() === je, i = e.length - 1, a = 1, o = 1; o < i; ++o) {
                        var s = !1
                          , l = e[o];
                        if (l !== e[o + 1] && (1 !== o || l !== e[0]))
                            if (r)
                                s = !0;
                            else
                                for (var u = o * n, c = u - n, d = u + n, f = 0; f !== n; ++f) {
                                    var h = t[u + f];
                                    if (h !== t[c + f] || h !== t[d + f]) {
                                        s = !0;
                                        break
                                    }
                                }
                        if (s) {
                            if (o !== a) {
                                e[a] = e[o];
                                for (var p = o * n, m = a * n, v = 0; v !== n; ++v)
                                    t[m + v] = t[p + v]
                            }
                            ++a
                        }
                    }
                    if (i > 0) {
                        e[a] = e[i];
                        for (var g = i * n, _ = a * n, y = 0; y !== n; ++y)
                            t[_ + y] = t[g + y];
                        ++a
                    }
                    return a !== e.length ? (this.times = e.slice(0, a),
                    this.values = t.slice(0, a * n)) : (this.times = e,
                    this.values = t),
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    var e = this.times.slice()
                      , t = this.values.slice()
                      , n = new (0,
                    this.constructor)(this.name,e,t);
                    return n.createInterpolant = this.createInterpolant,
                    n
                }
            }], [{
                key: "toJSON",
                value: function(e) {
                    var t, n = e.constructor;
                    if (n.toJSON !== this.toJSON)
                        t = n.toJSON(e);
                    else {
                        t = {
                            name: e.name,
                            times: ua(e.times, Array),
                            values: ua(e.values, Array)
                        };
                        var r = e.getInterpolation();
                        r !== e.DefaultInterpolation && (t.interpolation = r)
                    }
                    return t.type = e.ValueTypeName,
                    t
                }
            }]),
            e
        }();
        ma.prototype.TimeBufferType = Float32Array,
        ma.prototype.ValueBufferType = Float32Array,
        ma.prototype.DefaultInterpolation = Xe;
        var va = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i) {
                return _(this, n),
                t.call(this, e, r, i)
            }
            return x(n)
        }(ma);
        va.prototype.ValueTypeName = "bool",
        va.prototype.ValueBufferType = Array,
        va.prototype.DefaultInterpolation = We,
        va.prototype.InterpolantFactoryMethodLinear = void 0,
        va.prototype.InterpolantFactoryMethodSmooth = void 0;
        var ga = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                return _(this, n),
                t.apply(this, arguments)
            }
            return x(n)
        }(ma);
        ga.prototype.ValueTypeName = "color";
        var _a = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                return _(this, n),
                t.apply(this, arguments)
            }
            return x(n)
        }(ma);
        _a.prototype.ValueTypeName = "number";
        var ya = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a) {
                return _(this, n),
                t.call(this, e, r, i, a)
            }
            return x(n, [{
                key: "interpolate_",
                value: function(e, t, n, r) {
                    for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = (n - t) / (r - t), l = e * o, u = l + o; l !== u; l += 4)
                        qt.slerpFlat(i, 0, a, l - o, a, l, s);
                    return i
                }
            }]),
            n
        }(da)
          , xa = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                return _(this, n),
                t.apply(this, arguments)
            }
            return x(n, [{
                key: "InterpolantFactoryMethodLinear",
                value: function(e) {
                    return new ya(this.times,this.values,this.getValueSize(),e)
                }
            }]),
            n
        }(ma);
        xa.prototype.ValueTypeName = "quaternion",
        xa.prototype.InterpolantFactoryMethodSmooth = void 0;
        var ba = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i) {
                return _(this, n),
                t.call(this, e, r, i)
            }
            return x(n)
        }(ma);
        ba.prototype.ValueTypeName = "string",
        ba.prototype.ValueBufferType = Array,
        ba.prototype.DefaultInterpolation = We,
        ba.prototype.InterpolantFactoryMethodLinear = void 0,
        ba.prototype.InterpolantFactoryMethodSmooth = void 0;
        var Sa = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                return _(this, n),
                t.apply(this, arguments)
            }
            return x(n)
        }(ma);
        Sa.prototype.ValueTypeName = "vector";
        var Ma = x((function e(t, n, r) {
            _(this, e);
            var i = this
              , a = !1
              , o = 0
              , s = 0
              , l = void 0
              , u = [];
            this.onStart = void 0,
            this.onLoad = t,
            this.onProgress = n,
            this.onError = r,
            this.itemStart = function(e) {
                s++,
                !1 === a && void 0 !== i.onStart && i.onStart(e, o, s),
                a = !0
            }
            ,
            this.itemEnd = function(e) {
                o++,
                void 0 !== i.onProgress && i.onProgress(e, o, s),
                o === s && (a = !1,
                void 0 !== i.onLoad && i.onLoad())
            }
            ,
            this.itemError = function(e) {
                void 0 !== i.onError && i.onError(e)
            }
            ,
            this.resolveURL = function(e) {
                return l ? l(e) : e
            }
            ,
            this.setURLModifier = function(e) {
                return l = e,
                this
            }
            ,
            this.addHandler = function(e, t) {
                return u.push(e, t),
                this
            }
            ,
            this.removeHandler = function(e) {
                var t = u.indexOf(e);
                return -1 !== t && u.splice(t, 2),
                this
            }
            ,
            this.getHandler = function(e) {
                for (var t = 0, n = u.length; t < n; t += 2) {
                    var r = u[t]
                      , i = u[t + 1];
                    if (r.global && (r.lastIndex = 0),
                    r.test(e))
                        return i
                }
                return null
            }
        }
        ))
          , Ea = new Ma
          , Ta = function() {
            function e(t) {
                _(this, e),
                this.manager = void 0 !== t ? t : Ea,
                this.crossOrigin = "anonymous",
                this.withCredentials = !1,
                this.path = "",
                this.resourcePath = "",
                this.requestHeader = {}
            }
            return x(e, [{
                key: "load",
                value: function() {}
            }, {
                key: "loadAsync",
                value: function(e, t) {
                    var n = this;
                    return new Promise((function(r, i) {
                        n.load(e, r, t, i)
                    }
                    ))
                }
            }, {
                key: "parse",
                value: function() {}
            }, {
                key: "setCrossOrigin",
                value: function(e) {
                    return this.crossOrigin = e,
                    this
                }
            }, {
                key: "setWithCredentials",
                value: function(e) {
                    return this.withCredentials = e,
                    this
                }
            }, {
                key: "setPath",
                value: function(e) {
                    return this.path = e,
                    this
                }
            }, {
                key: "setResourcePath",
                value: function(e) {
                    return this.resourcePath = e,
                    this
                }
            }, {
                key: "setRequestHeader",
                value: function(e) {
                    return this.requestHeader = e,
                    this
                }
            }]),
            e
        }();
        Ta.DEFAULT_MATERIAL_NAME = "__DEFAULT";
        Error;
        var wa = function(e) {
            u(n, e);
            var t = h(n);
            function n(e) {
                var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                return _(this, n),
                (r = t.call(this)).isLight = !0,
                r.type = "Light",
                r.color = new gr(e),
                r.intensity = i,
                r
            }
            return x(n, [{
                key: "dispose",
                value: function() {}
            }, {
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    this.color.copy(e.color),
                    this.intensity = e.intensity,
                    this
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = T(c(n.prototype), "toJSON", this).call(this, e);
                    return t.object.color = this.color.getHex(),
                    t.object.intensity = this.intensity,
                    void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance && (t.object.distance = this.distance),
                    void 0 !== this.angle && (t.object.angle = this.angle),
                    void 0 !== this.decay && (t.object.decay = this.decay),
                    void 0 !== this.penumbra && (t.object.penumbra = this.penumbra),
                    void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()),
                    void 0 !== this.target && (t.object.target = this.target.uuid),
                    t
                }
            }]),
            n
        }(Jn)
          , Aa = new Tn
          , Ra = new Yt
          , Ca = new Yt
          , ka = function() {
            function e(t) {
                _(this, e),
                this.camera = t,
                this.intensity = 1,
                this.bias = 0,
                this.normalBias = 0,
                this.radius = 1,
                this.blurSamples = 8,
                this.mapSize = new _t(512,512),
                this.map = null,
                this.mapPass = null,
                this.matrix = new Tn,
                this.autoUpdate = !0,
                this.needsUpdate = !1,
                this._frustum = new Ii,
                this._frameExtents = new _t(1,1),
                this._viewportCount = 1,
                this._viewports = [new Ht(0,0,1,1)]
            }
            return x(e, [{
                key: "getViewportCount",
                value: function() {
                    return this._viewportCount
                }
            }, {
                key: "getFrustum",
                value: function() {
                    return this._frustum
                }
            }, {
                key: "updateMatrices",
                value: function(e) {
                    var t = this.camera
                      , n = this.matrix;
                    Ra.setFromMatrixPosition(e.matrixWorld),
                    t.position.copy(Ra),
                    Ca.setFromMatrixPosition(e.target.matrixWorld),
                    t.lookAt(Ca),
                    t.updateMatrixWorld(),
                    Aa.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                    this._frustum.setFromProjectionMatrix(Aa),
                    n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                    n.multiply(Aa)
                }
            }, {
                key: "getViewport",
                value: function(e) {
                    return this._viewports[e]
                }
            }, {
                key: "getFrameExtents",
                value: function() {
                    return this._frameExtents
                }
            }, {
                key: "dispose",
                value: function() {
                    this.map && this.map.dispose(),
                    this.mapPass && this.mapPass.dispose()
                }
            }, {
                key: "copy",
                value: function(e) {
                    return this.camera = e.camera.clone(),
                    this.intensity = e.intensity,
                    this.bias = e.bias,
                    this.radius = e.radius,
                    this.mapSize.copy(e.mapSize),
                    this
                }
            }, {
                key: "clone",
                value: function() {
                    return (new this.constructor).copy(this)
                }
            }, {
                key: "toJSON",
                value: function() {
                    var e = {};
                    return 1 !== this.intensity && (e.intensity = this.intensity),
                    0 !== this.bias && (e.bias = this.bias),
                    0 !== this.normalBias && (e.normalBias = this.normalBias),
                    1 !== this.radius && (e.radius = this.radius),
                    512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()),
                    e.camera = this.camera.toJSON(!1).object,
                    delete e.camera.matrix,
                    e
                }
            }]),
            e
        }()
          , Pa = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : -1, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : .1, l = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 2e3;
                return _(this, n),
                (e = t.call(this)).isOrthographicCamera = !0,
                e.type = "OrthographicCamera",
                e.zoom = 1,
                e.view = null,
                e.left = r,
                e.right = i,
                e.top = a,
                e.bottom = o,
                e.near = s,
                e.far = l,
                e.updateProjectionMatrix(),
                e
            }
            return x(n, [{
                key: "copy",
                value: function(e, t) {
                    return T(c(n.prototype), "copy", this).call(this, e, t),
                    this.left = e.left,
                    this.right = e.right,
                    this.top = e.top,
                    this.bottom = e.bottom,
                    this.near = e.near,
                    this.far = e.far,
                    this.zoom = e.zoom,
                    this.view = null === e.view ? null : Object.assign({}, e.view),
                    this
                }
            }, {
                key: "setViewOffset",
                value: function(e, t, n, r, i, a) {
                    null === this.view && (this.view = {
                        enabled: !0,
                        fullWidth: 1,
                        fullHeight: 1,
                        offsetX: 0,
                        offsetY: 0,
                        width: 1,
                        height: 1
                    }),
                    this.view.enabled = !0,
                    this.view.fullWidth = e,
                    this.view.fullHeight = t,
                    this.view.offsetX = n,
                    this.view.offsetY = r,
                    this.view.width = i,
                    this.view.height = a,
                    this.updateProjectionMatrix()
                }
            }, {
                key: "clearViewOffset",
                value: function() {
                    null !== this.view && (this.view.enabled = !1),
                    this.updateProjectionMatrix()
                }
            }, {
                key: "updateProjectionMatrix",
                value: function() {
                    var e = (this.right - this.left) / (2 * this.zoom)
                      , t = (this.top - this.bottom) / (2 * this.zoom)
                      , n = (this.right + this.left) / 2
                      , r = (this.top + this.bottom) / 2
                      , i = n - e
                      , a = n + e
                      , o = r + t
                      , s = r - t;
                    if (null !== this.view && this.view.enabled) {
                        var l = (this.right - this.left) / this.view.fullWidth / this.zoom
                          , u = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                        a = (i += l * this.view.offsetX) + l * this.view.width,
                        s = (o -= u * this.view.offsetY) - u * this.view.height
                    }
                    this.projectionMatrix.makeOrthographic(i, a, o, s, this.near, this.far, this.coordinateSystem),
                    this.projectionMatrixInverse.copy(this.projectionMatrix).invert()
                }
            }, {
                key: "toJSON",
                value: function(e) {
                    var t = T(c(n.prototype), "toJSON", this).call(this, e);
                    return t.object.zoom = this.zoom,
                    t.object.left = this.left,
                    t.object.right = this.right,
                    t.object.top = this.top,
                    t.object.bottom = this.bottom,
                    t.object.near = this.near,
                    t.object.far = this.far,
                    null !== this.view && (t.object.view = Object.assign({}, this.view)),
                    t
                }
            }]),
            n
        }(ni)
          , La = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this, new Pa(-5,5,5,-5,.5,500))).isDirectionalLightShadow = !0,
                e
            }
            return x(n)
        }(ka)
          , Ua = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r) {
                var i;
                return _(this, n),
                (i = t.call(this, e, r)).isDirectionalLight = !0,
                i.type = "DirectionalLight",
                i.position.copy(Jn.DEFAULT_UP),
                i.updateMatrix(),
                i.target = new Jn,
                i.shadow = new La,
                i
            }
            return x(n, [{
                key: "dispose",
                value: function() {
                    this.shadow.dispose()
                }
            }, {
                key: "copy",
                value: function(e) {
                    return T(c(n.prototype), "copy", this).call(this, e),
                    this.target = e.target.clone(),
                    this.shadow = e.shadow.clone(),
                    this
                }
            }]),
            n
        }(wa)
          , Da = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r) {
                var i;
                return _(this, n),
                (i = t.call(this, e, r)).isAmbientLight = !0,
                i.type = "AmbientLight",
                i
            }
            return x(n)
        }(wa)
          , Na = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                return _(this, n),
                (e = t.call(this)).isArrayCamera = !0,
                e.cameras = r,
                e
            }
            return x(n)
        }(oi)
          , Ia = function() {
            function e() {
                var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                _(this, e),
                this.autoStart = t,
                this.startTime = 0,
                this.oldTime = 0,
                this.elapsedTime = 0,
                this.running = !1
            }
            return x(e, [{
                key: "start",
                value: function() {
                    this.startTime = Oa(),
                    this.oldTime = this.startTime,
                    this.elapsedTime = 0,
                    this.running = !0
                }
            }, {
                key: "stop",
                value: function() {
                    this.getElapsedTime(),
                    this.running = !1,
                    this.autoStart = !1
                }
            }, {
                key: "getElapsedTime",
                value: function() {
                    return this.getDelta(),
                    this.elapsedTime
                }
            }, {
                key: "getDelta",
                value: function() {
                    var e = 0;
                    if (this.autoStart && !this.running)
                        return this.start(),
                        0;
                    if (this.running) {
                        var t = Oa();
                        e = (t - this.oldTime) / 1e3,
                        this.oldTime = t,
                        this.elapsedTime += e
                    }
                    return e
                }
            }]),
            e
        }();
        function Oa() {
            return performance.now()
        }
        var Fa = "\\[\\]\\.:\\/"
          , za = new RegExp("[\\[\\]\\.:\\/]","g")
          , Ba = "[^\\[\\]\\.:\\/]"
          , Va = "[^" + Fa.replace("\\.", "") + "]"
          , Ha = new RegExp("^" + /((?:WC+[\/:])*)/.source.replace("WC", Ba) + /(WCOD+)?/.source.replace("WCOD", Va) + /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Ba) + /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Ba) + "$")
          , Ga = ["material", "materials", "bones", "map"]
          , Wa = function() {
            function e(t, n, r) {
                _(this, e);
                var i = r || Xa.parseTrackName(n);
                this._targetGroup = t,
                this._bindings = t.subscribe_(n, i)
            }
            return x(e, [{
                key: "getValue",
                value: function(e, t) {
                    this.bind();
                    var n = this._targetGroup.nCachedObjects_
                      , r = this._bindings[n];
                    void 0 !== r && r.getValue(e, t)
                }
            }, {
                key: "setValue",
                value: function(e, t) {
                    for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r)
                        n[r].setValue(e, t)
                }
            }, {
                key: "bind",
                value: function() {
                    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                        e[t].bind()
                }
            }, {
                key: "unbind",
                value: function() {
                    for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t)
                        e[t].unbind()
                }
            }]),
            e
        }()
          , Xa = function() {
            function e(t, n, r) {
                _(this, e),
                this.path = n,
                this.parsedPath = r || e.parseTrackName(n),
                this.node = e.findNode(t, this.parsedPath.nodeName),
                this.rootNode = t,
                this.getValue = this._getValue_unbound,
                this.setValue = this._setValue_unbound
            }
            return x(e, [{
                key: "_getValue_unavailable",
                value: function() {}
            }, {
                key: "_setValue_unavailable",
                value: function() {}
            }, {
                key: "_getValue_direct",
                value: function(e, t) {
                    e[t] = this.targetObject[this.propertyName]
                }
            }, {
                key: "_getValue_array",
                value: function(e, t) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        e[t++] = n[r]
                }
            }, {
                key: "_getValue_arrayElement",
                value: function(e, t) {
                    e[t] = this.resolvedProperty[this.propertyIndex]
                }
            }, {
                key: "_getValue_toArray",
                value: function(e, t) {
                    this.resolvedProperty.toArray(e, t)
                }
            }, {
                key: "_setValue_direct",
                value: function(e, t) {
                    this.targetObject[this.propertyName] = e[t]
                }
            }, {
                key: "_setValue_direct_setNeedsUpdate",
                value: function(e, t) {
                    this.targetObject[this.propertyName] = e[t],
                    this.targetObject.needsUpdate = !0
                }
            }, {
                key: "_setValue_direct_setMatrixWorldNeedsUpdate",
                value: function(e, t) {
                    this.targetObject[this.propertyName] = e[t],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
            }, {
                key: "_setValue_array",
                value: function(e, t) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        n[r] = e[t++]
                }
            }, {
                key: "_setValue_array_setNeedsUpdate",
                value: function(e, t) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        n[r] = e[t++];
                    this.targetObject.needsUpdate = !0
                }
            }, {
                key: "_setValue_array_setMatrixWorldNeedsUpdate",
                value: function(e, t) {
                    for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r)
                        n[r] = e[t++];
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
            }, {
                key: "_setValue_arrayElement",
                value: function(e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t]
                }
            }, {
                key: "_setValue_arrayElement_setNeedsUpdate",
                value: function(e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t],
                    this.targetObject.needsUpdate = !0
                }
            }, {
                key: "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
                value: function(e, t) {
                    this.resolvedProperty[this.propertyIndex] = e[t],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
            }, {
                key: "_setValue_fromArray",
                value: function(e, t) {
                    this.resolvedProperty.fromArray(e, t)
                }
            }, {
                key: "_setValue_fromArray_setNeedsUpdate",
                value: function(e, t) {
                    this.resolvedProperty.fromArray(e, t),
                    this.targetObject.needsUpdate = !0
                }
            }, {
                key: "_setValue_fromArray_setMatrixWorldNeedsUpdate",
                value: function(e, t) {
                    this.resolvedProperty.fromArray(e, t),
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
            }, {
                key: "_getValue_unbound",
                value: function(e, t) {
                    this.bind(),
                    this.getValue(e, t)
                }
            }, {
                key: "_setValue_unbound",
                value: function(e, t) {
                    this.bind(),
                    this.setValue(e, t)
                }
            }, {
                key: "bind",
                value: function() {
                    var t = this.node
                      , n = this.parsedPath
                      , r = n.objectName
                      , i = n.propertyName
                      , a = n.propertyIndex;
                    if (t || (t = e.findNode(this.rootNode, n.nodeName),
                    this.node = t),
                    this.getValue = this._getValue_unavailable,
                    this.setValue = this._setValue_unavailable,
                    t) {
                        if (r) {
                            var o = n.objectIndex;
                            switch (r) {
                            case "materials":
                                if (!t.material)
                                    return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                                if (!t.material.materials)
                                    return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                                t = t.material.materials;
                                break;
                            case "bones":
                                if (!t.skeleton)
                                    return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                                t = t.skeleton.bones;
                                for (var s = 0; s < t.length; s++)
                                    if (t[s].name === o) {
                                        o = s;
                                        break
                                    }
                                break;
                            case "map":
                                if ("map"in t) {
                                    t = t.map;
                                    break
                                }
                                if (!t.material)
                                    return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                                if (!t.material.map)
                                    return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.", this);
                                t = t.material.map;
                                break;
                            default:
                                if (void 0 === t[r])
                                    return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                                t = t[r]
                            }
                            if (void 0 !== o) {
                                if (void 0 === t[o])
                                    return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                                t = t[o]
                            }
                        }
                        var l = t[i];
                        if (void 0 !== l) {
                            var u = this.Versioning.None;
                            this.targetObject = t,
                            !0 === t.isMaterial ? u = this.Versioning.NeedsUpdate : !0 === t.isObject3D && (u = this.Versioning.MatrixWorldNeedsUpdate);
                            var c = this.BindingType.Direct;
                            if (void 0 !== a) {
                                if ("morphTargetInfluences" === i) {
                                    if (!t.geometry)
                                        return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                                    if (!t.geometry.morphAttributes)
                                        return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                    void 0 !== t.morphTargetDictionary[a] && (a = t.morphTargetDictionary[a])
                                }
                                c = this.BindingType.ArrayElement,
                                this.resolvedProperty = l,
                                this.propertyIndex = a
                            } else
                                void 0 !== l.fromArray && void 0 !== l.toArray ? (c = this.BindingType.HasFromToArray,
                                this.resolvedProperty = l) : Array.isArray(l) ? (c = this.BindingType.EntireArray,
                                this.resolvedProperty = l) : this.propertyName = i;
                            this.getValue = this.GetterByBindingType[c],
                            this.setValue = this.SetterByBindingTypeAndVersioning[c][u]
                        } else {
                            var d = n.nodeName;
                            console.error("THREE.PropertyBinding: Trying to update property for track: " + d + "." + i + " but it wasn't found.", t)
                        }
                    } else
                        console.warn("THREE.PropertyBinding: No target node found for track: " + this.path + ".")
                }
            }, {
                key: "unbind",
                value: function() {
                    this.node = null,
                    this.getValue = this._getValue_unbound,
                    this.setValue = this._setValue_unbound
                }
            }], [{
                key: "create",
                value: function(t, n, r) {
                    return t && t.isAnimationObjectGroup ? new e.Composite(t,n,r) : new e(t,n,r)
                }
            }, {
                key: "sanitizeNodeName",
                value: function(e) {
                    return e.replace(/\s/g, "_").replace(za, "")
                }
            }, {
                key: "parseTrackName",
                value: function(e) {
                    var t = Ha.exec(e);
                    if (null === t)
                        throw new Error("PropertyBinding: Cannot parse trackName: " + e);
                    var n = {
                        nodeName: t[2],
                        objectName: t[3],
                        objectIndex: t[4],
                        propertyName: t[5],
                        propertyIndex: t[6]
                    }
                      , r = n.nodeName && n.nodeName.lastIndexOf(".");
                    if (void 0 !== r && -1 !== r) {
                        var i = n.nodeName.substring(r + 1);
                        -1 !== Ga.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r),
                        n.objectName = i)
                    }
                    if (null === n.propertyName || 0 === n.propertyName.length)
                        throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
                    return n
                }
            }, {
                key: "findNode",
                value: function(e, t) {
                    if (void 0 === t || "" === t || "." === t || -1 === t || t === e.name || t === e.uuid)
                        return e;
                    if (e.skeleton) {
                        var n = e.skeleton.getBoneByName(t);
                        if (void 0 !== n)
                            return n
                    }
                    if (e.children) {
                        var r = function e(n) {
                            for (var r = 0; r < n.length; r++) {
                                var i = n[r];
                                if (i.name === t || i.uuid === t)
                                    return i;
                                var a = e(i.children);
                                if (a)
                                    return a
                            }
                            return null
                        }(e.children);
                        if (r)
                            return r
                    }
                    return null
                }
            }]),
            e
        }();
        Xa.Composite = Wa,
        Xa.prototype.BindingType = {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3
        },
        Xa.prototype.Versioning = {
            None: 0,
            NeedsUpdate: 1,
            MatrixWorldNeedsUpdate: 2
        },
        Xa.prototype.GetterByBindingType = [Xa.prototype._getValue_direct, Xa.prototype._getValue_array, Xa.prototype._getValue_arrayElement, Xa.prototype._getValue_toArray],
        Xa.prototype.SetterByBindingTypeAndVersioning = [[Xa.prototype._setValue_direct, Xa.prototype._setValue_direct_setNeedsUpdate, Xa.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [Xa.prototype._setValue_array, Xa.prototype._setValue_array_setNeedsUpdate, Xa.prototype._setValue_array_setMatrixWorldNeedsUpdate], [Xa.prototype._setValue_arrayElement, Xa.prototype._setValue_arrayElement_setNeedsUpdate, Xa.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [Xa.prototype._setValue_fromArray, Xa.prototype._setValue_fromArray_setNeedsUpdate, Xa.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];
        new Float32Array(1);
        function ja(e, t, n, r) {
            var i = function(e) {
                switch (e) {
                case H:
                case G:
                    return {
                        byteLength: 1,
                        components: 1
                    };
                case X:
                case W:
                case K:
                    return {
                        byteLength: 2,
                        components: 1
                    };
                case Z:
                case Q:
                    return {
                        byteLength: 2,
                        components: 4
                    };
                case q:
                case j:
                case Y:
                    return {
                        byteLength: 4,
                        components: 1
                    };
                case $:
                    return {
                        byteLength: 4,
                        components: 3
                    }
                }
                throw new Error("Unknown texture type ".concat(e, "."))
            }(r);
            switch (n) {
            case ee:
            case re:
                return e * t;
            case ie:
                return e * t * 2;
            case se:
            case le:
                return e * t / i.components * i.byteLength;
            case ue:
            case ce:
                return e * t * 2 / i.components * i.byteLength;
            case te:
                return e * t * 3 / i.components * i.byteLength;
            case ne:
            case de:
                return e * t * 4 / i.components * i.byteLength;
            case fe:
            case he:
                return Math.floor((e + 3) / 4) * Math.floor((t + 3) / 4) * 8;
            case pe:
            case me:
                return Math.floor((e + 3) / 4) * Math.floor((t + 3) / 4) * 16;
            case ge:
            case ye:
                return Math.max(e, 16) * Math.max(t, 8) / 4;
            case ve:
            case _e:
                return Math.max(e, 8) * Math.max(t, 8) / 2;
            case xe:
            case be:
                return Math.floor((e + 3) / 4) * Math.floor((t + 3) / 4) * 8;
            case Se:
            case Me:
                return Math.floor((e + 3) / 4) * Math.floor((t + 3) / 4) * 16;
            case Ee:
                return Math.floor((e + 4) / 5) * Math.floor((t + 3) / 4) * 16;
            case Te:
                return Math.floor((e + 4) / 5) * Math.floor((t + 4) / 5) * 16;
            case we:
                return Math.floor((e + 5) / 6) * Math.floor((t + 4) / 5) * 16;
            case Ae:
                return Math.floor((e + 5) / 6) * Math.floor((t + 5) / 6) * 16;
            case Re:
                return Math.floor((e + 7) / 8) * Math.floor((t + 4) / 5) * 16;
            case Ce:
                return Math.floor((e + 7) / 8) * Math.floor((t + 5) / 6) * 16;
            case ke:
                return Math.floor((e + 7) / 8) * Math.floor((t + 7) / 8) * 16;
            case Pe:
                return Math.floor((e + 9) / 10) * Math.floor((t + 4) / 5) * 16;
            case Le:
                return Math.floor((e + 9) / 10) * Math.floor((t + 5) / 6) * 16;
            case Ue:
                return Math.floor((e + 9) / 10) * Math.floor((t + 7) / 8) * 16;
            case De:
                return Math.floor((e + 9) / 10) * Math.floor((t + 9) / 10) * 16;
            case Ne:
                return Math.floor((e + 11) / 12) * Math.floor((t + 9) / 10) * 16;
            case Ie:
                return Math.floor((e + 11) / 12) * Math.floor((t + 11) / 12) * 16;
            case Oe:
            case Fe:
            case ze:
                return Math.ceil(e / 4) * Math.ceil(t / 4) * 16;
            case Be:
            case Ve:
                return Math.ceil(e / 4) * Math.ceil(t / 4) * 8;
            case He:
            case Ge:
                return Math.ceil(e / 4) * Math.ceil(t / 4) * 16
            }
            throw new Error("Unable to determine texture byte length for ".concat(n, " format."))
        }
        var qa;
        function Ya() {
            var e = null
              , t = !1
              , n = null
              , r = null;
            function i(t, a) {
                n(t, a),
                r = e.requestAnimationFrame(i)
            }
            return {
                start: function() {
                    !0 !== t && null !== n && (r = e.requestAnimationFrame(i),
                    t = !0)
                },
                stop: function() {
                    e.cancelAnimationFrame(r),
                    t = !1
                },
                setAnimationLoop: function(e) {
                    n = e
                },
                setContext: function(t) {
                    e = t
                }
            }
        }
        function Ka(e) {
            var t = new WeakMap;
            return {
                get: function(e) {
                    return e.isInterleavedBufferAttribute && (e = e.data),
                    t.get(e)
                },
                remove: function(n) {
                    n.isInterleavedBufferAttribute && (n = n.data);
                    var r = t.get(n);
                    r && (e.deleteBuffer(r.buffer),
                    t.delete(n))
                },
                update: function(n, r) {
                    if (n.isInterleavedBufferAttribute && (n = n.data),
                    n.isGLBufferAttribute) {
                        var i = t.get(n);
                        (!i || i.version < n.version) && t.set(n, {
                            buffer: n.buffer,
                            type: n.type,
                            bytesPerElement: n.elementSize,
                            version: n.version
                        })
                    } else {
                        var a = t.get(n);
                        if (void 0 === a)
                            t.set(n, function(t, n) {
                                var r, i = t.array, a = t.usage, o = i.byteLength, s = e.createBuffer();
                                if (e.bindBuffer(n, s),
                                e.bufferData(n, i, a),
                                t.onUploadCallback(),
                                i instanceof Float32Array)
                                    r = e.FLOAT;
                                else if (i instanceof Uint16Array)
                                    r = t.isFloat16BufferAttribute ? e.HALF_FLOAT : e.UNSIGNED_SHORT;
                                else if (i instanceof Int16Array)
                                    r = e.SHORT;
                                else if (i instanceof Uint32Array)
                                    r = e.UNSIGNED_INT;
                                else if (i instanceof Int32Array)
                                    r = e.INT;
                                else if (i instanceof Int8Array)
                                    r = e.BYTE;
                                else if (i instanceof Uint8Array)
                                    r = e.UNSIGNED_BYTE;
                                else {
                                    if (!(i instanceof Uint8ClampedArray))
                                        throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: " + i);
                                    r = e.UNSIGNED_BYTE
                                }
                                return {
                                    buffer: s,
                                    type: r,
                                    bytesPerElement: i.BYTES_PER_ELEMENT,
                                    version: t.version,
                                    size: o
                                }
                            }(n, r));
                        else if (a.version < n.version) {
                            if (a.size !== n.array.byteLength)
                                throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");
                            !function(t, n, r) {
                                var i = n.array
                                  , a = n.updateRanges;
                                if (e.bindBuffer(r, t),
                                0 === a.length)
                                    e.bufferSubData(r, 0, i);
                                else {
                                    a.sort((function(e, t) {
                                        return e.start - t.start
                                    }
                                    ));
                                    for (var o = 0, s = 1; s < a.length; s++) {
                                        var l = a[o]
                                          , u = a[s];
                                        u.start <= l.start + l.count + 1 ? l.count = Math.max(l.count, u.start + u.count - l.start) : a[++o] = u
                                    }
                                    a.length = o + 1;
                                    for (var c = 0, d = a.length; c < d; c++) {
                                        var f = a[c];
                                        e.bufferSubData(r, f.start * i.BYTES_PER_ELEMENT, i, f.start, f.count)
                                    }
                                    n.clearUpdateRanges()
                                }
                                n.onUploadCallback()
                            }(a.buffer, n, r),
                            a.version = n.version
                        }
                    }
                }
            }
        }
        "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{
            detail: {
                revision: A
            }
        })),
        "undefined" !== typeof window && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = A);
        var Za = {
            alphahash_fragment: "#ifdef USE_ALPHAHASH\n\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",
            alphahash_pars_fragment: "#ifdef USE_ALPHAHASH\n\tconst float ALPHA_HASH_SCALE = 0.05;\n\tfloat hash2D( vec2 value ) {\n\t\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n\t}\n\tfloat hash3D( vec3 value ) {\n\t\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\n\t}\n\tfloat getAlphaHashThreshold( vec3 position ) {\n\t\tfloat maxDeriv = max(\n\t\t\tlength( dFdx( position.xyz ) ),\n\t\t\tlength( dFdy( position.xyz ) )\n\t\t);\n\t\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n\t\tvec2 pixScales = vec2(\n\t\t\texp2( floor( log2( pixScale ) ) ),\n\t\t\texp2( ceil( log2( pixScale ) ) )\n\t\t);\n\t\tvec2 alpha = vec2(\n\t\t\thash3D( floor( pixScales.x * position.xyz ) ),\n\t\t\thash3D( floor( pixScales.y * position.xyz ) )\n\t\t);\n\t\tfloat lerpFactor = fract( log2( pixScale ) );\n\t\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n\t\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\n\t\tvec3 cases = vec3(\n\t\t\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\n\t\t\t( x - 0.5 * a ) / ( 1.0 - a ),\n\t\t\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n\t\t);\n\t\tfloat threshold = ( x < ( 1.0 - a ) )\n\t\t\t? ( ( x < a ) ? cases.x : cases.y )\n\t\t\t: cases.z;\n\t\treturn clamp( threshold , 1.0e-6, 1.0 );\n\t}\n#endif",
            alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",
            alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
            alphatest_fragment: "#ifdef USE_ALPHATEST\n\t#ifdef ALPHA_TO_COVERAGE\n\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\tif ( diffuseColor.a < alphaTest ) discard;\n\t#endif\n#endif",
            alphatest_pars_fragment: "#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",
            aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_CLEARCOAT ) \n\t\tclearcoatSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_SHEEN ) \n\t\tsheenSpecularIndirect *= ambientOcclusion;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",
            aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
            batching_pars_vertex: "#ifdef USE_BATCHING\n\t#if ! defined( GL_ANGLE_multi_draw )\n\t#define gl_DrawID _gl_DrawID\n\tuniform int _gl_DrawID;\n\t#endif\n\tuniform highp sampler2D batchingTexture;\n\tuniform highp usampler2D batchingIdTexture;\n\tmat4 getBatchingMatrix( const in float i ) {\n\t\tint size = textureSize( batchingTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n\tfloat getIndirectIndex( const in int i ) {\n\t\tint size = textureSize( batchingIdTexture, 0 ).x;\n\t\tint x = i % size;\n\t\tint y = i / size;\n\t\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n\t}\n#endif\n#ifdef USE_BATCHING_COLOR\n\tuniform sampler2D batchingColorTexture;\n\tvec3 getBatchingColor( const in float i ) {\n\t\tint size = textureSize( batchingColorTexture, 0 ).x;\n\t\tint j = int( i );\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n\t}\n#endif",
            batching_vertex: "#ifdef USE_BATCHING\n\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",
            begin_vertex: "vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n\tvPosition = vec3( position );\n#endif",
            beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
            bsdfs: "float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",
            iridescence_fragment: "#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\treturn vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",
            bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n\t\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
            clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#ifdef ALPHA_TO_COVERAGE\n\t\tfloat distanceToPlane, distanceGradient;\n\t\tfloat clipOpacity = 1.0;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\tif ( clipOpacity == 0.0 ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tfloat unionClipOpacity = 1.0;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n\t\t\t\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\n\t\t\t\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tclipOpacity *= 1.0 - unionClipOpacity;\n\t\t#endif\n\t\tdiffuseColor.a *= clipOpacity;\n\t\tif ( diffuseColor.a == 0.0 ) discard;\n\t#else\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\t\tbool clipped = true;\n\t\t\t#pragma unroll_loop_start\n\t\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\t\tplane = clippingPlanes[ i ];\n\t\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t\t}\n\t\t\t#pragma unroll_loop_end\n\t\t\tif ( clipped ) discard;\n\t\t#endif\n\t#endif\n#endif",
            clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
            clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
            clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
            color_fragment: "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",
            color_pars_fragment: "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",
            color_pars_vertex: "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvarying vec3 vColor;\n#endif",
            color_vertex: "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n\tvColor.xyz *= batchingColor.xyz;\n#endif",
            common: "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n\tvarying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",
            cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
            defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n\tmat3 bm = mat3( batchingMatrix );\n\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n\ttransformedNormal = bm * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = bm * transformedTangent;\n\t#endif\n#endif\n#ifdef USE_INSTANCING\n\tmat3 im = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n\ttransformedNormal = im * transformedNormal;\n\t#ifdef USE_TANGENT\n\t\ttransformedTangent = im * transformedTangent;\n\t#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
            displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
            displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",
            emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n\t\temissiveColor = sRGBTransferEOTF( emissiveColor );\n\t#endif\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
            emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
            colorspace_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
            colorspace_pars_fragment: "vec4 LinearTransferOETF( in vec4 value ) {\n\treturn value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",
            envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
            envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform mat3 envMapRotation;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
            envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
            envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
            envmap_physical_pars_fragment: "#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",
            envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
            fog_vertex: "#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",
            fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",
            fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
            fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
            gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",
            lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
            lights_lambert_fragment: "LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",
            lights_lambert_pars_fragment: "varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",
            lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n\tuniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif ( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometryPosition;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",
            lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
            lights_toon_pars_fragment: "varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",
            lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
            lights_phong_pars_fragment: "varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",
            lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n\tmaterial.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tif( material.anisotropy == 0.0 ) {\n\t\tanisotropyV = vec2( 1.0, 0.0 );\n\t} else {\n\t\tanisotropyV /= material.anisotropy;\n\t\tmaterial.anisotropy = saturate( material.anisotropy );\n\t}\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",
            lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\tfloat dispersion;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometryNormal;\n\t\tvec3 viewDir = geometryViewDir;\n\t\tvec3 position = geometryPosition;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
            lights_fragment_begin: "\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n\tgeometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometryPosition, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#if defined( USE_LIGHT_PROBES )\n\t\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
            lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometryNormal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",
            lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",
            logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF )\n\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
            logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
            logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
            logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\tvFragDepth = 1.0 + gl_Position.w;\n\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",
            map_fragment: "#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",
            map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
            map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
            map_particle_pars_fragment: "#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
            metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
            metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
            morphinstance_vertex: "#ifdef USE_INSTANCING_MORPH\n\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n\t}\n#endif",
            morphcolor_vertex: "#if defined( USE_MORPHCOLORS )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",
            morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",
            morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_INSTANCING_MORPH\n\t\tuniform float morphTargetBaseInfluence;\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t#endif\n\tuniform sampler2DArray morphTargetsTexture;\n\tuniform ivec2 morphTargetsTextureSize;\n\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t}\n#endif",
            morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t}\n#endif",
            normal_fragment_begin: "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\n\t\t#if defined( USE_NORMALMAP )\n\t\t\tvNormalMapUv\n\t\t#elif defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tvClearcoatNormalMapUv\n\t\t#else\n\t\t\tvUv\n\t\t#endif\n\t\t);\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 nonPerturbedNormal = normal;",
            normal_fragment_maps: "#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
            normal_pars_fragment: "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
            normal_pars_vertex: "#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",
            normal_vertex: "#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",
            normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",
            clearcoat_normal_fragment_begin: "#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = nonPerturbedNormal;\n#endif",
            clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",
            clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",
            iridescence_pars_fragment: "#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",
            opaque_fragment: "#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",
            packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec4( 0., 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec4( 1., 1., 1., 1. );\n\tfloat vuf;\n\tfloat af = modf( v * PackFactors.a, vuf );\n\tfloat bf = modf( vuf * ShiftRight8, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec3( 0., 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec3( 1., 1., 1. );\n\tfloat vuf;\n\tfloat bf = modf( v * PackFactors.b, vuf );\n\tfloat gf = modf( vuf * ShiftRight8, vuf );\n\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n\tif( v <= 0.0 )\n\t\treturn vec2( 0., 0. );\n\tif( v >= 1.0 )\n\t\treturn vec2( 1., 1. );\n\tfloat vuf;\n\tfloat gf = modf( v * 256., vuf );\n\treturn vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n\treturn dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",
            premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
            project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n\tmvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
            dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
            dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
            roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
            roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
            shadowmap_pars_fragment: "#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tfloat shadow = 1.0;\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\t\n\t\tfloat lightToPositionLength = length( lightToPosition );\n\t\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n\t\t\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\t\tdp += shadowBias;\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\t\tshadow = (\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t\t) * ( 1.0 / 9.0 );\n\t\t\t#else\n\t\t\t\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t\t#endif\n\t\t}\n\t\treturn mix( 1.0, shadow, shadowIntensity );\n\t}\n#endif",
            shadowmap_pars_vertex: "#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowIntensity;\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
            shadowmap_vertex: "#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",
            shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
            skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
            skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tint size = textureSize( boneTexture, 0 ).x;\n\t\tint j = int( i ) * 4;\n\t\tint x = j % size;\n\t\tint y = j / size;\n\t\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n\t\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n\t\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n\t\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n\t\treturn mat4( v1, v2, v3, v4 );\n\t}\n#endif",
            skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
            skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
            specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
            specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
            tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
            tonemapping_pars_fragment: "#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n\tvec3( 1.6605, - 0.1246, - 0.0182 ),\n\tvec3( - 0.5876, 1.1329, - 0.1006 ),\n\tvec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n\tvec3( 0.6274, 0.0691, 0.0164 ),\n\tvec3( 0.3293, 0.9195, 0.0880 ),\n\tvec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n\tvec3 x2 = x * x;\n\tvec3 x4 = x2 * x2;\n\treturn + 15.5 * x4 * x2\n\t\t- 40.14 * x4 * x\n\t\t+ 31.96 * x4\n\t\t- 6.868 * x2 * x\n\t\t+ 0.4298 * x2\n\t\t+ 0.1191 * x\n\t\t- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n\tconst mat3 AgXInsetMatrix = mat3(\n\t\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n\t\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n\t\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n\t);\n\tconst mat3 AgXOutsetMatrix = mat3(\n\t\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n\t\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n\t\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n\t);\n\tconst float AgxMinEv = - 12.47393;\tconst float AgxMaxEv = 4.026069;\n\tcolor *= toneMappingExposure;\n\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n\tcolor = AgXInsetMatrix * color;\n\tcolor = max( color, 1e-10 );\tcolor = log2( color );\n\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n\tcolor = clamp( color, 0.0, 1.0 );\n\tcolor = agxDefaultContrastApprox( color );\n\tcolor = AgXOutsetMatrix * color;\n\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n\tcolor = clamp( color, 0.0, 1.0 );\n\treturn color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n\tconst float StartCompression = 0.8 - 0.04;\n\tconst float Desaturation = 0.15;\n\tcolor *= toneMappingExposure;\n\tfloat x = min( color.r, min( color.g, color.b ) );\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max( color.r, max( color.g, color.b ) );\n\tif ( peak < StartCompression ) return color;\n\tfloat d = 1. - StartCompression;\n\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n\treturn mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
            transmission_fragment: "#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",
            transmission_pars_fragment: "#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec4 transmittedLight;\n\t\tvec3 transmittance;\n\t\t#ifdef USE_DISPERSION\n\t\t\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n\t\t\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n\t\t\tfor ( int i = 0; i < 3; i ++ ) {\n\t\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n\t\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\t\trefractionCoords += 1.0;\n\t\t\t\trefractionCoords /= 2.0;\n\t\t\t\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n\t\t\t\ttransmittedLight[ i ] = transmissionSample[ i ];\n\t\t\t\ttransmittedLight.a += transmissionSample.a;\n\t\t\t\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n\t\t\t}\n\t\t\ttransmittedLight.a /= 3.0;\n\t\t#else\n\t\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\t\trefractionCoords += 1.0;\n\t\t\trefractionCoords /= 2.0;\n\t\t\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\t\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\t#endif\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",
            uv_pars_fragment: "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
            uv_pars_vertex: "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",
            uv_vertex: "#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",
            worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_BATCHING\n\t\tworldPosition = batchingMatrix * worldPosition;\n\t#endif\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
            background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
            background_frag: "uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
            backgroundCube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
            backgroundCube_frag: "#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
            cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
            cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
            depth_vert: "#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
            depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#elif DEPTH_PACKING == 3202\n\t\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n\t#elif DEPTH_PACKING == 3203\n\t\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n\t#endif\n}",
            distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <skinbase_vertex>\n\t#include <morphinstance_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
            distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <clipping_planes_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
            equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
            equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n}",
            linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
            linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
            meshbasic_vert: "#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
            meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
            meshlambert_vert: "#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
            meshlambert_frag: "#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
            meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
            meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
            meshnormal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
            meshnormal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",
            meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
            meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
            meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",
            meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n\tuniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n\t#endif\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
            meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
            meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
            points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
            points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
            shadow_vert: "#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <batching_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphinstance_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
            shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}",
            sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix[ 3 ];\n\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
            sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <alphahash_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <opaque_fragment>\n\t#include <tonemapping_fragment>\n\t#include <colorspace_fragment>\n\t#include <fog_fragment>\n}"
        }
          , Qa = {
            common: {
                diffuse: {
                    value: new gr(16777215)
                },
                opacity: {
                    value: 1
                },
                map: {
                    value: null
                },
                mapTransform: {
                    value: new yt
                },
                alphaMap: {
                    value: null
                },
                alphaMapTransform: {
                    value: new yt
                },
                alphaTest: {
                    value: 0
                }
            },
            specularmap: {
                specularMap: {
                    value: null
                },
                specularMapTransform: {
                    value: new yt
                }
            },
            envmap: {
                envMap: {
                    value: null
                },
                envMapRotation: {
                    value: new yt
                },
                flipEnvMap: {
                    value: -1
                },
                reflectivity: {
                    value: 1
                },
                ior: {
                    value: 1.5
                },
                refractionRatio: {
                    value: .98
                }
            },
            aomap: {
                aoMap: {
                    value: null
                },
                aoMapIntensity: {
                    value: 1
                },
                aoMapTransform: {
                    value: new yt
                }
            },
            lightmap: {
                lightMap: {
                    value: null
                },
                lightMapIntensity: {
                    value: 1
                },
                lightMapTransform: {
                    value: new yt
                }
            },
            bumpmap: {
                bumpMap: {
                    value: null
                },
                bumpMapTransform: {
                    value: new yt
                },
                bumpScale: {
                    value: 1
                }
            },
            normalmap: {
                normalMap: {
                    value: null
                },
                normalMapTransform: {
                    value: new yt
                },
                normalScale: {
                    value: new _t(1,1)
                }
            },
            displacementmap: {
                displacementMap: {
                    value: null
                },
                displacementMapTransform: {
                    value: new yt
                },
                displacementScale: {
                    value: 1
                },
                displacementBias: {
                    value: 0
                }
            },
            emissivemap: {
                emissiveMap: {
                    value: null
                },
                emissiveMapTransform: {
                    value: new yt
                }
            },
            metalnessmap: {
                metalnessMap: {
                    value: null
                },
                metalnessMapTransform: {
                    value: new yt
                }
            },
            roughnessmap: {
                roughnessMap: {
                    value: null
                },
                roughnessMapTransform: {
                    value: new yt
                }
            },
            gradientmap: {
                gradientMap: {
                    value: null
                }
            },
            fog: {
                fogDensity: {
                    value: 25e-5
                },
                fogNear: {
                    value: 1
                },
                fogFar: {
                    value: 2e3
                },
                fogColor: {
                    value: new gr(16777215)
                }
            },
            lights: {
                ambientLightColor: {
                    value: []
                },
                lightProbe: {
                    value: []
                },
                directionalLights: {
                    value: [],
                    properties: {
                        direction: {},
                        color: {}
                    }
                },
                directionalLightShadows: {
                    value: [],
                    properties: {
                        shadowIntensity: 1,
                        shadowBias: {},
                        shadowNormalBias: {},
                        shadowRadius: {},
                        shadowMapSize: {}
                    }
                },
                directionalShadowMap: {
                    value: []
                },
                directionalShadowMatrix: {
                    value: []
                },
                spotLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        direction: {},
                        distance: {},
                        coneCos: {},
                        penumbraCos: {},
                        decay: {}
                    }
                },
                spotLightShadows: {
                    value: [],
                    properties: {
                        shadowIntensity: 1,
                        shadowBias: {},
                        shadowNormalBias: {},
                        shadowRadius: {},
                        shadowMapSize: {}
                    }
                },
                spotLightMap: {
                    value: []
                },
                spotShadowMap: {
                    value: []
                },
                spotLightMatrix: {
                    value: []
                },
                pointLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        decay: {},
                        distance: {}
                    }
                },
                pointLightShadows: {
                    value: [],
                    properties: {
                        shadowIntensity: 1,
                        shadowBias: {},
                        shadowNormalBias: {},
                        shadowRadius: {},
                        shadowMapSize: {},
                        shadowCameraNear: {},
                        shadowCameraFar: {}
                    }
                },
                pointShadowMap: {
                    value: []
                },
                pointShadowMatrix: {
                    value: []
                },
                hemisphereLights: {
                    value: [],
                    properties: {
                        direction: {},
                        skyColor: {},
                        groundColor: {}
                    }
                },
                rectAreaLights: {
                    value: [],
                    properties: {
                        color: {},
                        position: {},
                        width: {},
                        height: {}
                    }
                },
                ltc_1: {
                    value: null
                },
                ltc_2: {
                    value: null
                }
            },
            points: {
                diffuse: {
                    value: new gr(16777215)
                },
                opacity: {
                    value: 1
                },
                size: {
                    value: 1
                },
                scale: {
                    value: 1
                },
                map: {
                    value: null
                },
                alphaMap: {
                    value: null
                },
                alphaMapTransform: {
                    value: new yt
                },
                alphaTest: {
                    value: 0
                },
                uvTransform: {
                    value: new yt
                }
            },
            sprite: {
                diffuse: {
                    value: new gr(16777215)
                },
                opacity: {
                    value: 1
                },
                center: {
                    value: new _t(.5,.5)
                },
                rotation: {
                    value: 0
                },
                map: {
                    value: null
                },
                mapTransform: {
                    value: new yt
                },
                alphaMap: {
                    value: null
                },
                alphaMapTransform: {
                    value: new yt
                },
                alphaTest: {
                    value: 0
                }
            }
        }
          , Ja = {
            basic: {
                uniforms: Qr([Qa.common, Qa.specularmap, Qa.envmap, Qa.aomap, Qa.lightmap, Qa.fog]),
                vertexShader: Za.meshbasic_vert,
                fragmentShader: Za.meshbasic_frag
            },
            lambert: {
                uniforms: Qr([Qa.common, Qa.specularmap, Qa.envmap, Qa.aomap, Qa.lightmap, Qa.emissivemap, Qa.bumpmap, Qa.normalmap, Qa.displacementmap, Qa.fog, Qa.lights, {
                    emissive: {
                        value: new gr(0)
                    }
                }]),
                vertexShader: Za.meshlambert_vert,
                fragmentShader: Za.meshlambert_frag
            },
            phong: {
                uniforms: Qr([Qa.common, Qa.specularmap, Qa.envmap, Qa.aomap, Qa.lightmap, Qa.emissivemap, Qa.bumpmap, Qa.normalmap, Qa.displacementmap, Qa.fog, Qa.lights, {
                    emissive: {
                        value: new gr(0)
                    },
                    specular: {
                        value: new gr(1118481)
                    },
                    shininess: {
                        value: 30
                    }
                }]),
                vertexShader: Za.meshphong_vert,
                fragmentShader: Za.meshphong_frag
            },
            standard: {
                uniforms: Qr([Qa.common, Qa.envmap, Qa.aomap, Qa.lightmap, Qa.emissivemap, Qa.bumpmap, Qa.normalmap, Qa.displacementmap, Qa.roughnessmap, Qa.metalnessmap, Qa.fog, Qa.lights, {
                    emissive: {
                        value: new gr(0)
                    },
                    roughness: {
                        value: 1
                    },
                    metalness: {
                        value: 0
                    },
                    envMapIntensity: {
                        value: 1
                    }
                }]),
                vertexShader: Za.meshphysical_vert,
                fragmentShader: Za.meshphysical_frag
            },
            toon: {
                uniforms: Qr([Qa.common, Qa.aomap, Qa.lightmap, Qa.emissivemap, Qa.bumpmap, Qa.normalmap, Qa.displacementmap, Qa.gradientmap, Qa.fog, Qa.lights, {
                    emissive: {
                        value: new gr(0)
                    }
                }]),
                vertexShader: Za.meshtoon_vert,
                fragmentShader: Za.meshtoon_frag
            },
            matcap: {
                uniforms: Qr([Qa.common, Qa.bumpmap, Qa.normalmap, Qa.displacementmap, Qa.fog, {
                    matcap: {
                        value: null
                    }
                }]),
                vertexShader: Za.meshmatcap_vert,
                fragmentShader: Za.meshmatcap_frag
            },
            points: {
                uniforms: Qr([Qa.points, Qa.fog]),
                vertexShader: Za.points_vert,
                fragmentShader: Za.points_frag
            },
            dashed: {
                uniforms: Qr([Qa.common, Qa.fog, {
                    scale: {
                        value: 1
                    },
                    dashSize: {
                        value: 1
                    },
                    totalSize: {
                        value: 2
                    }
                }]),
                vertexShader: Za.linedashed_vert,
                fragmentShader: Za.linedashed_frag
            },
            depth: {
                uniforms: Qr([Qa.common, Qa.displacementmap]),
                vertexShader: Za.depth_vert,
                fragmentShader: Za.depth_frag
            },
            normal: {
                uniforms: Qr([Qa.common, Qa.bumpmap, Qa.normalmap, Qa.displacementmap, {
                    opacity: {
                        value: 1
                    }
                }]),
                vertexShader: Za.meshnormal_vert,
                fragmentShader: Za.meshnormal_frag
            },
            sprite: {
                uniforms: Qr([Qa.sprite, Qa.fog]),
                vertexShader: Za.sprite_vert,
                fragmentShader: Za.sprite_frag
            },
            background: {
                uniforms: {
                    uvTransform: {
                        value: new yt
                    },
                    t2D: {
                        value: null
                    },
                    backgroundIntensity: {
                        value: 1
                    }
                },
                vertexShader: Za.background_vert,
                fragmentShader: Za.background_frag
            },
            backgroundCube: {
                uniforms: {
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    backgroundBlurriness: {
                        value: 0
                    },
                    backgroundIntensity: {
                        value: 1
                    },
                    backgroundRotation: {
                        value: new yt
                    }
                },
                vertexShader: Za.backgroundCube_vert,
                fragmentShader: Za.backgroundCube_frag
            },
            cube: {
                uniforms: {
                    tCube: {
                        value: null
                    },
                    tFlip: {
                        value: -1
                    },
                    opacity: {
                        value: 1
                    }
                },
                vertexShader: Za.cube_vert,
                fragmentShader: Za.cube_frag
            },
            equirect: {
                uniforms: {
                    tEquirect: {
                        value: null
                    }
                },
                vertexShader: Za.equirect_vert,
                fragmentShader: Za.equirect_frag
            },
            distanceRGBA: {
                uniforms: Qr([Qa.common, Qa.displacementmap, {
                    referencePosition: {
                        value: new Yt
                    },
                    nearDistance: {
                        value: 1
                    },
                    farDistance: {
                        value: 1e3
                    }
                }]),
                vertexShader: Za.distanceRGBA_vert,
                fragmentShader: Za.distanceRGBA_frag
            },
            shadow: {
                uniforms: Qr([Qa.lights, Qa.fog, {
                    color: {
                        value: new gr(0)
                    },
                    opacity: {
                        value: 1
                    }
                }]),
                vertexShader: Za.shadow_vert,
                fragmentShader: Za.shadow_frag
            }
        };
        Ja.physical = {
            uniforms: Qr([Ja.standard.uniforms, {
                clearcoat: {
                    value: 0
                },
                clearcoatMap: {
                    value: null
                },
                clearcoatMapTransform: {
                    value: new yt
                },
                clearcoatNormalMap: {
                    value: null
                },
                clearcoatNormalMapTransform: {
                    value: new yt
                },
                clearcoatNormalScale: {
                    value: new _t(1,1)
                },
                clearcoatRoughness: {
                    value: 0
                },
                clearcoatRoughnessMap: {
                    value: null
                },
                clearcoatRoughnessMapTransform: {
                    value: new yt
                },
                dispersion: {
                    value: 0
                },
                iridescence: {
                    value: 0
                },
                iridescenceMap: {
                    value: null
                },
                iridescenceMapTransform: {
                    value: new yt
                },
                iridescenceIOR: {
                    value: 1.3
                },
                iridescenceThicknessMinimum: {
                    value: 100
                },
                iridescenceThicknessMaximum: {
                    value: 400
                },
                iridescenceThicknessMap: {
                    value: null
                },
                iridescenceThicknessMapTransform: {
                    value: new yt
                },
                sheen: {
                    value: 0
                },
                sheenColor: {
                    value: new gr(0)
                },
                sheenColorMap: {
                    value: null
                },
                sheenColorMapTransform: {
                    value: new yt
                },
                sheenRoughness: {
                    value: 1
                },
                sheenRoughnessMap: {
                    value: null
                },
                sheenRoughnessMapTransform: {
                    value: new yt
                },
                transmission: {
                    value: 0
                },
                transmissionMap: {
                    value: null
                },
                transmissionMapTransform: {
                    value: new yt
                },
                transmissionSamplerSize: {
                    value: new _t
                },
                transmissionSamplerMap: {
                    value: null
                },
                thickness: {
                    value: 0
                },
                thicknessMap: {
                    value: null
                },
                thicknessMapTransform: {
                    value: new yt
                },
                attenuationDistance: {
                    value: 0
                },
                attenuationColor: {
                    value: new gr(0)
                },
                specularColor: {
                    value: new gr(1,1,1)
                },
                specularColorMap: {
                    value: null
                },
                specularColorMapTransform: {
                    value: new yt
                },
                specularIntensity: {
                    value: 1
                },
                specularIntensityMap: {
                    value: null
                },
                specularIntensityMapTransform: {
                    value: new yt
                },
                anisotropyVector: {
                    value: new _t
                },
                anisotropyMap: {
                    value: null
                },
                anisotropyMapTransform: {
                    value: new yt
                }
            }]),
            vertexShader: Za.meshphysical_vert,
            fragmentShader: Za.meshphysical_frag
        };
        var $a = {
            r: 0,
            b: 0,
            g: 0
        }
          , eo = new Nn
          , to = new Tn;
        function no(e, t, n, r, i, a, o) {
            var s, l, u = new gr(0), c = !0 === a ? 0 : 1, d = null, f = 0, h = null;
            function p(e) {
                var r = !0 === e.isScene ? e.background : null;
                r && r.isTexture && (r = (e.backgroundBlurriness > 0 ? n : t).get(r));
                return r
            }
            function m(t, n) {
                t.getRGB($a, Jr(e)),
                r.buffers.color.setClear($a.r, $a.g, $a.b, n, o)
            }
            return {
                getClearColor: function() {
                    return u
                },
                setClearColor: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                    u.set(e),
                    m(u, c = t)
                },
                getClearAlpha: function() {
                    return c
                },
                setClearAlpha: function(e) {
                    m(u, c = e)
                },
                render: function(t) {
                    var n = !1
                      , i = p(t);
                    null === i ? m(u, c) : i && i.isColor && (m(i, 1),
                    n = !0);
                    var a = e.xr.getEnvironmentBlendMode();
                    "additive" === a ? r.buffers.color.setClear(0, 0, 0, 1, o) : "alpha-blend" === a && r.buffers.color.setClear(0, 0, 0, 0, o),
                    (e.autoClear || n) && (r.buffers.depth.setTest(!0),
                    r.buffers.depth.setMask(!0),
                    r.buffers.color.setMask(!0),
                    e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil))
                },
                addToRenderList: function(t, n) {
                    var r = p(n);
                    r && (r.isCubeTexture || r.mapping === U) ? (void 0 === l && ((l = new qr(new Kr(1,1,1),new ti({
                        name: "BackgroundCubeMaterial",
                        uniforms: Zr(Ja.backgroundCube.uniforms),
                        vertexShader: Ja.backgroundCube.vertexShader,
                        fragmentShader: Ja.backgroundCube.fragmentShader,
                        side: 1,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.deleteAttribute("normal"),
                    l.geometry.deleteAttribute("uv"),
                    l.onBeforeRender = function(e, t, n) {
                        this.matrixWorld.copyPosition(n.matrixWorld)
                    }
                    ,
                    Object.defineProperty(l.material, "envMap", {
                        get: function() {
                            return this.uniforms.envMap.value
                        }
                    }),
                    i.update(l)),
                    eo.copy(n.backgroundRotation),
                    eo.x *= -1,
                    eo.y *= -1,
                    eo.z *= -1,
                    r.isCubeTexture && !1 === r.isRenderTargetTexture && (eo.y *= -1,
                    eo.z *= -1),
                    l.material.uniforms.envMap.value = r,
                    l.material.uniforms.flipEnvMap.value = r.isCubeTexture && !1 === r.isRenderTargetTexture ? -1 : 1,
                    l.material.uniforms.backgroundBlurriness.value = n.backgroundBlurriness,
                    l.material.uniforms.backgroundIntensity.value = n.backgroundIntensity,
                    l.material.uniforms.backgroundRotation.value.setFromMatrix4(to.makeRotationFromEuler(eo)),
                    l.material.toneMapped = Ut.getTransfer(r.colorSpace) !== et,
                    d === r && f === r.version && h === e.toneMapping || (l.material.needsUpdate = !0,
                    d = r,
                    f = r.version,
                    h = e.toneMapping),
                    l.layers.enableAll(),
                    t.unshift(l, l.geometry, l.material, 0, 0, null)) : r && r.isTexture && (void 0 === s && ((s = new qr(new ia(2,2),new ti({
                        name: "BackgroundMaterial",
                        uniforms: Zr(Ja.background.uniforms),
                        vertexShader: Ja.background.vertexShader,
                        fragmentShader: Ja.background.fragmentShader,
                        side: 0,
                        depthTest: !1,
                        depthWrite: !1,
                        fog: !1
                    }))).geometry.deleteAttribute("normal"),
                    Object.defineProperty(s.material, "map", {
                        get: function() {
                            return this.uniforms.t2D.value
                        }
                    }),
                    i.update(s)),
                    s.material.uniforms.t2D.value = r,
                    s.material.uniforms.backgroundIntensity.value = n.backgroundIntensity,
                    s.material.toneMapped = Ut.getTransfer(r.colorSpace) !== et,
                    !0 === r.matrixAutoUpdate && r.updateMatrix(),
                    s.material.uniforms.uvTransform.value.copy(r.matrix),
                    d === r && f === r.version && h === e.toneMapping || (s.material.needsUpdate = !0,
                    d = r,
                    f = r.version,
                    h = e.toneMapping),
                    s.layers.enableAll(),
                    t.unshift(s, s.geometry, s.material, 0, 0, null))
                },
                dispose: function() {
                    void 0 !== l && (l.geometry.dispose(),
                    l.material.dispose()),
                    void 0 !== s && (s.geometry.dispose(),
                    s.material.dispose())
                }
            }
        }
        function ro(e, t) {
            var n = e.getParameter(e.MAX_VERTEX_ATTRIBS)
              , r = {}
              , i = u(null)
              , a = i
              , o = !1;
            function s(t) {
                return e.bindVertexArray(t)
            }
            function l(t) {
                return e.deleteVertexArray(t)
            }
            function u(e) {
                for (var t = [], r = [], i = [], a = 0; a < n; a++)
                    t[a] = 0,
                    r[a] = 0,
                    i[a] = 0;
                return {
                    geometry: null,
                    program: null,
                    wireframe: !1,
                    newAttributes: t,
                    enabledAttributes: r,
                    attributeDivisors: i,
                    object: e,
                    attributes: {},
                    index: null
                }
            }
            function c() {
                for (var e = a.newAttributes, t = 0, n = e.length; t < n; t++)
                    e[t] = 0
            }
            function d(e) {
                f(e, 0)
            }
            function f(t, n) {
                var r = a.newAttributes
                  , i = a.enabledAttributes
                  , o = a.attributeDivisors;
                r[t] = 1,
                0 === i[t] && (e.enableVertexAttribArray(t),
                i[t] = 1),
                o[t] !== n && (e.vertexAttribDivisor(t, n),
                o[t] = n)
            }
            function h() {
                for (var t = a.newAttributes, n = a.enabledAttributes, r = 0, i = n.length; r < i; r++)
                    n[r] !== t[r] && (e.disableVertexAttribArray(r),
                    n[r] = 0)
            }
            function p(t, n, r, i, a, o, s) {
                !0 === s ? e.vertexAttribIPointer(t, n, r, a, o) : e.vertexAttribPointer(t, n, r, i, a, o)
            }
            function m() {
                v(),
                o = !0,
                a !== i && s((a = i).object)
            }
            function v() {
                i.geometry = null,
                i.program = null,
                i.wireframe = !1
            }
            return {
                setup: function(n, i, l, m, v) {
                    var g, _ = function(t, n, i) {
                        var a = !0 === i.wireframe
                          , o = r[t.id];
                        void 0 === o && (o = {},
                        r[t.id] = o);
                        var s = o[n.id];
                        void 0 === s && (s = {},
                        o[n.id] = s);
                        var l = s[a];
                        void 0 === l && (l = u(e.createVertexArray()),
                        s[a] = l);
                        return l
                    }(m, l, i);
                    a !== _ && s((a = _).object),
                    g = function(e, t, n, r) {
                        var i = a.attributes
                          , o = t.attributes
                          , s = 0
                          , l = n.getAttributes();
                        for (var u in l) {
                            if (l[u].location >= 0) {
                                var c = i[u]
                                  , d = o[u];
                                if (void 0 === d && ("instanceMatrix" === u && e.instanceMatrix && (d = e.instanceMatrix),
                                "instanceColor" === u && e.instanceColor && (d = e.instanceColor)),
                                void 0 === c)
                                    return !0;
                                if (c.attribute !== d)
                                    return !0;
                                if (d && c.data !== d.data)
                                    return !0;
                                s++
                            }
                        }
                        return a.attributesNum !== s || a.index !== r
                    }(n, m, l, v),
                    g && function(e, t, n, r) {
                        var i = {}
                          , o = t.attributes
                          , s = 0
                          , l = n.getAttributes();
                        for (var u in l) {
                            if (l[u].location >= 0) {
                                var c = o[u];
                                void 0 === c && ("instanceMatrix" === u && e.instanceMatrix && (c = e.instanceMatrix),
                                "instanceColor" === u && e.instanceColor && (c = e.instanceColor));
                                var d = {};
                                d.attribute = c,
                                c && c.data && (d.data = c.data),
                                i[u] = d,
                                s++
                            }
                        }
                        a.attributes = i,
                        a.attributesNum = s,
                        a.index = r
                    }(n, m, l, v),
                    null !== v && t.update(v, e.ELEMENT_ARRAY_BUFFER),
                    (g || o) && (o = !1,
                    function(n, r, i, a) {
                        c();
                        var o = a.attributes
                          , s = i.getAttributes()
                          , l = r.defaultAttributeValues;
                        for (var u in s) {
                            var m = s[u];
                            if (m.location >= 0) {
                                var v = o[u];
                                if (void 0 === v && ("instanceMatrix" === u && n.instanceMatrix && (v = n.instanceMatrix),
                                "instanceColor" === u && n.instanceColor && (v = n.instanceColor)),
                                void 0 !== v) {
                                    var g = v.normalized
                                      , _ = v.itemSize
                                      , y = t.get(v);
                                    if (void 0 === y)
                                        continue;
                                    var x = y.buffer
                                      , b = y.type
                                      , S = y.bytesPerElement
                                      , M = b === e.INT || b === e.UNSIGNED_INT || v.gpuType === j;
                                    if (v.isInterleavedBufferAttribute) {
                                        var E = v.data
                                          , T = E.stride
                                          , w = v.offset;
                                        if (E.isInstancedInterleavedBuffer) {
                                            for (var A = 0; A < m.locationSize; A++)
                                                f(m.location + A, E.meshPerAttribute);
                                            !0 !== n.isInstancedMesh && void 0 === a._maxInstanceCount && (a._maxInstanceCount = E.meshPerAttribute * E.count)
                                        } else
                                            for (var R = 0; R < m.locationSize; R++)
                                                d(m.location + R);
                                        e.bindBuffer(e.ARRAY_BUFFER, x);
                                        for (var C = 0; C < m.locationSize; C++)
                                            p(m.location + C, _ / m.locationSize, b, g, T * S, (w + _ / m.locationSize * C) * S, M)
                                    } else {
                                        if (v.isInstancedBufferAttribute) {
                                            for (var k = 0; k < m.locationSize; k++)
                                                f(m.location + k, v.meshPerAttribute);
                                            !0 !== n.isInstancedMesh && void 0 === a._maxInstanceCount && (a._maxInstanceCount = v.meshPerAttribute * v.count)
                                        } else
                                            for (var P = 0; P < m.locationSize; P++)
                                                d(m.location + P);
                                        e.bindBuffer(e.ARRAY_BUFFER, x);
                                        for (var L = 0; L < m.locationSize; L++)
                                            p(m.location + L, _ / m.locationSize, b, g, _ * S, _ / m.locationSize * L * S, M)
                                    }
                                } else if (void 0 !== l) {
                                    var U = l[u];
                                    if (void 0 !== U)
                                        switch (U.length) {
                                        case 2:
                                            e.vertexAttrib2fv(m.location, U);
                                            break;
                                        case 3:
                                            e.vertexAttrib3fv(m.location, U);
                                            break;
                                        case 4:
                                            e.vertexAttrib4fv(m.location, U);
                                            break;
                                        default:
                                            e.vertexAttrib1fv(m.location, U)
                                        }
                                }
                            }
                        }
                        h()
                    }(n, i, l, m),
                    null !== v && e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, t.get(v).buffer))
                },
                reset: m,
                resetDefaultState: v,
                dispose: function() {
                    for (var e in m(),
                    r) {
                        var t = r[e];
                        for (var n in t) {
                            var i = t[n];
                            for (var a in i)
                                l(i[a].object),
                                delete i[a];
                            delete t[n]
                        }
                        delete r[e]
                    }
                },
                releaseStatesOfGeometry: function(e) {
                    if (void 0 !== r[e.id]) {
                        var t = r[e.id];
                        for (var n in t) {
                            var i = t[n];
                            for (var a in i)
                                l(i[a].object),
                                delete i[a];
                            delete t[n]
                        }
                        delete r[e.id]
                    }
                },
                releaseStatesOfProgram: function(e) {
                    for (var t in r) {
                        var n = r[t];
                        if (void 0 !== n[e.id]) {
                            var i = n[e.id];
                            for (var a in i)
                                l(i[a].object),
                                delete i[a];
                            delete n[e.id]
                        }
                    }
                },
                initAttributes: c,
                enableAttribute: d,
                disableUnusedAttributes: h
            }
        }
        function io(e, t, n) {
            var r;
            function i(t, i, a) {
                0 !== a && (e.drawArraysInstanced(r, t, i, a),
                n.update(i, r, a))
            }
            this.setMode = function(e) {
                r = e
            }
            ,
            this.render = function(t, i) {
                e.drawArrays(r, t, i),
                n.update(i, r, 1)
            }
            ,
            this.renderInstances = i,
            this.renderMultiDraw = function(e, i, a) {
                if (0 !== a) {
                    t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(r, e, 0, i, 0, a);
                    for (var o = 0, s = 0; s < a; s++)
                        o += i[s];
                    n.update(o, r, 1)
                }
            }
            ,
            this.renderMultiDrawInstances = function(e, a, o, s) {
                if (0 !== o) {
                    var l = t.get("WEBGL_multi_draw");
                    if (null === l)
                        for (var u = 0; u < e.length; u++)
                            i(e[u], a[u], s[u]);
                    else {
                        l.multiDrawArraysInstancedWEBGL(r, e, 0, a, 0, s, 0, o);
                        for (var c = 0, d = 0; d < o; d++)
                            c += a[d] * s[d];
                        n.update(c, r, 1)
                    }
                }
            }
        }
        function ao(e, t, n, r) {
            var i;
            function a(t) {
                if ("highp" === t) {
                    if (e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0)
                        return "highp";
                    t = "mediump"
                }
                return "mediump" === t && e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
            }
            var o = void 0 !== n.precision ? n.precision : "highp"
              , s = a(o);
            s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."),
            o = s);
            var l = !0 === n.logarithmicDepthBuffer
              , u = !0 === n.reverseDepthBuffer && t.has("EXT_clip_control")
              , c = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)
              , d = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS);
            return {
                isWebGL2: !0,
                getMaxAnisotropy: function() {
                    if (void 0 !== i)
                        return i;
                    if (!0 === t.has("EXT_texture_filter_anisotropic")) {
                        var n = t.get("EXT_texture_filter_anisotropic");
                        i = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)
                    } else
                        i = 0;
                    return i
                },
                getMaxPrecision: a,
                textureFormatReadable: function(t) {
                    return t === ne || r.convert(t) === e.getParameter(e.IMPLEMENTATION_COLOR_READ_FORMAT)
                },
                textureTypeReadable: function(n) {
                    var i = n === K && (t.has("EXT_color_buffer_half_float") || t.has("EXT_color_buffer_float"));
                    return !(n !== H && r.convert(n) !== e.getParameter(e.IMPLEMENTATION_COLOR_READ_TYPE) && n !== Y && !i)
                },
                precision: o,
                logarithmicDepthBuffer: l,
                reverseDepthBuffer: u,
                maxTextures: c,
                maxVertexTextures: d,
                maxTextureSize: e.getParameter(e.MAX_TEXTURE_SIZE),
                maxCubemapSize: e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),
                maxAttributes: e.getParameter(e.MAX_VERTEX_ATTRIBS),
                maxVertexUniforms: e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),
                maxVaryings: e.getParameter(e.MAX_VARYING_VECTORS),
                maxFragmentUniforms: e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),
                vertexTextures: d > 0,
                maxSamples: e.getParameter(e.MAX_SAMPLES)
            }
        }
        function oo(e) {
            var t = this
              , n = null
              , r = 0
              , i = !1
              , a = !1
              , o = new Ui
              , s = new yt
              , l = {
                value: null,
                needsUpdate: !1
            };
            function u(e, n, r, i) {
                var a = null !== e ? e.length : 0
                  , u = null;
                if (0 !== a) {
                    if (u = l.value,
                    !0 !== i || null === u) {
                        var c = r + 4 * a
                          , d = n.matrixWorldInverse;
                        s.getNormalMatrix(d),
                        (null === u || u.length < c) && (u = new Float32Array(c));
                        for (var f = 0, h = r; f !== a; ++f,
                        h += 4)
                            o.copy(e[f]).applyMatrix4(d, s),
                            o.normal.toArray(u, h),
                            u[h + 3] = o.constant
                    }
                    l.value = u,
                    l.needsUpdate = !0
                }
                return t.numPlanes = a,
                t.numIntersection = 0,
                u
            }
            this.uniform = l,
            this.numPlanes = 0,
            this.numIntersection = 0,
            this.init = function(e, t) {
                var n = 0 !== e.length || t || 0 !== r || i;
                return i = t,
                r = e.length,
                n
            }
            ,
            this.beginShadows = function() {
                a = !0,
                u(null)
            }
            ,
            this.endShadows = function() {
                a = !1
            }
            ,
            this.setGlobalState = function(e, t) {
                n = u(e, t, 0)
            }
            ,
            this.setState = function(o, s, c) {
                var d = o.clippingPlanes
                  , f = o.clipIntersection
                  , h = o.clipShadows
                  , p = e.get(o);
                if (!i || null === d || 0 === d.length || a && !h)
                    a ? u(null) : function() {
                        l.value !== n && (l.value = n,
                        l.needsUpdate = r > 0);
                        t.numPlanes = r,
                        t.numIntersection = 0
                    }();
                else {
                    var m = a ? 0 : r
                      , v = 4 * m
                      , g = p.clippingState || null;
                    l.value = g,
                    g = u(d, s, v, c);
                    for (var _ = 0; _ !== v; ++_)
                        g[_] = n[_];
                    p.clippingState = g,
                    this.numIntersection = f ? this.numPlanes : 0,
                    this.numPlanes += m
                }
            }
        }
        function so(e) {
            var t = new WeakMap;
            function n(e, t) {
                return t === P ? e.mapping = C : t === L && (e.mapping = k),
                e
            }
            function r(e) {
                var n = e.target;
                n.removeEventListener("dispose", r);
                var i = t.get(n);
                void 0 !== i && (t.delete(n),
                i.dispose())
            }
            return {
                get: function(i) {
                    if (i && i.isTexture) {
                        var a = i.mapping;
                        if (a === P || a === L) {
                            if (t.has(i))
                                return n(t.get(i).texture, i.mapping);
                            var o = i.image;
                            if (o && o.height > 0) {
                                var s = new ci(o.height);
                                return s.fromEquirectangularTexture(e, i),
                                t.set(i, s),
                                i.addEventListener("dispose", r),
                                n(s.texture, i.mapping)
                            }
                            return null
                        }
                    }
                    return i
                },
                dispose: function() {
                    t = new WeakMap
                }
            }
        }
        var lo = [.125, .215, .35, .446, .526, .582]
          , uo = 20
          , co = new Pa
          , fo = new gr
          , ho = null
          , po = 0
          , mo = 0
          , vo = !1
          , go = (1 + Math.sqrt(5)) / 2
          , _o = 1 / go
          , yo = [new Yt(-go,_o,0), new Yt(go,_o,0), new Yt(-_o,0,go), new Yt(_o,0,go), new Yt(0,go,-_o), new Yt(0,go,_o), new Yt(-1,1,-1), new Yt(1,1,-1), new Yt(-1,1,1), new Yt(1,1,1)]
          , xo = function() {
            function e(t) {
                _(this, e),
                this._renderer = t,
                this._pingPongRenderTarget = null,
                this._lodMax = 0,
                this._cubeSize = 0,
                this._lodPlanes = [],
                this._sizeLods = [],
                this._sigmas = [],
                this._blurMaterial = null,
                this._cubemapMaterial = null,
                this._equirectMaterial = null,
                this._compileMaterial(this._blurMaterial)
            }
            return x(e, [{
                key: "fromScene",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                      , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1
                      , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 100;
                    ho = this._renderer.getRenderTarget(),
                    po = this._renderer.getActiveCubeFace(),
                    mo = this._renderer.getActiveMipmapLevel(),
                    vo = this._renderer.xr.enabled,
                    this._renderer.xr.enabled = !1,
                    this._setSize(256);
                    var i = this._allocateTargets();
                    return i.depthBuffer = !0,
                    this._sceneToCubeUV(e, n, r, i),
                    t > 0 && this._blur(i, 0, 0, t),
                    this._applyPMREM(i),
                    this._cleanup(i),
                    i
                }
            }, {
                key: "fromEquirectangular",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return this._fromTexture(e, t)
                }
            }, {
                key: "fromCubemap",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    return this._fromTexture(e, t)
                }
            }, {
                key: "compileCubemapShader",
                value: function() {
                    null === this._cubemapMaterial && (this._cubemapMaterial = Eo(),
                    this._compileMaterial(this._cubemapMaterial))
                }
            }, {
                key: "compileEquirectangularShader",
                value: function() {
                    null === this._equirectMaterial && (this._equirectMaterial = Mo(),
                    this._compileMaterial(this._equirectMaterial))
                }
            }, {
                key: "dispose",
                value: function() {
                    this._dispose(),
                    null !== this._cubemapMaterial && this._cubemapMaterial.dispose(),
                    null !== this._equirectMaterial && this._equirectMaterial.dispose()
                }
            }, {
                key: "_setSize",
                value: function(e) {
                    this._lodMax = Math.floor(Math.log2(e)),
                    this._cubeSize = Math.pow(2, this._lodMax)
                }
            }, {
                key: "_dispose",
                value: function() {
                    null !== this._blurMaterial && this._blurMaterial.dispose(),
                    null !== this._pingPongRenderTarget && this._pingPongRenderTarget.dispose();
                    for (var e = 0; e < this._lodPlanes.length; e++)
                        this._lodPlanes[e].dispose()
                }
            }, {
                key: "_cleanup",
                value: function(e) {
                    this._renderer.setRenderTarget(ho, po, mo),
                    this._renderer.xr.enabled = vo,
                    e.scissorTest = !1,
                    So(e, 0, 0, e.width, e.height)
                }
            }, {
                key: "_fromTexture",
                value: function(e, t) {
                    e.mapping === C || e.mapping === k ? this._setSize(0 === e.image.length ? 16 : e.image[0].width || e.image[0].image.width) : this._setSize(e.image.width / 4),
                    ho = this._renderer.getRenderTarget(),
                    po = this._renderer.getActiveCubeFace(),
                    mo = this._renderer.getActiveMipmapLevel(),
                    vo = this._renderer.xr.enabled,
                    this._renderer.xr.enabled = !1;
                    var n = t || this._allocateTargets();
                    return this._textureToCubeUV(e, n),
                    this._applyPMREM(n),
                    this._cleanup(n),
                    n
                }
            }, {
                key: "_allocateTargets",
                value: function() {
                    var e = 3 * Math.max(this._cubeSize, 112)
                      , t = 4 * this._cubeSize
                      , n = {
                        magFilter: z,
                        minFilter: z,
                        generateMipmaps: !1,
                        type: K,
                        format: ne,
                        colorSpace: Je,
                        depthBuffer: !1
                    }
                      , r = bo(e, t, n);
                    if (null === this._pingPongRenderTarget || this._pingPongRenderTarget.width !== e || this._pingPongRenderTarget.height !== t) {
                        null !== this._pingPongRenderTarget && this._dispose(),
                        this._pingPongRenderTarget = bo(e, t, n);
                        var i = this._lodMax
                          , a = function(e) {
                            for (var t = [], n = [], r = [], i = e, a = e - 4 + 1 + lo.length, o = 0; o < a; o++) {
                                var s = Math.pow(2, i);
                                n.push(s);
                                var l = 1 / s;
                                o > e - 4 ? l = lo[o - e + 4 - 1] : 0 === o && (l = 0),
                                r.push(l);
                                for (var u = 1 / (s - 2), c = -u, d = 1 + u, f = [c, c, d, c, d, d, c, c, d, d, c, d], h = 6, p = 6, m = 3, v = 2, g = 1, _ = new Float32Array(m * p * h), y = new Float32Array(v * p * h), x = new Float32Array(g * p * h), b = 0; b < h; b++) {
                                    var S = b % 3 * 2 / 3 - 1
                                      , M = b > 2 ? 0 : -1
                                      , E = [S, M, 0, S + 2 / 3, M, 0, S + 2 / 3, M + 1, 0, S, M, 0, S + 2 / 3, M + 1, 0, S, M + 1, 0];
                                    _.set(E, m * p * b),
                                    y.set(f, v * p * b);
                                    var T = [b, b, b, b, b, b];
                                    x.set(T, g * p * b)
                                }
                                var w = new Nr;
                                w.setAttribute("position", new Er(_,m)),
                                w.setAttribute("uv", new Er(y,v)),
                                w.setAttribute("faceIndex", new Er(x,g)),
                                t.push(w),
                                i > 4 && i--
                            }
                            return {
                                lodPlanes: t,
                                sizeLods: n,
                                sigmas: r
                            }
                        }(i);
                        this._sizeLods = a.sizeLods,
                        this._lodPlanes = a.lodPlanes,
                        this._sigmas = a.sigmas,
                        this._blurMaterial = function(e, t, n) {
                            var r = new Float32Array(uo)
                              , i = new Yt(0,1,0);
                            return new ti({
                                name: "SphericalGaussianBlur",
                                defines: {
                                    n: uo,
                                    CUBEUV_TEXEL_WIDTH: 1 / t,
                                    CUBEUV_TEXEL_HEIGHT: 1 / n,
                                    CUBEUV_MAX_MIP: "".concat(e, ".0")
                                },
                                uniforms: {
                                    envMap: {
                                        value: null
                                    },
                                    samples: {
                                        value: 1
                                    },
                                    weights: {
                                        value: r
                                    },
                                    latitudinal: {
                                        value: !1
                                    },
                                    dTheta: {
                                        value: 0
                                    },
                                    mipInt: {
                                        value: 0
                                    },
                                    poleAxis: {
                                        value: i
                                    }
                                },
                                vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                                fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",
                                blending: 0,
                                depthTest: !1,
                                depthWrite: !1
                            })
                        }(i, e, t)
                    }
                    return r
                }
            }, {
                key: "_compileMaterial",
                value: function(e) {
                    var t = new qr(this._lodPlanes[0],e);
                    this._renderer.compile(t, co)
                }
            }, {
                key: "_sceneToCubeUV",
                value: function(e, t, n, r) {
                    var i = new oi(90,1,t,n)
                      , a = [1, -1, 1, 1, 1, 1]
                      , o = [1, 1, 1, -1, -1, -1]
                      , s = this._renderer
                      , l = s.autoClear
                      , u = s.toneMapping;
                    s.getClearColor(fo),
                    s.toneMapping = 0,
                    s.autoClear = !1;
                    var c = new br({
                        name: "PMREM.Background",
                        side: 1,
                        depthWrite: !1,
                        depthTest: !1
                    })
                      , d = new qr(new Kr,c)
                      , f = !1
                      , h = e.background;
                    h ? h.isColor && (c.color.copy(h),
                    e.background = null,
                    f = !0) : (c.color.copy(fo),
                    f = !0);
                    for (var p = 0; p < 6; p++) {
                        var m = p % 3;
                        0 === m ? (i.up.set(0, a[p], 0),
                        i.lookAt(o[p], 0, 0)) : 1 === m ? (i.up.set(0, 0, a[p]),
                        i.lookAt(0, o[p], 0)) : (i.up.set(0, a[p], 0),
                        i.lookAt(0, 0, o[p]));
                        var v = this._cubeSize;
                        So(r, m * v, p > 2 ? v : 0, v, v),
                        s.setRenderTarget(r),
                        f && s.render(d, i),
                        s.render(e, i)
                    }
                    d.geometry.dispose(),
                    d.material.dispose(),
                    s.toneMapping = u,
                    s.autoClear = l,
                    e.background = h
                }
            }, {
                key: "_textureToCubeUV",
                value: function(e, t) {
                    var n = this._renderer
                      , r = e.mapping === C || e.mapping === k;
                    r ? (null === this._cubemapMaterial && (this._cubemapMaterial = Eo()),
                    this._cubemapMaterial.uniforms.flipEnvMap.value = !1 === e.isRenderTargetTexture ? -1 : 1) : null === this._equirectMaterial && (this._equirectMaterial = Mo());
                    var i = r ? this._cubemapMaterial : this._equirectMaterial
                      , a = new qr(this._lodPlanes[0],i);
                    i.uniforms.envMap.value = e;
                    var o = this._cubeSize;
                    So(t, 0, 0, 3 * o, 2 * o),
                    n.setRenderTarget(t),
                    n.render(a, co)
                }
            }, {
                key: "_applyPMREM",
                value: function(e) {
                    var t = this._renderer
                      , n = t.autoClear;
                    t.autoClear = !1;
                    for (var r = this._lodPlanes.length, i = 1; i < r; i++) {
                        var a = Math.sqrt(this._sigmas[i] * this._sigmas[i] - this._sigmas[i - 1] * this._sigmas[i - 1])
                          , o = yo[(r - i - 1) % yo.length];
                        this._blur(e, i - 1, i, a, o)
                    }
                    t.autoClear = n
                }
            }, {
                key: "_blur",
                value: function(e, t, n, r, i) {
                    var a = this._pingPongRenderTarget;
                    this._halfBlur(e, a, t, n, r, "latitudinal", i),
                    this._halfBlur(a, e, n, n, r, "longitudinal", i)
                }
            }, {
                key: "_halfBlur",
                value: function(e, t, n, r, i, a, o) {
                    var s = this._renderer
                      , l = this._blurMaterial;
                    "latitudinal" !== a && "longitudinal" !== a && console.error("blur direction must be either latitudinal or longitudinal!");
                    var u = new qr(this._lodPlanes[r],l)
                      , c = l.uniforms
                      , d = this._sizeLods[n] - 1
                      , f = isFinite(i) ? Math.PI / (2 * d) : 2 * Math.PI / 39
                      , h = i / f
                      , p = isFinite(i) ? 1 + Math.floor(3 * h) : uo;
                    p > uo && console.warn("sigmaRadians, ".concat(i, ", is too large and will clip, as it requested ").concat(p, " samples when the maximum is set to ").concat(uo));
                    for (var m = [], v = 0, g = 0; g < uo; ++g) {
                        var _ = g / h
                          , y = Math.exp(-_ * _ / 2);
                        m.push(y),
                        0 === g ? v += y : g < p && (v += 2 * y)
                    }
                    for (var x = 0; x < m.length; x++)
                        m[x] = m[x] / v;
                    c.envMap.value = e.texture,
                    c.samples.value = p,
                    c.weights.value = m,
                    c.latitudinal.value = "latitudinal" === a,
                    o && (c.poleAxis.value = o);
                    var b = this._lodMax;
                    c.dTheta.value = f,
                    c.mipInt.value = b - n;
                    var S = this._sizeLods[r];
                    So(t, 3 * S * (r > b - 4 ? r - b + 4 : 0), 4 * (this._cubeSize - S), 3 * S, 2 * S),
                    s.setRenderTarget(t),
                    s.render(u, co)
                }
            }]),
            e
        }();
        function bo(e, t, n) {
            var r = new Wt(e,t,n);
            return r.texture.mapping = U,
            r.texture.name = "PMREM.cubeUv",
            r.scissorTest = !0,
            r
        }
        function So(e, t, n, r, i) {
            e.viewport.set(t, n, r, i),
            e.scissor.set(t, n, r, i)
        }
        function Mo() {
            return new ti({
                name: "EquirectangularToCubeUV",
                uniforms: {
                    envMap: {
                        value: null
                    }
                },
                vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",
                blending: 0,
                depthTest: !1,
                depthWrite: !1
            })
        }
        function Eo() {
            return new ti({
                name: "CubemapToCubeUV",
                uniforms: {
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    }
                },
                vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",
                blending: 0,
                depthTest: !1,
                depthWrite: !1
            })
        }
        function To(e) {
            var t = new WeakMap
              , n = null;
            function r(e) {
                var n = e.target;
                n.removeEventListener("dispose", r);
                var i = t.get(n);
                void 0 !== i && (t.delete(n),
                i.dispose())
            }
            return {
                get: function(i) {
                    if (i && i.isTexture) {
                        var a = i.mapping
                          , o = a === P || a === L
                          , s = a === C || a === k;
                        if (o || s) {
                            var l = t.get(i)
                              , u = void 0 !== l ? l.texture.pmremVersion : 0;
                            if (i.isRenderTargetTexture && i.pmremVersion !== u)
                                return null === n && (n = new xo(e)),
                                (l = o ? n.fromEquirectangular(i, l) : n.fromCubemap(i, l)).texture.pmremVersion = i.pmremVersion,
                                t.set(i, l),
                                l.texture;
                            if (void 0 !== l)
                                return l.texture;
                            var c = i.image;
                            return o && c && c.height > 0 || s && c && function(e) {
                                for (var t = 0, n = 6, r = 0; r < n; r++)
                                    void 0 !== e[r] && t++;
                                return t === n
                            }(c) ? (null === n && (n = new xo(e)),
                            (l = o ? n.fromEquirectangular(i) : n.fromCubemap(i)).texture.pmremVersion = i.pmremVersion,
                            t.set(i, l),
                            i.addEventListener("dispose", r),
                            l.texture) : null
                        }
                    }
                    return i
                },
                dispose: function() {
                    t = new WeakMap,
                    null !== n && (n.dispose(),
                    n = null)
                }
            }
        }
        function wo(e) {
            var t = {};
            function n(n) {
                if (void 0 !== t[n])
                    return t[n];
                var r;
                switch (n) {
                case "WEBGL_depth_texture":
                    r = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    r = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    r = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    r = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    r = e.getExtension(n)
                }
                return t[n] = r,
                r
            }
            return {
                has: function(e) {
                    return null !== n(e)
                },
                init: function() {
                    n("EXT_color_buffer_float"),
                    n("WEBGL_clip_cull_distance"),
                    n("OES_texture_float_linear"),
                    n("EXT_color_buffer_half_float"),
                    n("WEBGL_multisampled_render_to_texture"),
                    n("WEBGL_render_shared_exponent")
                },
                get: function(e) {
                    var t = n(e);
                    return null === t && Tt("THREE.WebGLRenderer: " + e + " extension not supported."),
                    t
                }
            }
        }
        function Ao(e, t, n, r) {
            var i = {}
              , a = new WeakMap;
            function o(e) {
                var s = e.target;
                for (var l in null !== s.index && t.remove(s.index),
                s.attributes)
                    t.remove(s.attributes[l]);
                s.removeEventListener("dispose", o),
                delete i[s.id];
                var u = a.get(s);
                u && (t.remove(u),
                a.delete(s)),
                r.releaseStatesOfGeometry(s),
                !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount,
                n.memory.geometries--
            }
            function s(e) {
                var n = []
                  , r = e.index
                  , i = e.attributes.position
                  , o = 0;
                if (null !== r) {
                    var s = r.array;
                    o = r.version;
                    for (var l = 0, u = s.length; l < u; l += 3) {
                        var c = s[l + 0]
                          , d = s[l + 1]
                          , f = s[l + 2];
                        n.push(c, d, d, f, f, c)
                    }
                } else {
                    if (void 0 === i)
                        return;
                    var h = i.array;
                    o = i.version;
                    for (var p = 0, m = h.length / 3 - 1; p < m; p += 3) {
                        var v = p + 0
                          , g = p + 1
                          , _ = p + 2;
                        n.push(v, g, g, _, _, v)
                    }
                }
                var y = new (bt(n) ? wr : Tr)(n,1);
                y.version = o;
                var x = a.get(e);
                x && t.remove(x),
                a.set(e, y)
            }
            return {
                get: function(e, t) {
                    return !0 === i[t.id] || (t.addEventListener("dispose", o),
                    i[t.id] = !0,
                    n.memory.geometries++),
                    t
                },
                update: function(n) {
                    var r = n.attributes;
                    for (var i in r)
                        t.update(r[i], e.ARRAY_BUFFER)
                },
                getWireframeAttribute: function(e) {
                    var t = a.get(e);
                    if (t) {
                        var n = e.index;
                        null !== n && t.version < n.version && s(e)
                    } else
                        s(e);
                    return a.get(e)
                }
            }
        }
        function Ro(e, t, n) {
            var r, i, a;
            function o(t, o, s) {
                0 !== s && (e.drawElementsInstanced(r, o, i, t * a, s),
                n.update(o, r, s))
            }
            this.setMode = function(e) {
                r = e
            }
            ,
            this.setIndex = function(e) {
                i = e.type,
                a = e.bytesPerElement
            }
            ,
            this.render = function(t, o) {
                e.drawElements(r, o, i, t * a),
                n.update(o, r, 1)
            }
            ,
            this.renderInstances = o,
            this.renderMultiDraw = function(e, a, o) {
                if (0 !== o) {
                    t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(r, a, 0, i, e, 0, o);
                    for (var s = 0, l = 0; l < o; l++)
                        s += a[l];
                    n.update(s, r, 1)
                }
            }
            ,
            this.renderMultiDrawInstances = function(e, s, l, u) {
                if (0 !== l) {
                    var c = t.get("WEBGL_multi_draw");
                    if (null === c)
                        for (var d = 0; d < e.length; d++)
                            o(e[d] / a, s[d], u[d]);
                    else {
                        c.multiDrawElementsInstancedWEBGL(r, s, 0, i, e, 0, u, 0, l);
                        for (var f = 0, h = 0; h < l; h++)
                            f += s[h] * u[h];
                        n.update(f, r, 1)
                    }
                }
            }
        }
        function Co(e) {
            var t = {
                frame: 0,
                calls: 0,
                triangles: 0,
                points: 0,
                lines: 0
            };
            return {
                memory: {
                    geometries: 0,
                    textures: 0
                },
                render: t,
                programs: null,
                autoReset: !0,
                reset: function() {
                    t.calls = 0,
                    t.triangles = 0,
                    t.points = 0,
                    t.lines = 0
                },
                update: function(n, r, i) {
                    switch (t.calls++,
                    r) {
                    case e.TRIANGLES:
                        t.triangles += i * (n / 3);
                        break;
                    case e.LINES:
                        t.lines += i * (n / 2);
                        break;
                    case e.LINE_STRIP:
                        t.lines += i * (n - 1);
                        break;
                    case e.LINE_LOOP:
                        t.lines += i * n;
                        break;
                    case e.POINTS:
                        t.points += i * n;
                        break;
                    default:
                        console.error("THREE.WebGLInfo: Unknown draw mode:", r)
                    }
                }
            }
        }
        function ko(e, t, n) {
            var r = new WeakMap
              , i = new Ht;
            return {
                update: function(a, o, s) {
                    var l = a.morphTargetInfluences
                      , u = o.morphAttributes.position || o.morphAttributes.normal || o.morphAttributes.color
                      , c = void 0 !== u ? u.length : 0
                      , d = r.get(o);
                    if (void 0 === d || d.count !== c) {
                        void 0 !== d && d.texture.dispose();
                        var f = void 0 !== o.morphAttributes.position
                          , h = void 0 !== o.morphAttributes.normal
                          , p = void 0 !== o.morphAttributes.color
                          , m = o.morphAttributes.position || []
                          , v = o.morphAttributes.normal || []
                          , g = o.morphAttributes.color || []
                          , _ = 0;
                        !0 === f && (_ = 1),
                        !0 === h && (_ = 2),
                        !0 === p && (_ = 3);
                        var y = o.attributes.position.count * _
                          , x = 1;
                        y > t.maxTextureSize && (x = Math.ceil(y / t.maxTextureSize),
                        y = t.maxTextureSize);
                        var b = new Float32Array(y * x * 4 * c)
                          , S = new Xt(b,y,x,c);
                        S.type = Y,
                        S.needsUpdate = !0;
                        for (var M = 4 * _, E = 0; E < c; E++)
                            for (var T = m[E], w = v[E], A = g[E], R = y * x * 4 * E, C = 0; C < T.count; C++) {
                                var k = C * M;
                                !0 === f && (i.fromBufferAttribute(T, C),
                                b[R + k + 0] = i.x,
                                b[R + k + 1] = i.y,
                                b[R + k + 2] = i.z,
                                b[R + k + 3] = 0),
                                !0 === h && (i.fromBufferAttribute(w, C),
                                b[R + k + 4] = i.x,
                                b[R + k + 5] = i.y,
                                b[R + k + 6] = i.z,
                                b[R + k + 7] = 0),
                                !0 === p && (i.fromBufferAttribute(A, C),
                                b[R + k + 8] = i.x,
                                b[R + k + 9] = i.y,
                                b[R + k + 10] = i.z,
                                b[R + k + 11] = 4 === A.itemSize ? i.w : 1)
                            }
                        d = {
                            count: c,
                            texture: S,
                            size: new _t(y,x)
                        },
                        r.set(o, d),
                        o.addEventListener("dispose", (function e() {
                            S.dispose(),
                            r.delete(o),
                            o.removeEventListener("dispose", e)
                        }
                        ))
                    }
                    if (!0 === a.isInstancedMesh && null !== a.morphTexture)
                        s.getUniforms().setValue(e, "morphTexture", a.morphTexture, n);
                    else {
                        for (var P = 0, L = 0; L < l.length; L++)
                            P += l[L];
                        var U = o.morphTargetsRelative ? 1 : 1 - P;
                        s.getUniforms().setValue(e, "morphTargetBaseInfluence", U),
                        s.getUniforms().setValue(e, "morphTargetInfluences", l)
                    }
                    s.getUniforms().setValue(e, "morphTargetsTexture", d.texture, n),
                    s.getUniforms().setValue(e, "morphTargetsTextureSize", d.size)
                }
            }
        }
        function Po(e, t, n, r) {
            var i = new WeakMap;
            function a(e) {
                var t = e.target;
                t.removeEventListener("dispose", a),
                n.remove(t.instanceMatrix),
                null !== t.instanceColor && n.remove(t.instanceColor)
            }
            return {
                update: function(o) {
                    var s = r.render.frame
                      , l = o.geometry
                      , u = t.get(o, l);
                    if (i.get(u) !== s && (t.update(u),
                    i.set(u, s)),
                    o.isInstancedMesh && (!1 === o.hasEventListener("dispose", a) && o.addEventListener("dispose", a),
                    i.get(o) !== s && (n.update(o.instanceMatrix, e.ARRAY_BUFFER),
                    null !== o.instanceColor && n.update(o.instanceColor, e.ARRAY_BUFFER),
                    i.set(o, s))),
                    o.isSkinnedMesh) {
                        var c = o.skeleton;
                        i.get(c) !== s && (c.update(),
                        i.set(c, s))
                    }
                    return u
                },
                dispose: function() {
                    i = new WeakMap
                }
            }
        }
        var Lo = new Vt
          , Uo = new na(1,1)
          , Do = new Xt
          , No = new jt
          , Io = new ui
          , Oo = []
          , Fo = []
          , zo = new Float32Array(16)
          , Bo = new Float32Array(9)
          , Vo = new Float32Array(4);
        function Ho(e, t, n) {
            var r = e[0];
            if (r <= 0 || r > 0)
                return e;
            var i = t * n
              , a = Oo[i];
            if (void 0 === a && (a = new Float32Array(i),
            Oo[i] = a),
            0 !== t) {
                r.toArray(a, 0);
                for (var o = 1, s = 0; o !== t; ++o)
                    s += n,
                    e[o].toArray(a, s)
            }
            return a
        }
        function Go(e, t) {
            if (e.length !== t.length)
                return !1;
            for (var n = 0, r = e.length; n < r; n++)
                if (e[n] !== t[n])
                    return !1;
            return !0
        }
        function Wo(e, t) {
            for (var n = 0, r = t.length; n < r; n++)
                e[n] = t[n]
        }
        function Xo(e, t) {
            var n = Fo[t];
            void 0 === n && (n = new Int32Array(t),
            Fo[t] = n);
            for (var r = 0; r !== t; ++r)
                n[r] = e.allocateTextureUnit();
            return n
        }
        function jo(e, t) {
            var n = this.cache;
            n[0] !== t && (e.uniform1f(this.addr, t),
            n[0] = t)
        }
        function qo(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y),
                n[0] = t.x,
                n[1] = t.y);
            else {
                if (Go(n, t))
                    return;
                e.uniform2fv(this.addr, t),
                Wo(n, t)
            }
        }
        function Yo(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z),
                n[0] = t.x,
                n[1] = t.y,
                n[2] = t.z);
            else if (void 0 !== t.r)
                n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b),
                n[0] = t.r,
                n[1] = t.g,
                n[2] = t.b);
            else {
                if (Go(n, t))
                    return;
                e.uniform3fv(this.addr, t),
                Wo(n, t)
            }
        }
        function Ko(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w),
                n[0] = t.x,
                n[1] = t.y,
                n[2] = t.z,
                n[3] = t.w);
            else {
                if (Go(n, t))
                    return;
                e.uniform4fv(this.addr, t),
                Wo(n, t)
            }
        }
        function Zo(e, t) {
            var n = this.cache
              , r = t.elements;
            if (void 0 === r) {
                if (Go(n, t))
                    return;
                e.uniformMatrix2fv(this.addr, !1, t),
                Wo(n, t)
            } else {
                if (Go(n, r))
                    return;
                Vo.set(r),
                e.uniformMatrix2fv(this.addr, !1, Vo),
                Wo(n, r)
            }
        }
        function Qo(e, t) {
            var n = this.cache
              , r = t.elements;
            if (void 0 === r) {
                if (Go(n, t))
                    return;
                e.uniformMatrix3fv(this.addr, !1, t),
                Wo(n, t)
            } else {
                if (Go(n, r))
                    return;
                Bo.set(r),
                e.uniformMatrix3fv(this.addr, !1, Bo),
                Wo(n, r)
            }
        }
        function Jo(e, t) {
            var n = this.cache
              , r = t.elements;
            if (void 0 === r) {
                if (Go(n, t))
                    return;
                e.uniformMatrix4fv(this.addr, !1, t),
                Wo(n, t)
            } else {
                if (Go(n, r))
                    return;
                zo.set(r),
                e.uniformMatrix4fv(this.addr, !1, zo),
                Wo(n, r)
            }
        }
        function $o(e, t) {
            var n = this.cache;
            n[0] !== t && (e.uniform1i(this.addr, t),
            n[0] = t)
        }
        function es(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y || (e.uniform2i(this.addr, t.x, t.y),
                n[0] = t.x,
                n[1] = t.y);
            else {
                if (Go(n, t))
                    return;
                e.uniform2iv(this.addr, t),
                Wo(n, t)
            }
        }
        function ts(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3i(this.addr, t.x, t.y, t.z),
                n[0] = t.x,
                n[1] = t.y,
                n[2] = t.z);
            else {
                if (Go(n, t))
                    return;
                e.uniform3iv(this.addr, t),
                Wo(n, t)
            }
        }
        function ns(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4i(this.addr, t.x, t.y, t.z, t.w),
                n[0] = t.x,
                n[1] = t.y,
                n[2] = t.z,
                n[3] = t.w);
            else {
                if (Go(n, t))
                    return;
                e.uniform4iv(this.addr, t),
                Wo(n, t)
            }
        }
        function rs(e, t) {
            var n = this.cache;
            n[0] !== t && (e.uniform1ui(this.addr, t),
            n[0] = t)
        }
        function is(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y || (e.uniform2ui(this.addr, t.x, t.y),
                n[0] = t.x,
                n[1] = t.y);
            else {
                if (Go(n, t))
                    return;
                e.uniform2uiv(this.addr, t),
                Wo(n, t)
            }
        }
        function as(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3ui(this.addr, t.x, t.y, t.z),
                n[0] = t.x,
                n[1] = t.y,
                n[2] = t.z);
            else {
                if (Go(n, t))
                    return;
                e.uniform3uiv(this.addr, t),
                Wo(n, t)
            }
        }
        function os(e, t) {
            var n = this.cache;
            if (void 0 !== t.x)
                n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4ui(this.addr, t.x, t.y, t.z, t.w),
                n[0] = t.x,
                n[1] = t.y,
                n[2] = t.z,
                n[3] = t.w);
            else {
                if (Go(n, t))
                    return;
                e.uniform4uiv(this.addr, t),
                Wo(n, t)
            }
        }
        function ss(e, t, n) {
            var r, i = this.cache, a = n.allocateTextureUnit();
            i[0] !== a && (e.uniform1i(this.addr, a),
            i[0] = a),
            this.type === e.SAMPLER_2D_SHADOW ? (Uo.compareFunction = 515,
            r = Uo) : r = Lo,
            n.setTexture2D(t || r, a)
        }
        function ls(e, t, n) {
            var r = this.cache
              , i = n.allocateTextureUnit();
            r[0] !== i && (e.uniform1i(this.addr, i),
            r[0] = i),
            n.setTexture3D(t || No, i)
        }
        function us(e, t, n) {
            var r = this.cache
              , i = n.allocateTextureUnit();
            r[0] !== i && (e.uniform1i(this.addr, i),
            r[0] = i),
            n.setTextureCube(t || Io, i)
        }
        function cs(e, t, n) {
            var r = this.cache
              , i = n.allocateTextureUnit();
            r[0] !== i && (e.uniform1i(this.addr, i),
            r[0] = i),
            n.setTexture2DArray(t || Do, i)
        }
        function ds(e, t) {
            e.uniform1fv(this.addr, t)
        }
        function fs(e, t) {
            var n = Ho(t, this.size, 2);
            e.uniform2fv(this.addr, n)
        }
        function hs(e, t) {
            var n = Ho(t, this.size, 3);
            e.uniform3fv(this.addr, n)
        }
        function ps(e, t) {
            var n = Ho(t, this.size, 4);
            e.uniform4fv(this.addr, n)
        }
        function ms(e, t) {
            var n = Ho(t, this.size, 4);
            e.uniformMatrix2fv(this.addr, !1, n)
        }
        function vs(e, t) {
            var n = Ho(t, this.size, 9);
            e.uniformMatrix3fv(this.addr, !1, n)
        }
        function gs(e, t) {
            var n = Ho(t, this.size, 16);
            e.uniformMatrix4fv(this.addr, !1, n)
        }
        function _s(e, t) {
            e.uniform1iv(this.addr, t)
        }
        function ys(e, t) {
            e.uniform2iv(this.addr, t)
        }
        function xs(e, t) {
            e.uniform3iv(this.addr, t)
        }
        function bs(e, t) {
            e.uniform4iv(this.addr, t)
        }
        function Ss(e, t) {
            e.uniform1uiv(this.addr, t)
        }
        function Ms(e, t) {
            e.uniform2uiv(this.addr, t)
        }
        function Es(e, t) {
            e.uniform3uiv(this.addr, t)
        }
        function Ts(e, t) {
            e.uniform4uiv(this.addr, t)
        }
        function ws(e, t, n) {
            var r = this.cache
              , i = t.length
              , a = Xo(n, i);
            Go(r, a) || (e.uniform1iv(this.addr, a),
            Wo(r, a));
            for (var o = 0; o !== i; ++o)
                n.setTexture2D(t[o] || Lo, a[o])
        }
        function As(e, t, n) {
            var r = this.cache
              , i = t.length
              , a = Xo(n, i);
            Go(r, a) || (e.uniform1iv(this.addr, a),
            Wo(r, a));
            for (var o = 0; o !== i; ++o)
                n.setTexture3D(t[o] || No, a[o])
        }
        function Rs(e, t, n) {
            var r = this.cache
              , i = t.length
              , a = Xo(n, i);
            Go(r, a) || (e.uniform1iv(this.addr, a),
            Wo(r, a));
            for (var o = 0; o !== i; ++o)
                n.setTextureCube(t[o] || Io, a[o])
        }
        function Cs(e, t, n) {
            var r = this.cache
              , i = t.length
              , a = Xo(n, i);
            Go(r, a) || (e.uniform1iv(this.addr, a),
            Wo(r, a));
            for (var o = 0; o !== i; ++o)
                n.setTexture2DArray(t[o] || Do, a[o])
        }
        var ks = x((function e(t, n, r) {
            _(this, e),
            this.id = t,
            this.addr = r,
            this.cache = [],
            this.type = n.type,
            this.setValue = function(e) {
                switch (e) {
                case 5126:
                    return jo;
                case 35664:
                    return qo;
                case 35665:
                    return Yo;
                case 35666:
                    return Ko;
                case 35674:
                    return Zo;
                case 35675:
                    return Qo;
                case 35676:
                    return Jo;
                case 5124:
                case 35670:
                    return $o;
                case 35667:
                case 35671:
                    return es;
                case 35668:
                case 35672:
                    return ts;
                case 35669:
                case 35673:
                    return ns;
                case 5125:
                    return rs;
                case 36294:
                    return is;
                case 36295:
                    return as;
                case 36296:
                    return os;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                    return ss;
                case 35679:
                case 36299:
                case 36307:
                    return ls;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                    return us;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                    return cs
                }
            }(n.type)
        }
        ))
          , Ps = x((function e(t, n, r) {
            _(this, e),
            this.id = t,
            this.addr = r,
            this.cache = [],
            this.type = n.type,
            this.size = n.size,
            this.setValue = function(e) {
                switch (e) {
                case 5126:
                    return ds;
                case 35664:
                    return fs;
                case 35665:
                    return hs;
                case 35666:
                    return ps;
                case 35674:
                    return ms;
                case 35675:
                    return vs;
                case 35676:
                    return gs;
                case 5124:
                case 35670:
                    return _s;
                case 35667:
                case 35671:
                    return ys;
                case 35668:
                case 35672:
                    return xs;
                case 35669:
                case 35673:
                    return bs;
                case 5125:
                    return Ss;
                case 36294:
                    return Ms;
                case 36295:
                    return Es;
                case 36296:
                    return Ts;
                case 35678:
                case 36198:
                case 36298:
                case 36306:
                case 35682:
                    return ws;
                case 35679:
                case 36299:
                case 36307:
                    return As;
                case 35680:
                case 36300:
                case 36308:
                case 36293:
                    return Rs;
                case 36289:
                case 36303:
                case 36311:
                case 36292:
                    return Cs
                }
            }(n.type)
        }
        ))
          , Ls = function() {
            function e(t) {
                _(this, e),
                this.id = t,
                this.seq = [],
                this.map = {}
            }
            return x(e, [{
                key: "setValue",
                value: function(e, t, n) {
                    for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
                        var o = r[i];
                        o.setValue(e, t[o.id], n)
                    }
                }
            }]),
            e
        }()
          , Us = /(\w+)(\])?(\[|\.)?/g;
        function Ds(e, t) {
            e.seq.push(t),
            e.map[t.id] = t
        }
        function Ns(e, t, n) {
            var r = e.name
              , i = r.length;
            for (Us.lastIndex = 0; ; ) {
                var a = Us.exec(r)
                  , o = Us.lastIndex
                  , s = a[1]
                  , l = "]" === a[2]
                  , u = a[3];
                if (l && (s |= 0),
                void 0 === u || "[" === u && o + 2 === i) {
                    Ds(n, void 0 === u ? new ks(s,e,t) : new Ps(s,e,t));
                    break
                }
                var c = n.map[s];
                void 0 === c && Ds(n, c = new Ls(s)),
                n = c
            }
        }
        var Is = function() {
            function e(t, n) {
                _(this, e),
                this.seq = [],
                this.map = {};
                for (var r = t.getProgramParameter(n, t.ACTIVE_UNIFORMS), i = 0; i < r; ++i) {
                    var a = t.getActiveUniform(n, i);
                    Ns(a, t.getUniformLocation(n, a.name), this)
                }
            }
            return x(e, [{
                key: "setValue",
                value: function(e, t, n, r) {
                    var i = this.map[t];
                    void 0 !== i && i.setValue(e, n, r)
                }
            }, {
                key: "setOptional",
                value: function(e, t, n) {
                    var r = t[n];
                    void 0 !== r && this.setValue(e, n, r)
                }
            }], [{
                key: "upload",
                value: function(e, t, n, r) {
                    for (var i = 0, a = t.length; i !== a; ++i) {
                        var o = t[i]
                          , s = n[o.id];
                        !1 !== s.needsUpdate && o.setValue(e, s.value, r)
                    }
                }
            }, {
                key: "seqWithValue",
                value: function(e, t) {
                    for (var n = [], r = 0, i = e.length; r !== i; ++r) {
                        var a = e[r];
                        a.id in t && n.push(a)
                    }
                    return n
                }
            }]),
            e
        }();
        function Os(e, t, n) {
            var r = e.createShader(t);
            return e.shaderSource(r, n),
            e.compileShader(r),
            r
        }
        var Fs = 0;
        var zs = new yt;
        function Bs(e, t, n) {
            var r = e.getShaderParameter(t, e.COMPILE_STATUS)
              , i = e.getShaderInfoLog(t).trim();
            if (r && "" === i)
                return "";
            var a = /ERROR: 0:(\d+)/.exec(i);
            if (a) {
                var o = parseInt(a[1]);
                return n.toUpperCase() + "\n\n" + i + "\n\n" + function(e, t) {
                    for (var n = e.split("\n"), r = [], i = Math.max(t - 6, 0), a = Math.min(t + 6, n.length), o = i; o < a; o++) {
                        var s = o + 1;
                        r.push("".concat(s === t ? ">" : " ", " ").concat(s, ": ").concat(n[o]))
                    }
                    return r.join("\n")
                }(e.getShaderSource(t), o)
            }
            return i
        }
        function Vs(e, t) {
            var n = function(e) {
                Ut._getMatrix(zs, Ut.workingColorSpace, e);
                var t = "mat3( ".concat(zs.elements.map((function(e) {
                    return e.toFixed(4)
                }
                )), " )");
                switch (Ut.getTransfer(e)) {
                case $e:
                    return [t, "LinearTransferOETF"];
                case et:
                    return [t, "sRGBTransferOETF"];
                default:
                    return console.warn("THREE.WebGLProgram: Unsupported color space: ", e),
                    [t, "LinearTransferOETF"]
                }
            }(t);
            return ["vec4 ".concat(e, "( vec4 value ) {"), "\treturn ".concat(n[1], "( vec4( value.rgb * ").concat(n[0], ", value.a ) );"), "}"].join("\n")
        }
        function Hs(e, t) {
            var n;
            switch (t) {
            case 1:
                n = "Linear";
                break;
            case 2:
                n = "Reinhard";
                break;
            case 3:
                n = "Cineon";
                break;
            case 4:
                n = "ACESFilmic";
                break;
            case 6:
                n = "AgX";
                break;
            case 7:
                n = "Neutral";
                break;
            case 5:
                n = "Custom";
                break;
            default:
                console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t),
                n = "Linear"
            }
            return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
        }
        var Gs = new Yt;
        function Ws() {
            Ut.getLuminanceCoefficients(Gs);
            var e = Gs.x.toFixed(4)
              , t = Gs.y.toFixed(4)
              , n = Gs.z.toFixed(4);
            return ["float luminance( const in vec3 rgb ) {", "\tconst vec3 weights = vec3( ".concat(e, ", ").concat(t, ", ").concat(n, " );"), "\treturn dot( weights, rgb );", "}"].join("\n")
        }
        function Xs(e) {
            return "" !== e
        }
        function js(e, t) {
            var n = t.numSpotLightShadows + t.numSpotLightMaps - t.numSpotLightShadowsWithMaps;
            return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g, t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g, n).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
        }
        function qs(e, t) {
            return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
        }
        var Ys = /^[ \t]*#include +<([\w\d./]+)>/gm;
        function Ks(e) {
            return e.replace(Ys, Qs)
        }
        var Zs = new Map;
        function Qs(e, t) {
            var n = Za[t];
            if (void 0 === n) {
                var r = Zs.get(t);
                if (void 0 === r)
                    throw new Error("Can not resolve #include <" + t + ">");
                n = Za[r],
                console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.', t, r)
            }
            return Ks(n)
        }
        var Js = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
        function $s(e) {
            return e.replace(Js, el)
        }
        function el(e, t, n, r) {
            for (var i = "", a = parseInt(t); a < parseInt(n); a++)
                i += r.replace(/\[\s*i\s*\]/g, "[ " + a + " ]").replace(/UNROLLED_LOOP_INDEX/g, a);
            return i
        }
        function tl(e) {
            var t = "precision ".concat(e.precision, " float;\n\tprecision ").concat(e.precision, " int;\n\tprecision ").concat(e.precision, " sampler2D;\n\tprecision ").concat(e.precision, " samplerCube;\n\tprecision ").concat(e.precision, " sampler3D;\n\tprecision ").concat(e.precision, " sampler2DArray;\n\tprecision ").concat(e.precision, " sampler2DShadow;\n\tprecision ").concat(e.precision, " samplerCubeShadow;\n\tprecision ").concat(e.precision, " sampler2DArrayShadow;\n\tprecision ").concat(e.precision, " isampler2D;\n\tprecision ").concat(e.precision, " isampler3D;\n\tprecision ").concat(e.precision, " isamplerCube;\n\tprecision ").concat(e.precision, " isampler2DArray;\n\tprecision ").concat(e.precision, " usampler2D;\n\tprecision ").concat(e.precision, " usampler3D;\n\tprecision ").concat(e.precision, " usamplerCube;\n\tprecision ").concat(e.precision, " usampler2DArray;\n\t");
            return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"),
            t
        }
        function nl(e, t, n, r) {
            var i, a, o = e.getContext(), s = n.defines, l = n.vertexShader, u = n.fragmentShader, c = function(e) {
                var t = "SHADOWMAP_TYPE_BASIC";
                return 1 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF" : 2 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF_SOFT" : 3 === e.shadowMapType && (t = "SHADOWMAP_TYPE_VSM"),
                t
            }(n), d = function(e) {
                var t = "ENVMAP_TYPE_CUBE";
                if (e.envMap)
                    switch (e.envMapMode) {
                    case C:
                    case k:
                        t = "ENVMAP_TYPE_CUBE";
                        break;
                    case U:
                        t = "ENVMAP_TYPE_CUBE_UV"
                    }
                return t
            }(n), f = function(e) {
                var t = "ENVMAP_MODE_REFLECTION";
                e.envMap && e.envMapMode === k && (t = "ENVMAP_MODE_REFRACTION");
                return t
            }(n), h = function(e) {
                var t = "ENVMAP_BLENDING_NONE";
                if (e.envMap)
                    switch (e.combine) {
                    case 0:
                        t = "ENVMAP_BLENDING_MULTIPLY";
                        break;
                    case 1:
                        t = "ENVMAP_BLENDING_MIX";
                        break;
                    case 2:
                        t = "ENVMAP_BLENDING_ADD"
                    }
                return t
            }(n), p = function(e) {
                var t = e.envMapCubeUVHeight;
                if (null === t)
                    return null;
                var n = Math.log2(t) - 2
                  , r = 1 / t;
                return {
                    texelWidth: 1 / (3 * Math.max(Math.pow(2, n), 112)),
                    texelHeight: r,
                    maxMip: n
                }
            }(n), m = function(e) {
                return [e.extensionClipCullDistance ? "#extension GL_ANGLE_clip_cull_distance : require" : "", e.extensionMultiDraw ? "#extension GL_ANGLE_multi_draw : require" : ""].filter(Xs).join("\n")
            }(n), v = function(e) {
                var t = [];
                for (var n in e) {
                    var r = e[n];
                    !1 !== r && t.push("#define " + n + " " + r)
                }
                return t.join("\n")
            }(s), g = o.createProgram(), _ = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
            n.isRawShaderMaterial ? ((i = ["#define SHADER_TYPE " + n.shaderType, "#define SHADER_NAME " + n.shaderName, v].filter(Xs).join("\n")).length > 0 && (i += "\n"),
            (a = ["#define SHADER_TYPE " + n.shaderType, "#define SHADER_NAME " + n.shaderName, v].filter(Xs).join("\n")).length > 0 && (a += "\n")) : (i = [tl(n), "#define SHADER_TYPE " + n.shaderType, "#define SHADER_NAME " + n.shaderName, v, n.extensionClipCullDistance ? "#define USE_CLIP_DISTANCE" : "", n.batching ? "#define USE_BATCHING" : "", n.batchingColor ? "#define USE_BATCHING_COLOR" : "", n.instancing ? "#define USE_INSTANCING" : "", n.instancingColor ? "#define USE_INSTANCING_COLOR" : "", n.instancingMorph ? "#define USE_INSTANCING_MORPH" : "", n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + f : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "", n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "", n.displacementMap ? "#define USE_DISPLACEMENTMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.anisotropy ? "#define USE_ANISOTROPY" : "", n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "", n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "", n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.alphaHash ? "#define USE_ALPHAHASH" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "", n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "", n.mapUv ? "#define MAP_UV " + n.mapUv : "", n.alphaMapUv ? "#define ALPHAMAP_UV " + n.alphaMapUv : "", n.lightMapUv ? "#define LIGHTMAP_UV " + n.lightMapUv : "", n.aoMapUv ? "#define AOMAP_UV " + n.aoMapUv : "", n.emissiveMapUv ? "#define EMISSIVEMAP_UV " + n.emissiveMapUv : "", n.bumpMapUv ? "#define BUMPMAP_UV " + n.bumpMapUv : "", n.normalMapUv ? "#define NORMALMAP_UV " + n.normalMapUv : "", n.displacementMapUv ? "#define DISPLACEMENTMAP_UV " + n.displacementMapUv : "", n.metalnessMapUv ? "#define METALNESSMAP_UV " + n.metalnessMapUv : "", n.roughnessMapUv ? "#define ROUGHNESSMAP_UV " + n.roughnessMapUv : "", n.anisotropyMapUv ? "#define ANISOTROPYMAP_UV " + n.anisotropyMapUv : "", n.clearcoatMapUv ? "#define CLEARCOATMAP_UV " + n.clearcoatMapUv : "", n.clearcoatNormalMapUv ? "#define CLEARCOAT_NORMALMAP_UV " + n.clearcoatNormalMapUv : "", n.clearcoatRoughnessMapUv ? "#define CLEARCOAT_ROUGHNESSMAP_UV " + n.clearcoatRoughnessMapUv : "", n.iridescenceMapUv ? "#define IRIDESCENCEMAP_UV " + n.iridescenceMapUv : "", n.iridescenceThicknessMapUv ? "#define IRIDESCENCE_THICKNESSMAP_UV " + n.iridescenceThicknessMapUv : "", n.sheenColorMapUv ? "#define SHEEN_COLORMAP_UV " + n.sheenColorMapUv : "", n.sheenRoughnessMapUv ? "#define SHEEN_ROUGHNESSMAP_UV " + n.sheenRoughnessMapUv : "", n.specularMapUv ? "#define SPECULARMAP_UV " + n.specularMapUv : "", n.specularColorMapUv ? "#define SPECULAR_COLORMAP_UV " + n.specularColorMapUv : "", n.specularIntensityMapUv ? "#define SPECULAR_INTENSITYMAP_UV " + n.specularIntensityMapUv : "", n.transmissionMapUv ? "#define TRANSMISSIONMAP_UV " + n.transmissionMapUv : "", n.thicknessMapUv ? "#define THICKNESSMAP_UV " + n.thicknessMapUv : "", n.vertexTangents && !1 === n.flatShading ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUv1s ? "#define USE_UV1" : "", n.vertexUv2s ? "#define USE_UV2" : "", n.vertexUv3s ? "#define USE_UV3" : "", n.pointsUvs ? "#define USE_POINTS_UV" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.morphColors ? "#define USE_MORPHCOLORS" : "", n.morphTargetsCount > 0 ? "#define MORPHTARGETS_TEXTURE_STRIDE " + n.morphTextureStride : "", n.morphTargetsCount > 0 ? "#define MORPHTARGETS_COUNT " + n.morphTargetsCount : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.reverseDepthBuffer ? "#define USE_REVERSEDEPTHBUF" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", "\tattribute mat4 instanceMatrix;", "#endif", "#ifdef USE_INSTANCING_COLOR", "\tattribute vec3 instanceColor;", "#endif", "#ifdef USE_INSTANCING_MORPH", "\tuniform sampler2D morphTexture;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_UV1", "\tattribute vec2 uv1;", "#endif", "#ifdef USE_UV2", "\tattribute vec2 uv2;", "#endif", "#ifdef USE_UV3", "\tattribute vec2 uv3;", "#endif", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#if defined( USE_COLOR_ALPHA )", "\tattribute vec4 color;", "#elif defined( USE_COLOR )", "\tattribute vec3 color;", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(Xs).join("\n"),
            a = [tl(n), "#define SHADER_TYPE " + n.shaderType, "#define SHADER_NAME " + n.shaderName, v, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.alphaToCoverage ? "#define ALPHA_TO_COVERAGE" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + d : "", n.envMap ? "#define " + f : "", n.envMap ? "#define " + h : "", p ? "#define CUBEUV_TEXEL_WIDTH " + p.texelWidth : "", p ? "#define CUBEUV_TEXEL_HEIGHT " + p.texelHeight : "", p ? "#define CUBEUV_MAX_MIP " + p.maxMip + ".0" : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMapObjectSpace ? "#define USE_NORMALMAP_OBJECTSPACE" : "", n.normalMapTangentSpace ? "#define USE_NORMALMAP_TANGENTSPACE" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.anisotropy ? "#define USE_ANISOTROPY" : "", n.anisotropyMap ? "#define USE_ANISOTROPYMAP" : "", n.clearcoat ? "#define USE_CLEARCOAT" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.dispersion ? "#define USE_DISPERSION" : "", n.iridescence ? "#define USE_IRIDESCENCE" : "", n.iridescenceMap ? "#define USE_IRIDESCENCEMAP" : "", n.iridescenceThicknessMap ? "#define USE_IRIDESCENCE_THICKNESSMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularColorMap ? "#define USE_SPECULAR_COLORMAP" : "", n.specularIntensityMap ? "#define USE_SPECULAR_INTENSITYMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.alphaTest ? "#define USE_ALPHATEST" : "", n.alphaHash ? "#define USE_ALPHAHASH" : "", n.sheen ? "#define USE_SHEEN" : "", n.sheenColorMap ? "#define USE_SHEEN_COLORMAP" : "", n.sheenRoughnessMap ? "#define USE_SHEEN_ROUGHNESSMAP" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.vertexTangents && !1 === n.flatShading ? "#define USE_TANGENT" : "", n.vertexColors || n.instancingColor || n.batchingColor ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUv1s ? "#define USE_UV1" : "", n.vertexUv2s ? "#define USE_UV2" : "", n.vertexUv3s ? "#define USE_UV3" : "", n.pointsUvs ? "#define USE_POINTS_UV" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + c : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.numLightProbes > 0 ? "#define USE_LIGHT_PROBES" : "", n.decodeVideoTexture ? "#define DECODE_VIDEO_TEXTURE" : "", n.decodeVideoTextureEmissive ? "#define DECODE_VIDEO_TEXTURE_EMISSIVE" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.reverseDepthBuffer ? "#define USE_REVERSEDEPTHBUF" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", 0 !== n.toneMapping ? "#define TONE_MAPPING" : "", 0 !== n.toneMapping ? Za.tonemapping_pars_fragment : "", 0 !== n.toneMapping ? Hs("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", n.opaque ? "#define OPAQUE" : "", Za.colorspace_pars_fragment, Vs("linearToOutputTexel", n.outputColorSpace), Ws(), n.useDepthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(Xs).join("\n")),
            l = qs(l = js(l = Ks(l), n), n),
            u = qs(u = js(u = Ks(u), n), n),
            l = $s(l),
            u = $s(u),
            !0 !== n.isRawShaderMaterial && (_ = "#version 300 es\n",
            i = [m, "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + i,
            a = ["#define varying in", n.glslVersion === rt ? "" : "layout(location = 0) out highp vec4 pc_fragColor;", n.glslVersion === rt ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + a);
            var y, x, b = _ + i + l, S = _ + a + u, M = Os(o, o.VERTEX_SHADER, b), E = Os(o, o.FRAGMENT_SHADER, S);
            function T(t) {
                if (e.debug.checkShaderErrors) {
                    var n = o.getProgramInfoLog(g).trim()
                      , r = o.getShaderInfoLog(M).trim()
                      , s = o.getShaderInfoLog(E).trim()
                      , l = !0
                      , u = !0;
                    if (!1 === o.getProgramParameter(g, o.LINK_STATUS))
                        if (l = !1,
                        "function" === typeof e.debug.onShaderError)
                            e.debug.onShaderError(o, g, M, E);
                        else {
                            var c = Bs(o, M, "vertex")
                              , d = Bs(o, E, "fragment");
                            console.error("THREE.WebGLProgram: Shader Error " + o.getError() + " - VALIDATE_STATUS " + o.getProgramParameter(g, o.VALIDATE_STATUS) + "\n\nMaterial Name: " + t.name + "\nMaterial Type: " + t.type + "\n\nProgram Info Log: " + n + "\n" + c + "\n" + d)
                        }
                    else
                        "" !== n ? console.warn("THREE.WebGLProgram: Program Info Log:", n) : "" !== r && "" !== s || (u = !1);
                    u && (t.diagnostics = {
                        runnable: l,
                        programLog: n,
                        vertexShader: {
                            log: r,
                            prefix: i
                        },
                        fragmentShader: {
                            log: s,
                            prefix: a
                        }
                    })
                }
                o.deleteShader(M),
                o.deleteShader(E),
                y = new Is(o,g),
                x = function(e, t) {
                    for (var n = {}, r = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) {
                        var a = e.getActiveAttrib(t, i)
                          , o = a.name
                          , s = 1;
                        a.type === e.FLOAT_MAT2 && (s = 2),
                        a.type === e.FLOAT_MAT3 && (s = 3),
                        a.type === e.FLOAT_MAT4 && (s = 4),
                        n[o] = {
                            type: a.type,
                            location: e.getAttribLocation(t, o),
                            locationSize: s
                        }
                    }
                    return n
                }(o, g)
            }
            o.attachShader(g, M),
            o.attachShader(g, E),
            void 0 !== n.index0AttributeName ? o.bindAttribLocation(g, 0, n.index0AttributeName) : !0 === n.morphTargets && o.bindAttribLocation(g, 0, "position"),
            o.linkProgram(g),
            this.getUniforms = function() {
                return void 0 === y && T(this),
                y
            }
            ,
            this.getAttributes = function() {
                return void 0 === x && T(this),
                x
            }
            ;
            var w = !1 === n.rendererExtensionParallelShaderCompile;
            return this.isReady = function() {
                return !1 === w && (w = o.getProgramParameter(g, 37297)),
                w
            }
            ,
            this.destroy = function() {
                r.releaseStatesOfProgram(this),
                o.deleteProgram(g),
                this.program = void 0
            }
            ,
            this.type = n.shaderType,
            this.name = n.shaderName,
            this.id = Fs++,
            this.cacheKey = t,
            this.usedTimes = 1,
            this.program = g,
            this.vertexShader = M,
            this.fragmentShader = E,
            this
        }
        var rl = 0
          , il = function() {
            function e() {
                _(this, e),
                this.shaderCache = new Map,
                this.materialCache = new Map
            }
            return x(e, [{
                key: "update",
                value: function(e) {
                    var t = e.vertexShader
                      , n = e.fragmentShader
                      , r = this._getShaderStage(t)
                      , i = this._getShaderStage(n)
                      , a = this._getShaderCacheForMaterial(e);
                    return !1 === a.has(r) && (a.add(r),
                    r.usedTimes++),
                    !1 === a.has(i) && (a.add(i),
                    i.usedTimes++),
                    this
                }
            }, {
                key: "remove",
                value: function(e) {
                    var t, n = g(this.materialCache.get(e));
                    try {
                        for (n.s(); !(t = n.n()).done; ) {
                            var r = t.value;
                            r.usedTimes--,
                            0 === r.usedTimes && this.shaderCache.delete(r.code)
                        }
                    } catch (i) {
                        n.e(i)
                    } finally {
                        n.f()
                    }
                    return this.materialCache.delete(e),
                    this
                }
            }, {
                key: "getVertexShaderID",
                value: function(e) {
                    return this._getShaderStage(e.vertexShader).id
                }
            }, {
                key: "getFragmentShaderID",
                value: function(e) {
                    return this._getShaderStage(e.fragmentShader).id
                }
            }, {
                key: "dispose",
                value: function() {
                    this.shaderCache.clear(),
                    this.materialCache.clear()
                }
            }, {
                key: "_getShaderCacheForMaterial",
                value: function(e) {
                    var t = this.materialCache
                      , n = t.get(e);
                    return void 0 === n && (n = new Set,
                    t.set(e, n)),
                    n
                }
            }, {
                key: "_getShaderStage",
                value: function(e) {
                    var t = this.shaderCache
                      , n = t.get(e);
                    return void 0 === n && (n = new al(e),
                    t.set(e, n)),
                    n
                }
            }]),
            e
        }()
          , al = x((function e(t) {
            _(this, e),
            this.id = rl++,
            this.code = t,
            this.usedTimes = 0
        }
        ));
        function ol(e, t, n, r, i, a, o) {
            var s = new In
              , l = new il
              , u = new Set
              , c = []
              , d = i.logarithmicDepthBuffer
              , f = i.vertexTextures
              , h = i.precision
              , p = {
                MeshDepthMaterial: "depth",
                MeshDistanceMaterial: "distanceRGBA",
                MeshNormalMaterial: "normal",
                MeshBasicMaterial: "basic",
                MeshLambertMaterial: "lambert",
                MeshPhongMaterial: "phong",
                MeshToonMaterial: "toon",
                MeshStandardMaterial: "physical",
                MeshPhysicalMaterial: "physical",
                MeshMatcapMaterial: "matcap",
                LineBasicMaterial: "basic",
                LineDashedMaterial: "dashed",
                PointsMaterial: "points",
                ShadowMaterial: "shadow",
                SpriteMaterial: "sprite"
            };
            function m(e) {
                return u.add(e),
                0 === e ? "uv" : "uv".concat(e)
            }
            return {
                getParameters: function(a, s, c, v, g) {
                    var _ = v.fog
                      , y = g.geometry
                      , x = a.isMeshStandardMaterial ? v.environment : null
                      , b = (a.isMeshStandardMaterial ? n : t).get(a.envMap || x)
                      , S = b && b.mapping === U ? b.image.height : null
                      , M = p[a.type];
                    null !== a.precision && (h = i.getMaxPrecision(a.precision)) !== a.precision && console.warn("THREE.WebGLProgram.getParameters:", a.precision, "not supported, using", h, "instead.");
                    var E, T, w, A, R = y.morphAttributes.position || y.morphAttributes.normal || y.morphAttributes.color, C = void 0 !== R ? R.length : 0, k = 0;
                    if (void 0 !== y.morphAttributes.position && (k = 1),
                    void 0 !== y.morphAttributes.normal && (k = 2),
                    void 0 !== y.morphAttributes.color && (k = 3),
                    M) {
                        var P = Ja[M];
                        E = P.vertexShader,
                        T = P.fragmentShader
                    } else
                        E = a.vertexShader,
                        T = a.fragmentShader,
                        l.update(a),
                        w = l.getVertexShaderID(a),
                        A = l.getFragmentShaderID(a);
                    var L = e.getRenderTarget()
                      , D = e.state.buffers.depth.getReversed()
                      , N = !0 === g.isInstancedMesh
                      , I = !0 === g.isBatchedMesh
                      , O = !!a.map
                      , F = !!a.matcap
                      , z = !!b
                      , B = !!a.aoMap
                      , V = !!a.lightMap
                      , H = !!a.bumpMap
                      , G = !!a.normalMap
                      , W = !!a.displacementMap
                      , X = !!a.emissiveMap
                      , j = !!a.metalnessMap
                      , q = !!a.roughnessMap
                      , Y = a.anisotropy > 0
                      , K = a.clearcoat > 0
                      , Z = a.dispersion > 0
                      , Q = a.iridescence > 0
                      , J = a.sheen > 0
                      , $ = a.transmission > 0
                      , ee = Y && !!a.anisotropyMap
                      , te = K && !!a.clearcoatMap
                      , ne = K && !!a.clearcoatNormalMap
                      , re = K && !!a.clearcoatRoughnessMap
                      , ie = Q && !!a.iridescenceMap
                      , ae = Q && !!a.iridescenceThicknessMap
                      , oe = J && !!a.sheenColorMap
                      , se = J && !!a.sheenRoughnessMap
                      , le = !!a.specularMap
                      , ue = !!a.specularColorMap
                      , ce = !!a.specularIntensityMap
                      , de = $ && !!a.transmissionMap
                      , fe = $ && !!a.thicknessMap
                      , he = !!a.gradientMap
                      , pe = !!a.alphaMap
                      , me = a.alphaTest > 0
                      , ve = !!a.alphaHash
                      , ge = !!a.extensions
                      , _e = 0;
                    a.toneMapped && (null !== L && !0 !== L.isXRRenderTarget || (_e = e.toneMapping));
                    var ye = {
                        shaderID: M,
                        shaderType: a.type,
                        shaderName: a.name,
                        vertexShader: E,
                        fragmentShader: T,
                        defines: a.defines,
                        customVertexShaderID: w,
                        customFragmentShaderID: A,
                        isRawShaderMaterial: !0 === a.isRawShaderMaterial,
                        glslVersion: a.glslVersion,
                        precision: h,
                        batching: I,
                        batchingColor: I && null !== g._colorsTexture,
                        instancing: N,
                        instancingColor: N && null !== g.instanceColor,
                        instancingMorph: N && null !== g.morphTexture,
                        supportsVertexTextures: f,
                        outputColorSpace: null === L ? e.outputColorSpace : !0 === L.isXRRenderTarget ? L.texture.colorSpace : Je,
                        alphaToCoverage: !!a.alphaToCoverage,
                        map: O,
                        matcap: F,
                        envMap: z,
                        envMapMode: z && b.mapping,
                        envMapCubeUVHeight: S,
                        aoMap: B,
                        lightMap: V,
                        bumpMap: H,
                        normalMap: G,
                        displacementMap: f && W,
                        emissiveMap: X,
                        normalMapObjectSpace: G && 1 === a.normalMapType,
                        normalMapTangentSpace: G && 0 === a.normalMapType,
                        metalnessMap: j,
                        roughnessMap: q,
                        anisotropy: Y,
                        anisotropyMap: ee,
                        clearcoat: K,
                        clearcoatMap: te,
                        clearcoatNormalMap: ne,
                        clearcoatRoughnessMap: re,
                        dispersion: Z,
                        iridescence: Q,
                        iridescenceMap: ie,
                        iridescenceThicknessMap: ae,
                        sheen: J,
                        sheenColorMap: oe,
                        sheenRoughnessMap: se,
                        specularMap: le,
                        specularColorMap: ue,
                        specularIntensityMap: ce,
                        transmission: $,
                        transmissionMap: de,
                        thicknessMap: fe,
                        gradientMap: he,
                        opaque: !1 === a.transparent && 1 === a.blending && !1 === a.alphaToCoverage,
                        alphaMap: pe,
                        alphaTest: me,
                        alphaHash: ve,
                        combine: a.combine,
                        mapUv: O && m(a.map.channel),
                        aoMapUv: B && m(a.aoMap.channel),
                        lightMapUv: V && m(a.lightMap.channel),
                        bumpMapUv: H && m(a.bumpMap.channel),
                        normalMapUv: G && m(a.normalMap.channel),
                        displacementMapUv: W && m(a.displacementMap.channel),
                        emissiveMapUv: X && m(a.emissiveMap.channel),
                        metalnessMapUv: j && m(a.metalnessMap.channel),
                        roughnessMapUv: q && m(a.roughnessMap.channel),
                        anisotropyMapUv: ee && m(a.anisotropyMap.channel),
                        clearcoatMapUv: te && m(a.clearcoatMap.channel),
                        clearcoatNormalMapUv: ne && m(a.clearcoatNormalMap.channel),
                        clearcoatRoughnessMapUv: re && m(a.clearcoatRoughnessMap.channel),
                        iridescenceMapUv: ie && m(a.iridescenceMap.channel),
                        iridescenceThicknessMapUv: ae && m(a.iridescenceThicknessMap.channel),
                        sheenColorMapUv: oe && m(a.sheenColorMap.channel),
                        sheenRoughnessMapUv: se && m(a.sheenRoughnessMap.channel),
                        specularMapUv: le && m(a.specularMap.channel),
                        specularColorMapUv: ue && m(a.specularColorMap.channel),
                        specularIntensityMapUv: ce && m(a.specularIntensityMap.channel),
                        transmissionMapUv: de && m(a.transmissionMap.channel),
                        thicknessMapUv: fe && m(a.thicknessMap.channel),
                        alphaMapUv: pe && m(a.alphaMap.channel),
                        vertexTangents: !!y.attributes.tangent && (G || Y),
                        vertexColors: a.vertexColors,
                        vertexAlphas: !0 === a.vertexColors && !!y.attributes.color && 4 === y.attributes.color.itemSize,
                        pointsUvs: !0 === g.isPoints && !!y.attributes.uv && (O || pe),
                        fog: !!_,
                        useFog: !0 === a.fog,
                        fogExp2: !!_ && _.isFogExp2,
                        flatShading: !0 === a.flatShading,
                        sizeAttenuation: !0 === a.sizeAttenuation,
                        logarithmicDepthBuffer: d,
                        reverseDepthBuffer: D,
                        skinning: !0 === g.isSkinnedMesh,
                        morphTargets: void 0 !== y.morphAttributes.position,
                        morphNormals: void 0 !== y.morphAttributes.normal,
                        morphColors: void 0 !== y.morphAttributes.color,
                        morphTargetsCount: C,
                        morphTextureStride: k,
                        numDirLights: s.directional.length,
                        numPointLights: s.point.length,
                        numSpotLights: s.spot.length,
                        numSpotLightMaps: s.spotLightMap.length,
                        numRectAreaLights: s.rectArea.length,
                        numHemiLights: s.hemi.length,
                        numDirLightShadows: s.directionalShadowMap.length,
                        numPointLightShadows: s.pointShadowMap.length,
                        numSpotLightShadows: s.spotShadowMap.length,
                        numSpotLightShadowsWithMaps: s.numSpotLightShadowsWithMaps,
                        numLightProbes: s.numLightProbes,
                        numClippingPlanes: o.numPlanes,
                        numClipIntersection: o.numIntersection,
                        dithering: a.dithering,
                        shadowMapEnabled: e.shadowMap.enabled && c.length > 0,
                        shadowMapType: e.shadowMap.type,
                        toneMapping: _e,
                        decodeVideoTexture: O && !0 === a.map.isVideoTexture && Ut.getTransfer(a.map.colorSpace) === et,
                        decodeVideoTextureEmissive: X && !0 === a.emissiveMap.isVideoTexture && Ut.getTransfer(a.emissiveMap.colorSpace) === et,
                        premultipliedAlpha: a.premultipliedAlpha,
                        doubleSided: 2 === a.side,
                        flipSided: 1 === a.side,
                        useDepthPacking: a.depthPacking >= 0,
                        depthPacking: a.depthPacking || 0,
                        index0AttributeName: a.index0AttributeName,
                        extensionClipCullDistance: ge && !0 === a.extensions.clipCullDistance && r.has("WEBGL_clip_cull_distance"),
                        extensionMultiDraw: (ge && !0 === a.extensions.multiDraw || I) && r.has("WEBGL_multi_draw"),
                        rendererExtensionParallelShaderCompile: r.has("KHR_parallel_shader_compile"),
                        customProgramCacheKey: a.customProgramCacheKey()
                    };
                    return ye.vertexUv1s = u.has(1),
                    ye.vertexUv2s = u.has(2),
                    ye.vertexUv3s = u.has(3),
                    u.clear(),
                    ye
                },
                getProgramCacheKey: function(t) {
                    var n = [];
                    if (t.shaderID ? n.push(t.shaderID) : (n.push(t.customVertexShaderID),
                    n.push(t.customFragmentShaderID)),
                    void 0 !== t.defines)
                        for (var r in t.defines)
                            n.push(r),
                            n.push(t.defines[r]);
                    return !1 === t.isRawShaderMaterial && (!function(e, t) {
                        e.push(t.precision),
                        e.push(t.outputColorSpace),
                        e.push(t.envMapMode),
                        e.push(t.envMapCubeUVHeight),
                        e.push(t.mapUv),
                        e.push(t.alphaMapUv),
                        e.push(t.lightMapUv),
                        e.push(t.aoMapUv),
                        e.push(t.bumpMapUv),
                        e.push(t.normalMapUv),
                        e.push(t.displacementMapUv),
                        e.push(t.emissiveMapUv),
                        e.push(t.metalnessMapUv),
                        e.push(t.roughnessMapUv),
                        e.push(t.anisotropyMapUv),
                        e.push(t.clearcoatMapUv),
                        e.push(t.clearcoatNormalMapUv),
                        e.push(t.clearcoatRoughnessMapUv),
                        e.push(t.iridescenceMapUv),
                        e.push(t.iridescenceThicknessMapUv),
                        e.push(t.sheenColorMapUv),
                        e.push(t.sheenRoughnessMapUv),
                        e.push(t.specularMapUv),
                        e.push(t.specularColorMapUv),
                        e.push(t.specularIntensityMapUv),
                        e.push(t.transmissionMapUv),
                        e.push(t.thicknessMapUv),
                        e.push(t.combine),
                        e.push(t.fogExp2),
                        e.push(t.sizeAttenuation),
                        e.push(t.morphTargetsCount),
                        e.push(t.morphAttributeCount),
                        e.push(t.numDirLights),
                        e.push(t.numPointLights),
                        e.push(t.numSpotLights),
                        e.push(t.numSpotLightMaps),
                        e.push(t.numHemiLights),
                        e.push(t.numRectAreaLights),
                        e.push(t.numDirLightShadows),
                        e.push(t.numPointLightShadows),
                        e.push(t.numSpotLightShadows),
                        e.push(t.numSpotLightShadowsWithMaps),
                        e.push(t.numLightProbes),
                        e.push(t.shadowMapType),
                        e.push(t.toneMapping),
                        e.push(t.numClippingPlanes),
                        e.push(t.numClipIntersection),
                        e.push(t.depthPacking)
                    }(n, t),
                    function(e, t) {
                        s.disableAll(),
                        t.supportsVertexTextures && s.enable(0);
                        t.instancing && s.enable(1);
                        t.instancingColor && s.enable(2);
                        t.instancingMorph && s.enable(3);
                        t.matcap && s.enable(4);
                        t.envMap && s.enable(5);
                        t.normalMapObjectSpace && s.enable(6);
                        t.normalMapTangentSpace && s.enable(7);
                        t.clearcoat && s.enable(8);
                        t.iridescence && s.enable(9);
                        t.alphaTest && s.enable(10);
                        t.vertexColors && s.enable(11);
                        t.vertexAlphas && s.enable(12);
                        t.vertexUv1s && s.enable(13);
                        t.vertexUv2s && s.enable(14);
                        t.vertexUv3s && s.enable(15);
                        t.vertexTangents && s.enable(16);
                        t.anisotropy && s.enable(17);
                        t.alphaHash && s.enable(18);
                        t.batching && s.enable(19);
                        t.dispersion && s.enable(20);
                        t.batchingColor && s.enable(21);
                        e.push(s.mask),
                        s.disableAll(),
                        t.fog && s.enable(0);
                        t.useFog && s.enable(1);
                        t.flatShading && s.enable(2);
                        t.logarithmicDepthBuffer && s.enable(3);
                        t.reverseDepthBuffer && s.enable(4);
                        t.skinning && s.enable(5);
                        t.morphTargets && s.enable(6);
                        t.morphNormals && s.enable(7);
                        t.morphColors && s.enable(8);
                        t.premultipliedAlpha && s.enable(9);
                        t.shadowMapEnabled && s.enable(10);
                        t.doubleSided && s.enable(11);
                        t.flipSided && s.enable(12);
                        t.useDepthPacking && s.enable(13);
                        t.dithering && s.enable(14);
                        t.transmission && s.enable(15);
                        t.sheen && s.enable(16);
                        t.opaque && s.enable(17);
                        t.pointsUvs && s.enable(18);
                        t.decodeVideoTexture && s.enable(19);
                        t.decodeVideoTextureEmissive && s.enable(20);
                        t.alphaToCoverage && s.enable(21);
                        e.push(s.mask)
                    }(n, t),
                    n.push(e.outputColorSpace)),
                    n.push(t.customProgramCacheKey),
                    n.join()
                },
                getUniforms: function(e) {
                    var t, n = p[e.type];
                    if (n) {
                        var r = Ja[n];
                        t = ei.clone(r.uniforms)
                    } else
                        t = e.uniforms;
                    return t
                },
                acquireProgram: function(t, n) {
                    for (var r, i = 0, o = c.length; i < o; i++) {
                        var s = c[i];
                        if (s.cacheKey === n) {
                            ++(r = s).usedTimes;
                            break
                        }
                    }
                    return void 0 === r && (r = new nl(e,n,t,a),
                    c.push(r)),
                    r
                },
                releaseProgram: function(e) {
                    if (0 === --e.usedTimes) {
                        var t = c.indexOf(e);
                        c[t] = c[c.length - 1],
                        c.pop(),
                        e.destroy()
                    }
                },
                releaseShaderCache: function(e) {
                    l.remove(e)
                },
                programs: c,
                dispose: function() {
                    l.dispose()
                }
            }
        }
        function sl() {
            var e = new WeakMap;
            return {
                has: function(t) {
                    return e.has(t)
                },
                get: function(t) {
                    var n = e.get(t);
                    return void 0 === n && (n = {},
                    e.set(t, n)),
                    n
                },
                remove: function(t) {
                    e.delete(t)
                },
                update: function(t, n, r) {
                    e.get(t)[n] = r
                },
                dispose: function() {
                    e = new WeakMap
                }
            }
        }
        function ll(e, t) {
            return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
        }
        function ul(e, t) {
            return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
        }
        function cl() {
            var e = []
              , t = 0
              , n = []
              , r = []
              , i = [];
            function a(n, r, i, a, o, s) {
                var l = e[t];
                return void 0 === l ? (l = {
                    id: n.id,
                    object: n,
                    geometry: r,
                    material: i,
                    groupOrder: a,
                    renderOrder: n.renderOrder,
                    z: o,
                    group: s
                },
                e[t] = l) : (l.id = n.id,
                l.object = n,
                l.geometry = r,
                l.material = i,
                l.groupOrder = a,
                l.renderOrder = n.renderOrder,
                l.z = o,
                l.group = s),
                t++,
                l
            }
            return {
                opaque: n,
                transmissive: r,
                transparent: i,
                init: function() {
                    t = 0,
                    n.length = 0,
                    r.length = 0,
                    i.length = 0
                },
                push: function(e, t, o, s, l, u) {
                    var c = a(e, t, o, s, l, u);
                    o.transmission > 0 ? r.push(c) : !0 === o.transparent ? i.push(c) : n.push(c)
                },
                unshift: function(e, t, o, s, l, u) {
                    var c = a(e, t, o, s, l, u);
                    o.transmission > 0 ? r.unshift(c) : !0 === o.transparent ? i.unshift(c) : n.unshift(c)
                },
                finish: function() {
                    for (var n = t, r = e.length; n < r; n++) {
                        var i = e[n];
                        if (null === i.id)
                            break;
                        i.id = null,
                        i.object = null,
                        i.geometry = null,
                        i.material = null,
                        i.group = null
                    }
                },
                sort: function(e, t) {
                    n.length > 1 && n.sort(e || ll),
                    r.length > 1 && r.sort(t || ul),
                    i.length > 1 && i.sort(t || ul)
                }
            }
        }
        function dl() {
            var e = new WeakMap;
            return {
                get: function(t, n) {
                    var r, i = e.get(t);
                    return void 0 === i ? (r = new cl,
                    e.set(t, [r])) : n >= i.length ? (r = new cl,
                    i.push(r)) : r = i[n],
                    r
                },
                dispose: function() {
                    e = new WeakMap
                }
            }
        }
        function fl() {
            var e = {};
            return {
                get: function(t) {
                    if (void 0 !== e[t.id])
                        return e[t.id];
                    var n;
                    switch (t.type) {
                    case "DirectionalLight":
                        n = {
                            direction: new Yt,
                            color: new gr
                        };
                        break;
                    case "SpotLight":
                        n = {
                            position: new Yt,
                            direction: new Yt,
                            color: new gr,
                            distance: 0,
                            coneCos: 0,
                            penumbraCos: 0,
                            decay: 0
                        };
                        break;
                    case "PointLight":
                        n = {
                            position: new Yt,
                            color: new gr,
                            distance: 0,
                            decay: 0
                        };
                        break;
                    case "HemisphereLight":
                        n = {
                            direction: new Yt,
                            skyColor: new gr,
                            groundColor: new gr
                        };
                        break;
                    case "RectAreaLight":
                        n = {
                            color: new gr,
                            position: new Yt,
                            halfWidth: new Yt,
                            halfHeight: new Yt
                        }
                    }
                    return e[t.id] = n,
                    n
                }
            }
        }
        var hl = 0;
        function pl(e, t) {
            return (t.castShadow ? 2 : 0) - (e.castShadow ? 2 : 0) + (t.map ? 1 : 0) - (e.map ? 1 : 0)
        }
        function ml(e) {
            for (var t = new fl, n = function() {
                var e = {};
                return {
                    get: function(t) {
                        if (void 0 !== e[t.id])
                            return e[t.id];
                        var n;
                        switch (t.type) {
                        case "DirectionalLight":
                        case "SpotLight":
                            n = {
                                shadowIntensity: 1,
                                shadowBias: 0,
                                shadowNormalBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new _t
                            };
                            break;
                        case "PointLight":
                            n = {
                                shadowIntensity: 1,
                                shadowBias: 0,
                                shadowNormalBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new _t,
                                shadowCameraNear: 1,
                                shadowCameraFar: 1e3
                            }
                        }
                        return e[t.id] = n,
                        n
                    }
                }
            }(), r = {
                version: 0,
                hash: {
                    directionalLength: -1,
                    pointLength: -1,
                    spotLength: -1,
                    rectAreaLength: -1,
                    hemiLength: -1,
                    numDirectionalShadows: -1,
                    numPointShadows: -1,
                    numSpotShadows: -1,
                    numSpotMaps: -1,
                    numLightProbes: -1
                },
                ambient: [0, 0, 0],
                probe: [],
                directional: [],
                directionalShadow: [],
                directionalShadowMap: [],
                directionalShadowMatrix: [],
                spot: [],
                spotLightMap: [],
                spotShadow: [],
                spotShadowMap: [],
                spotLightMatrix: [],
                rectArea: [],
                rectAreaLTC1: null,
                rectAreaLTC2: null,
                point: [],
                pointShadow: [],
                pointShadowMap: [],
                pointShadowMatrix: [],
                hemi: [],
                numSpotLightShadowsWithMaps: 0,
                numLightProbes: 0
            }, i = 0; i < 9; i++)
                r.probe.push(new Yt);
            var a = new Yt
              , o = new Tn
              , s = new Tn;
            return {
                setup: function(i) {
                    for (var a = 0, o = 0, s = 0, l = 0; l < 9; l++)
                        r.probe[l].set(0, 0, 0);
                    var u = 0
                      , c = 0
                      , d = 0
                      , f = 0
                      , h = 0
                      , p = 0
                      , m = 0
                      , v = 0
                      , g = 0
                      , _ = 0
                      , y = 0;
                    i.sort(pl);
                    for (var x = 0, b = i.length; x < b; x++) {
                        var S = i[x]
                          , M = S.color
                          , E = S.intensity
                          , T = S.distance
                          , w = S.shadow && S.shadow.map ? S.shadow.map.texture : null;
                        if (S.isAmbientLight)
                            a += M.r * E,
                            o += M.g * E,
                            s += M.b * E;
                        else if (S.isLightProbe) {
                            for (var A = 0; A < 9; A++)
                                r.probe[A].addScaledVector(S.sh.coefficients[A], E);
                            y++
                        } else if (S.isDirectionalLight) {
                            var R = t.get(S);
                            if (R.color.copy(S.color).multiplyScalar(S.intensity),
                            S.castShadow) {
                                var C = S.shadow
                                  , k = n.get(S);
                                k.shadowIntensity = C.intensity,
                                k.shadowBias = C.bias,
                                k.shadowNormalBias = C.normalBias,
                                k.shadowRadius = C.radius,
                                k.shadowMapSize = C.mapSize,
                                r.directionalShadow[u] = k,
                                r.directionalShadowMap[u] = w,
                                r.directionalShadowMatrix[u] = S.shadow.matrix,
                                p++
                            }
                            r.directional[u] = R,
                            u++
                        } else if (S.isSpotLight) {
                            var P = t.get(S);
                            P.position.setFromMatrixPosition(S.matrixWorld),
                            P.color.copy(M).multiplyScalar(E),
                            P.distance = T,
                            P.coneCos = Math.cos(S.angle),
                            P.penumbraCos = Math.cos(S.angle * (1 - S.penumbra)),
                            P.decay = S.decay,
                            r.spot[d] = P;
                            var L = S.shadow;
                            if (S.map && (r.spotLightMap[g] = S.map,
                            g++,
                            L.updateMatrices(S),
                            S.castShadow && _++),
                            r.spotLightMatrix[d] = L.matrix,
                            S.castShadow) {
                                var U = n.get(S);
                                U.shadowIntensity = L.intensity,
                                U.shadowBias = L.bias,
                                U.shadowNormalBias = L.normalBias,
                                U.shadowRadius = L.radius,
                                U.shadowMapSize = L.mapSize,
                                r.spotShadow[d] = U,
                                r.spotShadowMap[d] = w,
                                v++
                            }
                            d++
                        } else if (S.isRectAreaLight) {
                            var D = t.get(S);
                            D.color.copy(M).multiplyScalar(E),
                            D.halfWidth.set(.5 * S.width, 0, 0),
                            D.halfHeight.set(0, .5 * S.height, 0),
                            r.rectArea[f] = D,
                            f++
                        } else if (S.isPointLight) {
                            var N = t.get(S);
                            if (N.color.copy(S.color).multiplyScalar(S.intensity),
                            N.distance = S.distance,
                            N.decay = S.decay,
                            S.castShadow) {
                                var I = S.shadow
                                  , O = n.get(S);
                                O.shadowIntensity = I.intensity,
                                O.shadowBias = I.bias,
                                O.shadowNormalBias = I.normalBias,
                                O.shadowRadius = I.radius,
                                O.shadowMapSize = I.mapSize,
                                O.shadowCameraNear = I.camera.near,
                                O.shadowCameraFar = I.camera.far,
                                r.pointShadow[c] = O,
                                r.pointShadowMap[c] = w,
                                r.pointShadowMatrix[c] = S.shadow.matrix,
                                m++
                            }
                            r.point[c] = N,
                            c++
                        } else if (S.isHemisphereLight) {
                            var F = t.get(S);
                            F.skyColor.copy(S.color).multiplyScalar(E),
                            F.groundColor.copy(S.groundColor).multiplyScalar(E),
                            r.hemi[h] = F,
                            h++
                        }
                    }
                    f > 0 && (!0 === e.has("OES_texture_float_linear") ? (r.rectAreaLTC1 = Qa.LTC_FLOAT_1,
                    r.rectAreaLTC2 = Qa.LTC_FLOAT_2) : (r.rectAreaLTC1 = Qa.LTC_HALF_1,
                    r.rectAreaLTC2 = Qa.LTC_HALF_2)),
                    r.ambient[0] = a,
                    r.ambient[1] = o,
                    r.ambient[2] = s;
                    var z = r.hash;
                    z.directionalLength === u && z.pointLength === c && z.spotLength === d && z.rectAreaLength === f && z.hemiLength === h && z.numDirectionalShadows === p && z.numPointShadows === m && z.numSpotShadows === v && z.numSpotMaps === g && z.numLightProbes === y || (r.directional.length = u,
                    r.spot.length = d,
                    r.rectArea.length = f,
                    r.point.length = c,
                    r.hemi.length = h,
                    r.directionalShadow.length = p,
                    r.directionalShadowMap.length = p,
                    r.pointShadow.length = m,
                    r.pointShadowMap.length = m,
                    r.spotShadow.length = v,
                    r.spotShadowMap.length = v,
                    r.directionalShadowMatrix.length = p,
                    r.pointShadowMatrix.length = m,
                    r.spotLightMatrix.length = v + g - _,
                    r.spotLightMap.length = g,
                    r.numSpotLightShadowsWithMaps = _,
                    r.numLightProbes = y,
                    z.directionalLength = u,
                    z.pointLength = c,
                    z.spotLength = d,
                    z.rectAreaLength = f,
                    z.hemiLength = h,
                    z.numDirectionalShadows = p,
                    z.numPointShadows = m,
                    z.numSpotShadows = v,
                    z.numSpotMaps = g,
                    z.numLightProbes = y,
                    r.version = hl++)
                },
                setupView: function(e, t) {
                    for (var n = 0, i = 0, l = 0, u = 0, c = 0, d = t.matrixWorldInverse, f = 0, h = e.length; f < h; f++) {
                        var p = e[f];
                        if (p.isDirectionalLight) {
                            var m = r.directional[n];
                            m.direction.setFromMatrixPosition(p.matrixWorld),
                            a.setFromMatrixPosition(p.target.matrixWorld),
                            m.direction.sub(a),
                            m.direction.transformDirection(d),
                            n++
                        } else if (p.isSpotLight) {
                            var v = r.spot[l];
                            v.position.setFromMatrixPosition(p.matrixWorld),
                            v.position.applyMatrix4(d),
                            v.direction.setFromMatrixPosition(p.matrixWorld),
                            a.setFromMatrixPosition(p.target.matrixWorld),
                            v.direction.sub(a),
                            v.direction.transformDirection(d),
                            l++
                        } else if (p.isRectAreaLight) {
                            var g = r.rectArea[u];
                            g.position.setFromMatrixPosition(p.matrixWorld),
                            g.position.applyMatrix4(d),
                            s.identity(),
                            o.copy(p.matrixWorld),
                            o.premultiply(d),
                            s.extractRotation(o),
                            g.halfWidth.set(.5 * p.width, 0, 0),
                            g.halfHeight.set(0, .5 * p.height, 0),
                            g.halfWidth.applyMatrix4(s),
                            g.halfHeight.applyMatrix4(s),
                            u++
                        } else if (p.isPointLight) {
                            var _ = r.point[i];
                            _.position.setFromMatrixPosition(p.matrixWorld),
                            _.position.applyMatrix4(d),
                            i++
                        } else if (p.isHemisphereLight) {
                            var y = r.hemi[c];
                            y.direction.setFromMatrixPosition(p.matrixWorld),
                            y.direction.transformDirection(d),
                            c++
                        }
                    }
                },
                state: r
            }
        }
        function vl(e) {
            var t = new ml(e)
              , n = []
              , r = [];
            var i = {
                lightsArray: n,
                shadowsArray: r,
                camera: null,
                lights: t,
                transmissionRenderTarget: {}
            };
            return {
                init: function(e) {
                    i.camera = e,
                    n.length = 0,
                    r.length = 0
                },
                state: i,
                setupLights: function() {
                    t.setup(n)
                },
                setupLightsView: function(e) {
                    t.setupView(n, e)
                },
                pushLight: function(e) {
                    n.push(e)
                },
                pushShadow: function(e) {
                    r.push(e)
                }
            }
        }
        function gl(e) {
            var t = new WeakMap;
            return {
                get: function(n) {
                    var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, a = t.get(n);
                    return void 0 === a ? (r = new vl(e),
                    t.set(n, [r])) : i >= a.length ? (r = new vl(e),
                    a.push(r)) : r = a[i],
                    r
                },
                dispose: function() {
                    t = new WeakMap
                }
            }
        }
        function _l(e, t, n) {
            var r, i = new Ii, a = new _t, o = new _t, s = new Ht, l = new sa({
                depthPacking: 3201
            }), u = new la, c = {}, d = n.maxTextureSize, f = (p(r = {}, 0, 1),
            p(r, 1, 0),
            p(r, 2, 2),
            r), h = new ti({
                defines: {
                    VSM_SAMPLES: 8
                },
                uniforms: {
                    shadow_pass: {
                        value: null
                    },
                    resolution: {
                        value: new _t
                    },
                    radius: {
                        value: 4
                    }
                },
                vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
                fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
            }), m = h.clone();
            m.defines.HORIZONTAL_PASS = 1;
            var v = new Nr;
            v.setAttribute("position", new Er(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]),3));
            var g = new qr(v,h)
              , _ = this;
            this.enabled = !1,
            this.autoUpdate = !0,
            this.needsUpdate = !1,
            this.type = 1;
            var y = this.type;
            function x(n, r) {
                var i = t.update(g);
                h.defines.VSM_SAMPLES !== n.blurSamples && (h.defines.VSM_SAMPLES = n.blurSamples,
                m.defines.VSM_SAMPLES = n.blurSamples,
                h.needsUpdate = !0,
                m.needsUpdate = !0),
                null === n.mapPass && (n.mapPass = new Wt(a.x,a.y)),
                h.uniforms.shadow_pass.value = n.map.texture,
                h.uniforms.resolution.value = n.mapSize,
                h.uniforms.radius.value = n.radius,
                e.setRenderTarget(n.mapPass),
                e.clear(),
                e.renderBufferDirect(r, null, i, h, g, null),
                m.uniforms.shadow_pass.value = n.mapPass.texture,
                m.uniforms.resolution.value = n.mapSize,
                m.uniforms.radius.value = n.radius,
                e.setRenderTarget(n.map),
                e.clear(),
                e.renderBufferDirect(r, null, i, m, g, null)
            }
            function b(t, n, r, i) {
                var a = null
                  , o = !0 === r.isPointLight ? t.customDistanceMaterial : t.customDepthMaterial;
                if (void 0 !== o)
                    a = o;
                else if (a = !0 === r.isPointLight ? u : l,
                e.localClippingEnabled && !0 === n.clipShadows && Array.isArray(n.clippingPlanes) && 0 !== n.clippingPlanes.length || n.displacementMap && 0 !== n.displacementScale || n.alphaMap && n.alphaTest > 0 || n.map && n.alphaTest > 0) {
                    var s = a.uuid
                      , d = n.uuid
                      , h = c[s];
                    void 0 === h && (h = {},
                    c[s] = h);
                    var p = h[d];
                    void 0 === p && (p = a.clone(),
                    h[d] = p,
                    n.addEventListener("dispose", M)),
                    a = p
                }
                (a.visible = n.visible,
                a.wireframe = n.wireframe,
                a.side = 3 === i ? null !== n.shadowSide ? n.shadowSide : n.side : null !== n.shadowSide ? n.shadowSide : f[n.side],
                a.alphaMap = n.alphaMap,
                a.alphaTest = n.alphaTest,
                a.map = n.map,
                a.clipShadows = n.clipShadows,
                a.clippingPlanes = n.clippingPlanes,
                a.clipIntersection = n.clipIntersection,
                a.displacementMap = n.displacementMap,
                a.displacementScale = n.displacementScale,
                a.displacementBias = n.displacementBias,
                a.wireframeLinewidth = n.wireframeLinewidth,
                a.linewidth = n.linewidth,
                !0 === r.isPointLight && !0 === a.isMeshDistanceMaterial) && (e.properties.get(a).light = r);
                return a
            }
            function S(n, r, a, o, s) {
                if (!1 !== n.visible) {
                    if (n.layers.test(r.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && 3 === s) && (!n.frustumCulled || i.intersectsObject(n))) {
                        n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse, n.matrixWorld);
                        var l = t.update(n)
                          , u = n.material;
                        if (Array.isArray(u))
                            for (var c = l.groups, d = 0, f = c.length; d < f; d++) {
                                var h = c[d]
                                  , p = u[h.materialIndex];
                                if (p && p.visible) {
                                    var m = b(n, p, o, s);
                                    n.onBeforeShadow(e, n, r, a, l, m, h),
                                    e.renderBufferDirect(a, null, l, m, n, h),
                                    n.onAfterShadow(e, n, r, a, l, m, h)
                                }
                            }
                        else if (u.visible) {
                            var v = b(n, u, o, s);
                            n.onBeforeShadow(e, n, r, a, l, v, null),
                            e.renderBufferDirect(a, null, l, v, n, null),
                            n.onAfterShadow(e, n, r, a, l, v, null)
                        }
                    }
                    for (var g = n.children, _ = 0, y = g.length; _ < y; _++)
                        S(g[_], r, a, o, s)
                }
            }
            function M(e) {
                var t = e.target;
                for (var n in t.removeEventListener("dispose", M),
                c) {
                    var r = c[n]
                      , i = e.target.uuid;
                    if (i in r)
                        r[i].dispose(),
                        delete r[i]
                }
            }
            this.render = function(t, n, r) {
                if (!1 !== _.enabled && (!1 !== _.autoUpdate || !1 !== _.needsUpdate) && 0 !== t.length) {
                    var l = e.getRenderTarget()
                      , u = e.getActiveCubeFace()
                      , c = e.getActiveMipmapLevel()
                      , f = e.state;
                    f.setBlending(0),
                    f.buffers.color.setClear(1, 1, 1, 1),
                    f.buffers.depth.setTest(!0),
                    f.setScissorTest(!1);
                    for (var h = 3 !== y && 3 === this.type, p = 3 === y && 3 !== this.type, m = 0, v = t.length; m < v; m++) {
                        var g = t[m]
                          , b = g.shadow;
                        if (void 0 !== b) {
                            if (!1 !== b.autoUpdate || !1 !== b.needsUpdate) {
                                a.copy(b.mapSize);
                                var M = b.getFrameExtents();
                                if (a.multiply(M),
                                o.copy(b.mapSize),
                                (a.x > d || a.y > d) && (a.x > d && (o.x = Math.floor(d / M.x),
                                a.x = o.x * M.x,
                                b.mapSize.x = o.x),
                                a.y > d && (o.y = Math.floor(d / M.y),
                                a.y = o.y * M.y,
                                b.mapSize.y = o.y)),
                                null === b.map || !0 === h || !0 === p) {
                                    var E = 3 !== this.type ? {
                                        minFilter: O,
                                        magFilter: O
                                    } : {};
                                    null !== b.map && b.map.dispose(),
                                    b.map = new Wt(a.x,a.y,E),
                                    b.map.texture.name = g.name + ".shadowMap",
                                    b.camera.updateProjectionMatrix()
                                }
                                e.setRenderTarget(b.map),
                                e.clear();
                                for (var T = b.getViewportCount(), w = 0; w < T; w++) {
                                    var A = b.getViewport(w);
                                    s.set(o.x * A.x, o.y * A.y, o.x * A.z, o.y * A.w),
                                    f.viewport(s),
                                    b.updateMatrices(g, w),
                                    i = b.getFrustum(),
                                    S(n, r, b.camera, g, this.type)
                                }
                                !0 !== b.isPointLightShadow && 3 === this.type && x(b, r),
                                b.needsUpdate = !1
                            }
                        } else
                            console.warn("THREE.WebGLShadowMap:", g, "has no shadow.")
                    }
                    y = this.type,
                    _.needsUpdate = !1,
                    e.setRenderTarget(l, u, c)
                }
            }
        }
        var yl = (p(qa = {}, 0, 1),
        p(qa, 2, 6),
        p(qa, 4, 7),
        p(qa, 3, 5),
        p(qa, 1, 0),
        p(qa, 6, 2),
        p(qa, 7, 4),
        p(qa, 5, 3),
        qa);
        function xl(e, t) {
            var n, r;
            var i = new function() {
                var t = !1
                  , n = new Ht
                  , r = null
                  , i = new Ht(0,0,0,0);
                return {
                    setMask: function(n) {
                        r === n || t || (e.colorMask(n, n, n, n),
                        r = n)
                    },
                    setLocked: function(e) {
                        t = e
                    },
                    setClear: function(t, r, a, o, s) {
                        !0 === s && (t *= o,
                        r *= o,
                        a *= o),
                        n.set(t, r, a, o),
                        !1 === i.equals(n) && (e.clearColor(t, r, a, o),
                        i.copy(n))
                    },
                    reset: function() {
                        t = !1,
                        r = null,
                        i.set(-1, 0, 0, 0)
                    }
                }
            }
              , a = new function() {
                var n = !1
                  , r = !1
                  , i = null
                  , a = null
                  , o = null;
                return {
                    setReversed: function(e) {
                        if (r !== e) {
                            var n = t.get("EXT_clip_control");
                            r ? n.clipControlEXT(n.LOWER_LEFT_EXT, n.ZERO_TO_ONE_EXT) : n.clipControlEXT(n.LOWER_LEFT_EXT, n.NEGATIVE_ONE_TO_ONE_EXT);
                            var i = o;
                            o = null,
                            this.setClear(i)
                        }
                        r = e
                    },
                    getReversed: function() {
                        return r
                    },
                    setTest: function(t) {
                        t ? W(e.DEPTH_TEST) : X(e.DEPTH_TEST)
                    },
                    setMask: function(t) {
                        i === t || n || (e.depthMask(t),
                        i = t)
                    },
                    setFunc: function(t) {
                        if (r && (t = yl[t]),
                        a !== t) {
                            switch (t) {
                            case 0:
                                e.depthFunc(e.NEVER);
                                break;
                            case 1:
                                e.depthFunc(e.ALWAYS);
                                break;
                            case 2:
                                e.depthFunc(e.LESS);
                                break;
                            case 3:
                            default:
                                e.depthFunc(e.LEQUAL);
                                break;
                            case 4:
                                e.depthFunc(e.EQUAL);
                                break;
                            case 5:
                                e.depthFunc(e.GEQUAL);
                                break;
                            case 6:
                                e.depthFunc(e.GREATER);
                                break;
                            case 7:
                                e.depthFunc(e.NOTEQUAL)
                            }
                            a = t
                        }
                    },
                    setLocked: function(e) {
                        n = e
                    },
                    setClear: function(t) {
                        o !== t && (r && (t = 1 - t),
                        e.clearDepth(t),
                        o = t)
                    },
                    reset: function() {
                        n = !1,
                        i = null,
                        a = null,
                        o = null,
                        r = !1
                    }
                }
            }
              , o = new function() {
                var t = !1
                  , n = null
                  , r = null
                  , i = null
                  , a = null
                  , o = null
                  , s = null
                  , l = null
                  , u = null;
                return {
                    setTest: function(n) {
                        t || (n ? W(e.STENCIL_TEST) : X(e.STENCIL_TEST))
                    },
                    setMask: function(r) {
                        n === r || t || (e.stencilMask(r),
                        n = r)
                    },
                    setFunc: function(t, n, o) {
                        r === t && i === n && a === o || (e.stencilFunc(t, n, o),
                        r = t,
                        i = n,
                        a = o)
                    },
                    setOp: function(t, n, r) {
                        o === t && s === n && l === r || (e.stencilOp(t, n, r),
                        o = t,
                        s = n,
                        l = r)
                    },
                    setLocked: function(e) {
                        t = e
                    },
                    setClear: function(t) {
                        u !== t && (e.clearStencil(t),
                        u = t)
                    },
                    reset: function() {
                        t = !1,
                        n = null,
                        r = null,
                        i = null,
                        a = null,
                        o = null,
                        s = null,
                        l = null,
                        u = null
                    }
                }
            }
              , s = new WeakMap
              , l = new WeakMap
              , u = {}
              , c = {}
              , d = new WeakMap
              , f = []
              , h = null
              , m = !1
              , v = null
              , g = null
              , _ = null
              , y = null
              , x = null
              , b = null
              , S = null
              , M = new gr(0,0,0)
              , E = 0
              , T = !1
              , w = null
              , A = null
              , C = null
              , k = null
              , P = null
              , L = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS)
              , U = !1
              , D = 0
              , N = e.getParameter(e.VERSION);
            -1 !== N.indexOf("WebGL") ? (D = parseFloat(/^WebGL (\d)/.exec(N)[1]),
            U = D >= 1) : -1 !== N.indexOf("OpenGL ES") && (D = parseFloat(/^OpenGL ES (\d)/.exec(N)[1]),
            U = D >= 2);
            var I = null
              , O = {}
              , F = e.getParameter(e.SCISSOR_BOX)
              , z = e.getParameter(e.VIEWPORT)
              , B = (new Ht).fromArray(F)
              , V = (new Ht).fromArray(z);
            function H(t, n, r, i) {
                var a = new Uint8Array(4)
                  , o = e.createTexture();
                e.bindTexture(t, o),
                e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST),
                e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
                for (var s = 0; s < r; s++)
                    t === e.TEXTURE_3D || t === e.TEXTURE_2D_ARRAY ? e.texImage3D(n, 0, e.RGBA, 1, 1, i, 0, e.RGBA, e.UNSIGNED_BYTE, a) : e.texImage2D(n + s, 0, e.RGBA, 1, 1, 0, e.RGBA, e.UNSIGNED_BYTE, a);
                return o
            }
            var G = {};
            function W(t) {
                !0 !== u[t] && (e.enable(t),
                u[t] = !0)
            }
            function X(t) {
                !1 !== u[t] && (e.disable(t),
                u[t] = !1)
            }
            G[e.TEXTURE_2D] = H(e.TEXTURE_2D, e.TEXTURE_2D, 1),
            G[e.TEXTURE_CUBE_MAP] = H(e.TEXTURE_CUBE_MAP, e.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
            G[e.TEXTURE_2D_ARRAY] = H(e.TEXTURE_2D_ARRAY, e.TEXTURE_2D_ARRAY, 1, 1),
            G[e.TEXTURE_3D] = H(e.TEXTURE_3D, e.TEXTURE_3D, 1, 1),
            i.setClear(0, 0, 0, 1),
            a.setClear(1),
            o.setClear(0),
            W(e.DEPTH_TEST),
            a.setFunc(3),
            K(!1),
            Z(1),
            W(e.CULL_FACE),
            Y(0);
            var j = (p(n = {}, R, e.FUNC_ADD),
            p(n, 101, e.FUNC_SUBTRACT),
            p(n, 102, e.FUNC_REVERSE_SUBTRACT),
            n);
            j[103] = e.MIN,
            j[104] = e.MAX;
            var q = (p(r = {}, 200, e.ZERO),
            p(r, 201, e.ONE),
            p(r, 202, e.SRC_COLOR),
            p(r, 204, e.SRC_ALPHA),
            p(r, 210, e.SRC_ALPHA_SATURATE),
            p(r, 208, e.DST_COLOR),
            p(r, 206, e.DST_ALPHA),
            p(r, 203, e.ONE_MINUS_SRC_COLOR),
            p(r, 205, e.ONE_MINUS_SRC_ALPHA),
            p(r, 209, e.ONE_MINUS_DST_COLOR),
            p(r, 207, e.ONE_MINUS_DST_ALPHA),
            p(r, 211, e.CONSTANT_COLOR),
            p(r, 212, e.ONE_MINUS_CONSTANT_COLOR),
            p(r, 213, e.CONSTANT_ALPHA),
            p(r, 214, e.ONE_MINUS_CONSTANT_ALPHA),
            r);
            function Y(t, n, r, i, a, o, s, l, u, c) {
                if (0 !== t) {
                    if (!1 === m && (W(e.BLEND),
                    m = !0),
                    5 === t)
                        a = a || n,
                        o = o || r,
                        s = s || i,
                        n === g && a === x || (e.blendEquationSeparate(j[n], j[a]),
                        g = n,
                        x = a),
                        r === _ && i === y && o === b && s === S || (e.blendFuncSeparate(q[r], q[i], q[o], q[s]),
                        _ = r,
                        y = i,
                        b = o,
                        S = s),
                        !1 !== l.equals(M) && u === E || (e.blendColor(l.r, l.g, l.b, u),
                        M.copy(l),
                        E = u),
                        v = t,
                        T = !1;
                    else if (t !== v || c !== T) {
                        if (g === R && x === R || (e.blendEquation(e.FUNC_ADD),
                        g = R,
                        x = R),
                        c)
                            switch (t) {
                            case 1:
                                e.blendFuncSeparate(e.ONE, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA);
                                break;
                            case 2:
                                e.blendFunc(e.ONE, e.ONE);
                                break;
                            case 3:
                                e.blendFuncSeparate(e.ZERO, e.ONE_MINUS_SRC_COLOR, e.ZERO, e.ONE);
                                break;
                            case 4:
                                e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ZERO, e.SRC_ALPHA);
                                break;
                            default:
                                console.error("THREE.WebGLState: Invalid blending: ", t)
                            }
                        else
                            switch (t) {
                            case 1:
                                e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA);
                                break;
                            case 2:
                                e.blendFunc(e.SRC_ALPHA, e.ONE);
                                break;
                            case 3:
                                e.blendFuncSeparate(e.ZERO, e.ONE_MINUS_SRC_COLOR, e.ZERO, e.ONE);
                                break;
                            case 4:
                                e.blendFunc(e.ZERO, e.SRC_COLOR);
                                break;
                            default:
                                console.error("THREE.WebGLState: Invalid blending: ", t)
                            }
                        _ = null,
                        y = null,
                        b = null,
                        S = null,
                        M.set(0, 0, 0),
                        E = 0,
                        v = t,
                        T = c
                    }
                } else
                    !0 === m && (X(e.BLEND),
                    m = !1)
            }
            function K(t) {
                w !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW),
                w = t)
            }
            function Z(t) {
                0 !== t ? (W(e.CULL_FACE),
                t !== A && (1 === t ? e.cullFace(e.BACK) : 2 === t ? e.cullFace(e.FRONT) : e.cullFace(e.FRONT_AND_BACK))) : X(e.CULL_FACE),
                A = t
            }
            function Q(t, n, r) {
                t ? (W(e.POLYGON_OFFSET_FILL),
                k === n && P === r || (e.polygonOffset(n, r),
                k = n,
                P = r)) : X(e.POLYGON_OFFSET_FILL)
            }
            return {
                buffers: {
                    color: i,
                    depth: a,
                    stencil: o
                },
                enable: W,
                disable: X,
                bindFramebuffer: function(t, n) {
                    return c[t] !== n && (e.bindFramebuffer(t, n),
                    c[t] = n,
                    t === e.DRAW_FRAMEBUFFER && (c[e.FRAMEBUFFER] = n),
                    t === e.FRAMEBUFFER && (c[e.DRAW_FRAMEBUFFER] = n),
                    !0)
                },
                drawBuffers: function(t, n) {
                    var r = f
                      , i = !1;
                    if (t) {
                        void 0 === (r = d.get(n)) && (r = [],
                        d.set(n, r));
                        var a = t.textures;
                        if (r.length !== a.length || r[0] !== e.COLOR_ATTACHMENT0) {
                            for (var o = 0, s = a.length; o < s; o++)
                                r[o] = e.COLOR_ATTACHMENT0 + o;
                            r.length = a.length,
                            i = !0
                        }
                    } else
                        r[0] !== e.BACK && (r[0] = e.BACK,
                        i = !0);
                    i && e.drawBuffers(r)
                },
                useProgram: function(t) {
                    return h !== t && (e.useProgram(t),
                    h = t,
                    !0)
                },
                setBlending: Y,
                setMaterial: function(t, n) {
                    2 === t.side ? X(e.CULL_FACE) : W(e.CULL_FACE);
                    var r = 1 === t.side;
                    n && (r = !r),
                    K(r),
                    1 === t.blending && !1 === t.transparent ? Y(0) : Y(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.blendColor, t.blendAlpha, t.premultipliedAlpha),
                    a.setFunc(t.depthFunc),
                    a.setTest(t.depthTest),
                    a.setMask(t.depthWrite),
                    i.setMask(t.colorWrite);
                    var s = t.stencilWrite;
                    o.setTest(s),
                    s && (o.setMask(t.stencilWriteMask),
                    o.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask),
                    o.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)),
                    Q(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits),
                    !0 === t.alphaToCoverage ? W(e.SAMPLE_ALPHA_TO_COVERAGE) : X(e.SAMPLE_ALPHA_TO_COVERAGE)
                },
                setFlipSided: K,
                setCullFace: Z,
                setLineWidth: function(t) {
                    t !== C && (U && e.lineWidth(t),
                    C = t)
                },
                setPolygonOffset: Q,
                setScissorTest: function(t) {
                    t ? W(e.SCISSOR_TEST) : X(e.SCISSOR_TEST)
                },
                activeTexture: function(t) {
                    void 0 === t && (t = e.TEXTURE0 + L - 1),
                    I !== t && (e.activeTexture(t),
                    I = t)
                },
                bindTexture: function(t, n, r) {
                    void 0 === r && (r = null === I ? e.TEXTURE0 + L - 1 : I);
                    var i = O[r];
                    void 0 === i && (i = {
                        type: void 0,
                        texture: void 0
                    },
                    O[r] = i),
                    i.type === t && i.texture === n || (I !== r && (e.activeTexture(r),
                    I = r),
                    e.bindTexture(t, n || G[t]),
                    i.type = t,
                    i.texture = n)
                },
                unbindTexture: function() {
                    var t = O[I];
                    void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null),
                    t.type = void 0,
                    t.texture = void 0)
                },
                compressedTexImage2D: function() {
                    try {
                        e.compressedTexImage2D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                compressedTexImage3D: function() {
                    try {
                        e.compressedTexImage3D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                texImage2D: function() {
                    try {
                        e.texImage2D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                texImage3D: function() {
                    try {
                        e.texImage3D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                updateUBOMapping: function(t, n) {
                    var r = l.get(n);
                    void 0 === r && (r = new WeakMap,
                    l.set(n, r));
                    var i = r.get(t);
                    void 0 === i && (i = e.getUniformBlockIndex(n, t.name),
                    r.set(t, i))
                },
                uniformBlockBinding: function(t, n) {
                    var r = l.get(n).get(t);
                    s.get(n) !== r && (e.uniformBlockBinding(n, r, t.__bindingPointIndex),
                    s.set(n, r))
                },
                texStorage2D: function() {
                    try {
                        e.texStorage2D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                texStorage3D: function() {
                    try {
                        e.texStorage3D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                texSubImage2D: function() {
                    try {
                        e.texSubImage2D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                texSubImage3D: function() {
                    try {
                        e.texSubImage3D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                compressedTexSubImage2D: function() {
                    try {
                        e.compressedTexSubImage2D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                compressedTexSubImage3D: function() {
                    try {
                        e.compressedTexSubImage3D.apply(e, arguments)
                    } catch (t) {
                        console.error("THREE.WebGLState:", t)
                    }
                },
                scissor: function(t) {
                    !1 === B.equals(t) && (e.scissor(t.x, t.y, t.z, t.w),
                    B.copy(t))
                },
                viewport: function(t) {
                    !1 === V.equals(t) && (e.viewport(t.x, t.y, t.z, t.w),
                    V.copy(t))
                },
                reset: function() {
                    e.disable(e.BLEND),
                    e.disable(e.CULL_FACE),
                    e.disable(e.DEPTH_TEST),
                    e.disable(e.POLYGON_OFFSET_FILL),
                    e.disable(e.SCISSOR_TEST),
                    e.disable(e.STENCIL_TEST),
                    e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),
                    e.blendEquation(e.FUNC_ADD),
                    e.blendFunc(e.ONE, e.ZERO),
                    e.blendFuncSeparate(e.ONE, e.ZERO, e.ONE, e.ZERO),
                    e.blendColor(0, 0, 0, 0),
                    e.colorMask(!0, !0, !0, !0),
                    e.clearColor(0, 0, 0, 0),
                    e.depthMask(!0),
                    e.depthFunc(e.LESS),
                    a.setReversed(!1),
                    e.clearDepth(1),
                    e.stencilMask(4294967295),
                    e.stencilFunc(e.ALWAYS, 0, 4294967295),
                    e.stencilOp(e.KEEP, e.KEEP, e.KEEP),
                    e.clearStencil(0),
                    e.cullFace(e.BACK),
                    e.frontFace(e.CCW),
                    e.polygonOffset(0, 0),
                    e.activeTexture(e.TEXTURE0),
                    e.bindFramebuffer(e.FRAMEBUFFER, null),
                    e.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                    e.bindFramebuffer(e.READ_FRAMEBUFFER, null),
                    e.useProgram(null),
                    e.lineWidth(1),
                    e.scissor(0, 0, e.canvas.width, e.canvas.height),
                    e.viewport(0, 0, e.canvas.width, e.canvas.height),
                    u = {},
                    I = null,
                    O = {},
                    c = {},
                    d = new WeakMap,
                    f = [],
                    h = null,
                    m = !1,
                    v = null,
                    g = null,
                    _ = null,
                    y = null,
                    x = null,
                    b = null,
                    S = null,
                    M = new gr(0,0,0),
                    E = 0,
                    T = !1,
                    w = null,
                    A = null,
                    C = null,
                    k = null,
                    P = null,
                    B.set(0, 0, e.canvas.width, e.canvas.height),
                    V.set(0, 0, e.canvas.width, e.canvas.height),
                    i.reset(),
                    a.reset(),
                    o.reset()
                }
            }
        }
        function bl(e, t, n, r, i, a, o) {
            var s, l, u, c, d = t.has("WEBGL_multisampled_render_to_texture") ? t.get("WEBGL_multisampled_render_to_texture") : null, f = "undefined" !== typeof navigator && /OculusBrowser/g.test(navigator.userAgent), h = new _t, m = new WeakMap, v = new WeakMap, _ = !1;
            try {
                _ = "undefined" !== typeof OffscreenCanvas && null !== new OffscreenCanvas(1,1).getContext("2d")
            } catch (ue) {}
            function y(e, t) {
                return _ ? new OffscreenCanvas(e,t) : St("canvas")
            }
            function x(e, t, n) {
                var r = 1
                  , i = le(e);
                if ((i.width > n || i.height > n) && (r = n / Math.max(i.width, i.height)),
                r < 1) {
                    if ("undefined" !== typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" !== typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" !== typeof ImageBitmap && e instanceof ImageBitmap || "undefined" !== typeof VideoFrame && e instanceof VideoFrame) {
                        var a = Math.floor(r * i.width)
                          , o = Math.floor(r * i.height);
                        void 0 === c && (c = y(a, o));
                        var s = t ? y(a, o) : c;
                        return s.width = a,
                        s.height = o,
                        s.getContext("2d").drawImage(e, 0, 0, a, o),
                        console.warn("THREE.WebGLRenderer: Texture has been resized from (" + i.width + "x" + i.height + ") to (" + a + "x" + o + ")."),
                        s
                    }
                    return "data"in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + i.width + "x" + i.height + ")."),
                    e
                }
                return e
            }
            function b(e) {
                return e.generateMipmaps
            }
            function S(t) {
                e.generateMipmap(t)
            }
            function M(t) {
                return t.isWebGLCubeRenderTarget ? e.TEXTURE_CUBE_MAP : t.isWebGL3DRenderTarget ? e.TEXTURE_3D : t.isWebGLArrayRenderTarget || t.isCompressedArrayTexture ? e.TEXTURE_2D_ARRAY : e.TEXTURE_2D
            }
            function E(n, r, i, a) {
                var o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                if (null !== n) {
                    if (void 0 !== e[n])
                        return e[n];
                    console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
                }
                var s = r;
                if (r === e.RED && (i === e.FLOAT && (s = e.R32F),
                i === e.HALF_FLOAT && (s = e.R16F),
                i === e.UNSIGNED_BYTE && (s = e.R8)),
                r === e.RED_INTEGER && (i === e.UNSIGNED_BYTE && (s = e.R8UI),
                i === e.UNSIGNED_SHORT && (s = e.R16UI),
                i === e.UNSIGNED_INT && (s = e.R32UI),
                i === e.BYTE && (s = e.R8I),
                i === e.SHORT && (s = e.R16I),
                i === e.INT && (s = e.R32I)),
                r === e.RG && (i === e.FLOAT && (s = e.RG32F),
                i === e.HALF_FLOAT && (s = e.RG16F),
                i === e.UNSIGNED_BYTE && (s = e.RG8)),
                r === e.RG_INTEGER && (i === e.UNSIGNED_BYTE && (s = e.RG8UI),
                i === e.UNSIGNED_SHORT && (s = e.RG16UI),
                i === e.UNSIGNED_INT && (s = e.RG32UI),
                i === e.BYTE && (s = e.RG8I),
                i === e.SHORT && (s = e.RG16I),
                i === e.INT && (s = e.RG32I)),
                r === e.RGB_INTEGER && (i === e.UNSIGNED_BYTE && (s = e.RGB8UI),
                i === e.UNSIGNED_SHORT && (s = e.RGB16UI),
                i === e.UNSIGNED_INT && (s = e.RGB32UI),
                i === e.BYTE && (s = e.RGB8I),
                i === e.SHORT && (s = e.RGB16I),
                i === e.INT && (s = e.RGB32I)),
                r === e.RGBA_INTEGER && (i === e.UNSIGNED_BYTE && (s = e.RGBA8UI),
                i === e.UNSIGNED_SHORT && (s = e.RGBA16UI),
                i === e.UNSIGNED_INT && (s = e.RGBA32UI),
                i === e.BYTE && (s = e.RGBA8I),
                i === e.SHORT && (s = e.RGBA16I),
                i === e.INT && (s = e.RGBA32I)),
                r === e.RGB && i === e.UNSIGNED_INT_5_9_9_9_REV && (s = e.RGB9_E5),
                r === e.RGBA) {
                    var l = o ? $e : Ut.getTransfer(a);
                    i === e.FLOAT && (s = e.RGBA32F),
                    i === e.HALF_FLOAT && (s = e.RGBA16F),
                    i === e.UNSIGNED_BYTE && (s = l === et ? e.SRGB8_ALPHA8 : e.RGBA8),
                    i === e.UNSIGNED_SHORT_4_4_4_4 && (s = e.RGBA4),
                    i === e.UNSIGNED_SHORT_5_5_5_1 && (s = e.RGB5_A1)
                }
                return s !== e.R16F && s !== e.R32F && s !== e.RG16F && s !== e.RG32F && s !== e.RGBA16F && s !== e.RGBA32F || t.get("EXT_color_buffer_float"),
                s
            }
            function T(t, n) {
                var r;
                return t ? null === n || n === q || n === J ? r = e.DEPTH24_STENCIL8 : n === Y ? r = e.DEPTH32F_STENCIL8 : n === X && (r = e.DEPTH24_STENCIL8,
                console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")) : null === n || n === q || n === J ? r = e.DEPTH_COMPONENT24 : n === Y ? r = e.DEPTH_COMPONENT32F : n === X && (r = e.DEPTH_COMPONENT16),
                r
            }
            function w(e, t) {
                return !0 === b(e) || e.isFramebufferTexture && e.minFilter !== O && e.minFilter !== z ? Math.log2(Math.max(t.width, t.height)) + 1 : void 0 !== e.mipmaps && e.mipmaps.length > 0 ? e.mipmaps.length : e.isCompressedTexture && Array.isArray(e.image) ? t.mipmaps.length : 1
            }
            function A(e) {
                var t = e.target;
                t.removeEventListener("dispose", A),
                function(e) {
                    var t = r.get(e);
                    if (void 0 === t.__webglInit)
                        return;
                    var n = e.source
                      , i = v.get(n);
                    if (i) {
                        var a = i[t.__cacheKey];
                        a.usedTimes--,
                        0 === a.usedTimes && C(e),
                        0 === Object.keys(i).length && v.delete(n)
                    }
                    r.remove(e)
                }(t),
                t.isVideoTexture && m.delete(t)
            }
            function R(t) {
                var n = t.target;
                n.removeEventListener("dispose", R),
                function(t) {
                    var n = r.get(t);
                    t.depthTexture && (t.depthTexture.dispose(),
                    r.remove(t.depthTexture));
                    if (t.isWebGLCubeRenderTarget)
                        for (var i = 0; i < 6; i++) {
                            if (Array.isArray(n.__webglFramebuffer[i]))
                                for (var a = 0; a < n.__webglFramebuffer[i].length; a++)
                                    e.deleteFramebuffer(n.__webglFramebuffer[i][a]);
                            else
                                e.deleteFramebuffer(n.__webglFramebuffer[i]);
                            n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[i])
                        }
                    else {
                        if (Array.isArray(n.__webglFramebuffer))
                            for (var s = 0; s < n.__webglFramebuffer.length; s++)
                                e.deleteFramebuffer(n.__webglFramebuffer[s]);
                        else
                            e.deleteFramebuffer(n.__webglFramebuffer);
                        if (n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer),
                        n.__webglMultisampledFramebuffer && e.deleteFramebuffer(n.__webglMultisampledFramebuffer),
                        n.__webglColorRenderbuffer)
                            for (var l = 0; l < n.__webglColorRenderbuffer.length; l++)
                                n.__webglColorRenderbuffer[l] && e.deleteRenderbuffer(n.__webglColorRenderbuffer[l]);
                        n.__webglDepthRenderbuffer && e.deleteRenderbuffer(n.__webglDepthRenderbuffer)
                    }
                    for (var u = t.textures, c = 0, d = u.length; c < d; c++) {
                        var f = r.get(u[c]);
                        f.__webglTexture && (e.deleteTexture(f.__webglTexture),
                        o.memory.textures--),
                        r.remove(u[c])
                    }
                    r.remove(t)
                }(n)
            }
            function C(t) {
                var n = r.get(t);
                e.deleteTexture(n.__webglTexture);
                var i = t.source;
                delete v.get(i)[n.__cacheKey],
                o.memory.textures--
            }
            var k = 0;
            function P(t, i) {
                var a = r.get(t);
                if (t.isVideoTexture && function(e) {
                    var t = o.render.frame;
                    m.get(e) !== t && (m.set(e, t),
                    e.update())
                }(t),
                !1 === t.isRenderTargetTexture && t.version > 0 && a.__version !== t.version) {
                    var s = t.image;
                    if (null === s)
                        console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");
                    else {
                        if (!1 !== s.complete)
                            return void K(a, t, i);
                        console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                    }
                }
                n.bindTexture(e.TEXTURE_2D, a.__webglTexture, e.TEXTURE0 + i)
            }
            var L = (p(s = {}, D, e.REPEAT),
            p(s, N, e.CLAMP_TO_EDGE),
            p(s, I, e.MIRRORED_REPEAT),
            s)
              , U = (p(l = {}, O, e.NEAREST),
            p(l, 1004, e.NEAREST_MIPMAP_NEAREST),
            p(l, F, e.NEAREST_MIPMAP_LINEAR),
            p(l, z, e.LINEAR),
            p(l, B, e.LINEAR_MIPMAP_NEAREST),
            p(l, V, e.LINEAR_MIPMAP_LINEAR),
            l)
              , G = (p(u = {}, 512, e.NEVER),
            p(u, 519, e.ALWAYS),
            p(u, 513, e.LESS),
            p(u, 515, e.LEQUAL),
            p(u, 514, e.EQUAL),
            p(u, 518, e.GEQUAL),
            p(u, 516, e.GREATER),
            p(u, 517, e.NOTEQUAL),
            u);
            function W(n, a) {
                if (a.type !== Y || !1 !== t.has("OES_texture_float_linear") || a.magFilter !== z && a.magFilter !== B && a.magFilter !== F && a.magFilter !== V && a.minFilter !== z && a.minFilter !== B && a.minFilter !== F && a.minFilter !== V || console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),
                e.texParameteri(n, e.TEXTURE_WRAP_S, L[a.wrapS]),
                e.texParameteri(n, e.TEXTURE_WRAP_T, L[a.wrapT]),
                n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY || e.texParameteri(n, e.TEXTURE_WRAP_R, L[a.wrapR]),
                e.texParameteri(n, e.TEXTURE_MAG_FILTER, U[a.magFilter]),
                e.texParameteri(n, e.TEXTURE_MIN_FILTER, U[a.minFilter]),
                a.compareFunction && (e.texParameteri(n, e.TEXTURE_COMPARE_MODE, e.COMPARE_REF_TO_TEXTURE),
                e.texParameteri(n, e.TEXTURE_COMPARE_FUNC, G[a.compareFunction])),
                !0 === t.has("EXT_texture_filter_anisotropic")) {
                    if (a.magFilter === O)
                        return;
                    if (a.minFilter !== F && a.minFilter !== V)
                        return;
                    if (a.type === Y && !1 === t.has("OES_texture_float_linear"))
                        return;
                    if (a.anisotropy > 1 || r.get(a).__currentAnisotropy) {
                        var o = t.get("EXT_texture_filter_anisotropic");
                        e.texParameterf(n, o.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, i.getMaxAnisotropy())),
                        r.get(a).__currentAnisotropy = a.anisotropy
                    }
                }
            }
            function j(t, n) {
                var r = !1;
                void 0 === t.__webglInit && (t.__webglInit = !0,
                n.addEventListener("dispose", A));
                var i = n.source
                  , a = v.get(i);
                void 0 === a && (a = {},
                v.set(i, a));
                var s = function(e) {
                    var t = [];
                    return t.push(e.wrapS),
                    t.push(e.wrapT),
                    t.push(e.wrapR || 0),
                    t.push(e.magFilter),
                    t.push(e.minFilter),
                    t.push(e.anisotropy),
                    t.push(e.internalFormat),
                    t.push(e.format),
                    t.push(e.type),
                    t.push(e.generateMipmaps),
                    t.push(e.premultiplyAlpha),
                    t.push(e.flipY),
                    t.push(e.unpackAlignment),
                    t.push(e.colorSpace),
                    t.join()
                }(n);
                if (s !== t.__cacheKey) {
                    void 0 === a[s] && (a[s] = {
                        texture: e.createTexture(),
                        usedTimes: 0
                    },
                    o.memory.textures++,
                    r = !0),
                    a[s].usedTimes++;
                    var l = a[t.__cacheKey];
                    void 0 !== l && (a[t.__cacheKey].usedTimes--,
                    0 === l.usedTimes && C(n)),
                    t.__cacheKey = s,
                    t.__webglTexture = a[s].texture
                }
                return r
            }
            function K(t, o, s) {
                var l = e.TEXTURE_2D;
                (o.isDataArrayTexture || o.isCompressedArrayTexture) && (l = e.TEXTURE_2D_ARRAY),
                o.isData3DTexture && (l = e.TEXTURE_3D);
                var u = j(t, o)
                  , c = o.source;
                n.bindTexture(l, t.__webglTexture, e.TEXTURE0 + s);
                var d = r.get(c);
                if (c.version !== d.__version || !0 === u) {
                    n.activeTexture(e.TEXTURE0 + s);
                    var f = Ut.getPrimaries(Ut.workingColorSpace)
                      , h = o.colorSpace === Ze ? null : Ut.getPrimaries(o.colorSpace)
                      , p = o.colorSpace === Ze || f === h ? e.NONE : e.BROWSER_DEFAULT_WEBGL;
                    e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, o.flipY),
                    e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, o.premultiplyAlpha),
                    e.pixelStorei(e.UNPACK_ALIGNMENT, o.unpackAlignment),
                    e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, p);
                    var m = x(o.image, !1, i.maxTextureSize);
                    m = se(o, m);
                    var v, _ = a.convert(o.format, o.colorSpace), y = a.convert(o.type), M = E(o.internalFormat, _, y, o.colorSpace, o.isVideoTexture);
                    W(l, o);
                    var A = o.mipmaps
                      , R = !0 !== o.isVideoTexture
                      , C = void 0 === d.__version || !0 === u
                      , k = c.dataReady
                      , P = w(o, m);
                    if (o.isDepthTexture)
                        M = T(o.format === oe, o.type),
                        C && (R ? n.texStorage2D(e.TEXTURE_2D, 1, M, m.width, m.height) : n.texImage2D(e.TEXTURE_2D, 0, M, m.width, m.height, 0, _, y, null));
                    else if (o.isDataTexture)
                        if (A.length > 0) {
                            R && C && n.texStorage2D(e.TEXTURE_2D, P, M, A[0].width, A[0].height);
                            for (var L = 0, U = A.length; L < U; L++)
                                v = A[L],
                                R ? k && n.texSubImage2D(e.TEXTURE_2D, L, 0, 0, v.width, v.height, _, y, v.data) : n.texImage2D(e.TEXTURE_2D, L, M, v.width, v.height, 0, _, y, v.data);
                            o.generateMipmaps = !1
                        } else
                            R ? (C && n.texStorage2D(e.TEXTURE_2D, P, M, m.width, m.height),
                            k && n.texSubImage2D(e.TEXTURE_2D, 0, 0, 0, m.width, m.height, _, y, m.data)) : n.texImage2D(e.TEXTURE_2D, 0, M, m.width, m.height, 0, _, y, m.data);
                    else if (o.isCompressedTexture)
                        if (o.isCompressedArrayTexture) {
                            R && C && n.texStorage3D(e.TEXTURE_2D_ARRAY, P, M, A[0].width, A[0].height, m.depth);
                            for (var D = 0, N = A.length; D < N; D++)
                                if (v = A[D],
                                o.format !== ne)
                                    if (null !== _)
                                        if (R) {
                                            if (k)
                                                if (o.layerUpdates.size > 0) {
                                                    var I, O = ja(v.width, v.height, o.format, o.type), F = g(o.layerUpdates);
                                                    try {
                                                        for (F.s(); !(I = F.n()).done; ) {
                                                            var z = I.value
                                                              , B = v.data.subarray(z * O / v.data.BYTES_PER_ELEMENT, (z + 1) * O / v.data.BYTES_PER_ELEMENT);
                                                            n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY, D, 0, 0, z, v.width, v.height, 1, _, B)
                                                        }
                                                    } catch (ue) {
                                                        F.e(ue)
                                                    } finally {
                                                        F.f()
                                                    }
                                                    o.clearLayerUpdates()
                                                } else
                                                    n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY, D, 0, 0, 0, v.width, v.height, m.depth, _, v.data)
                                        } else
                                            n.compressedTexImage3D(e.TEXTURE_2D_ARRAY, D, M, v.width, v.height, m.depth, 0, v.data, 0, 0);
                                    else
                                        console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");
                                else
                                    R ? k && n.texSubImage3D(e.TEXTURE_2D_ARRAY, D, 0, 0, 0, v.width, v.height, m.depth, _, y, v.data) : n.texImage3D(e.TEXTURE_2D_ARRAY, D, M, v.width, v.height, m.depth, 0, _, y, v.data)
                        } else {
                            R && C && n.texStorage2D(e.TEXTURE_2D, P, M, A[0].width, A[0].height);
                            for (var V = 0, H = A.length; V < H; V++)
                                v = A[V],
                                o.format !== ne ? null !== _ ? R ? k && n.compressedTexSubImage2D(e.TEXTURE_2D, V, 0, 0, v.width, v.height, _, v.data) : n.compressedTexImage2D(e.TEXTURE_2D, V, M, v.width, v.height, 0, v.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : R ? k && n.texSubImage2D(e.TEXTURE_2D, V, 0, 0, v.width, v.height, _, y, v.data) : n.texImage2D(e.TEXTURE_2D, V, M, v.width, v.height, 0, _, y, v.data)
                        }
                    else if (o.isDataArrayTexture)
                        if (R) {
                            if (C && n.texStorage3D(e.TEXTURE_2D_ARRAY, P, M, m.width, m.height, m.depth),
                            k)
                                if (o.layerUpdates.size > 0) {
                                    var G, X = ja(m.width, m.height, o.format, o.type), q = g(o.layerUpdates);
                                    try {
                                        for (q.s(); !(G = q.n()).done; ) {
                                            var Y = G.value
                                              , K = m.data.subarray(Y * X / m.data.BYTES_PER_ELEMENT, (Y + 1) * X / m.data.BYTES_PER_ELEMENT);
                                            n.texSubImage3D(e.TEXTURE_2D_ARRAY, 0, 0, 0, Y, m.width, m.height, 1, _, y, K)
                                        }
                                    } catch (ue) {
                                        q.e(ue)
                                    } finally {
                                        q.f()
                                    }
                                    o.clearLayerUpdates()
                                } else
                                    n.texSubImage3D(e.TEXTURE_2D_ARRAY, 0, 0, 0, 0, m.width, m.height, m.depth, _, y, m.data)
                        } else
                            n.texImage3D(e.TEXTURE_2D_ARRAY, 0, M, m.width, m.height, m.depth, 0, _, y, m.data);
                    else if (o.isData3DTexture)
                        R ? (C && n.texStorage3D(e.TEXTURE_3D, P, M, m.width, m.height, m.depth),
                        k && n.texSubImage3D(e.TEXTURE_3D, 0, 0, 0, 0, m.width, m.height, m.depth, _, y, m.data)) : n.texImage3D(e.TEXTURE_3D, 0, M, m.width, m.height, m.depth, 0, _, y, m.data);
                    else if (o.isFramebufferTexture) {
                        if (C)
                            if (R)
                                n.texStorage2D(e.TEXTURE_2D, P, M, m.width, m.height);
                            else
                                for (var Z = m.width, Q = m.height, J = 0; J < P; J++)
                                    n.texImage2D(e.TEXTURE_2D, J, M, Z, Q, 0, _, y, null),
                                    Z >>= 1,
                                    Q >>= 1
                    } else if (A.length > 0) {
                        if (R && C) {
                            var $ = le(A[0]);
                            n.texStorage2D(e.TEXTURE_2D, P, M, $.width, $.height)
                        }
                        for (var ee = 0, te = A.length; ee < te; ee++)
                            v = A[ee],
                            R ? k && n.texSubImage2D(e.TEXTURE_2D, ee, 0, 0, _, y, v) : n.texImage2D(e.TEXTURE_2D, ee, M, _, y, v);
                        o.generateMipmaps = !1
                    } else if (R) {
                        if (C) {
                            var re = le(m);
                            n.texStorage2D(e.TEXTURE_2D, P, M, re.width, re.height)
                        }
                        k && n.texSubImage2D(e.TEXTURE_2D, 0, 0, 0, _, y, m)
                    } else
                        n.texImage2D(e.TEXTURE_2D, 0, M, _, y, m);
                    b(o) && S(l),
                    d.__version = c.version,
                    o.onUpdate && o.onUpdate(o)
                }
                t.__version = o.version
            }
            function Z(t, i, o, s, l, u) {
                var c = a.convert(o.format, o.colorSpace)
                  , f = a.convert(o.type)
                  , h = E(o.internalFormat, c, f, o.colorSpace)
                  , p = r.get(i)
                  , m = r.get(o);
                if (m.__renderTarget = i,
                !p.__hasExternalTextures) {
                    var v = Math.max(1, i.width >> u)
                      , g = Math.max(1, i.height >> u);
                    l === e.TEXTURE_3D || l === e.TEXTURE_2D_ARRAY ? n.texImage3D(l, u, h, v, g, i.depth, 0, c, f, null) : n.texImage2D(l, u, h, v, g, 0, c, f, null)
                }
                n.bindFramebuffer(e.FRAMEBUFFER, t),
                ie(i) ? d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER, s, l, m.__webglTexture, 0, re(i)) : (l === e.TEXTURE_2D || l >= e.TEXTURE_CUBE_MAP_POSITIVE_X && l <= e.TEXTURE_CUBE_MAP_NEGATIVE_Z) && e.framebufferTexture2D(e.FRAMEBUFFER, s, l, m.__webglTexture, u),
                n.bindFramebuffer(e.FRAMEBUFFER, null)
            }
            function Q(t, n, r) {
                if (e.bindRenderbuffer(e.RENDERBUFFER, t),
                n.depthBuffer) {
                    var i = n.depthTexture
                      , o = i && i.isDepthTexture ? i.type : null
                      , s = T(n.stencilBuffer, o)
                      , l = n.stencilBuffer ? e.DEPTH_STENCIL_ATTACHMENT : e.DEPTH_ATTACHMENT
                      , u = re(n);
                    ie(n) ? d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER, u, s, n.width, n.height) : r ? e.renderbufferStorageMultisample(e.RENDERBUFFER, u, s, n.width, n.height) : e.renderbufferStorage(e.RENDERBUFFER, s, n.width, n.height),
                    e.framebufferRenderbuffer(e.FRAMEBUFFER, l, e.RENDERBUFFER, t)
                } else
                    for (var c = n.textures, f = 0; f < c.length; f++) {
                        var h = c[f]
                          , p = a.convert(h.format, h.colorSpace)
                          , m = a.convert(h.type)
                          , v = E(h.internalFormat, p, m, h.colorSpace)
                          , g = re(n);
                        r && !1 === ie(n) ? e.renderbufferStorageMultisample(e.RENDERBUFFER, g, v, n.width, n.height) : ie(n) ? d.renderbufferStorageMultisampleEXT(e.RENDERBUFFER, g, v, n.width, n.height) : e.renderbufferStorage(e.RENDERBUFFER, v, n.width, n.height)
                    }
                e.bindRenderbuffer(e.RENDERBUFFER, null)
            }
            function $(t) {
                var i = r.get(t)
                  , a = !0 === t.isWebGLCubeRenderTarget;
                if (i.__boundDepthTexture !== t.depthTexture) {
                    var o = t.depthTexture;
                    if (i.__depthDisposeCallback && i.__depthDisposeCallback(),
                    o) {
                        var s = function e() {
                            delete i.__boundDepthTexture,
                            delete i.__depthDisposeCallback,
                            o.removeEventListener("dispose", e)
                        };
                        o.addEventListener("dispose", s),
                        i.__depthDisposeCallback = s
                    }
                    i.__boundDepthTexture = o
                }
                if (t.depthTexture && !i.__autoAllocateDepthBuffer) {
                    if (a)
                        throw new Error("target.depthTexture not supported in Cube render targets");
                    !function(t, i) {
                        if (i && i.isWebGLCubeRenderTarget)
                            throw new Error("Depth Texture with cube render targets is not supported");
                        if (n.bindFramebuffer(e.FRAMEBUFFER, t),
                        !i.depthTexture || !i.depthTexture.isDepthTexture)
                            throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                        var a = r.get(i.depthTexture);
                        a.__renderTarget = i,
                        a.__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width,
                        i.depthTexture.image.height = i.height,
                        i.depthTexture.needsUpdate = !0),
                        P(i.depthTexture, 0);
                        var o = a.__webglTexture
                          , s = re(i);
                        if (i.depthTexture.format === ae)
                            ie(i) ? d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.TEXTURE_2D, o, 0, s) : e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.TEXTURE_2D, o, 0);
                        else {
                            if (i.depthTexture.format !== oe)
                                throw new Error("Unknown depthTexture format");
                            ie(i) ? d.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.TEXTURE_2D, o, 0, s) : e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.TEXTURE_2D, o, 0)
                        }
                    }(i.__webglFramebuffer, t)
                } else if (a) {
                    i.__webglDepthbuffer = [];
                    for (var l = 0; l < 6; l++)
                        if (n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer[l]),
                        void 0 === i.__webglDepthbuffer[l])
                            i.__webglDepthbuffer[l] = e.createRenderbuffer(),
                            Q(i.__webglDepthbuffer[l], t, !1);
                        else {
                            var u = t.stencilBuffer ? e.DEPTH_STENCIL_ATTACHMENT : e.DEPTH_ATTACHMENT
                              , c = i.__webglDepthbuffer[l];
                            e.bindRenderbuffer(e.RENDERBUFFER, c),
                            e.framebufferRenderbuffer(e.FRAMEBUFFER, u, e.RENDERBUFFER, c)
                        }
                } else if (n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer),
                void 0 === i.__webglDepthbuffer)
                    i.__webglDepthbuffer = e.createRenderbuffer(),
                    Q(i.__webglDepthbuffer, t, !1);
                else {
                    var f = t.stencilBuffer ? e.DEPTH_STENCIL_ATTACHMENT : e.DEPTH_ATTACHMENT
                      , h = i.__webglDepthbuffer;
                    e.bindRenderbuffer(e.RENDERBUFFER, h),
                    e.framebufferRenderbuffer(e.FRAMEBUFFER, f, e.RENDERBUFFER, h)
                }
                n.bindFramebuffer(e.FRAMEBUFFER, null)
            }
            var ee = []
              , te = [];
            function re(e) {
                return Math.min(i.maxSamples, e.samples)
            }
            function ie(e) {
                var n = r.get(e);
                return e.samples > 0 && !0 === t.has("WEBGL_multisampled_render_to_texture") && !1 !== n.__useRenderToTexture
            }
            function se(e, t) {
                var n = e.colorSpace
                  , r = e.format
                  , i = e.type;
                return !0 === e.isCompressedTexture || !0 === e.isVideoTexture || n !== Je && n !== Ze && (Ut.getTransfer(n) === et ? r === ne && i === H || console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.") : console.error("THREE.WebGLTextures: Unsupported texture color space:", n)),
                t
            }
            function le(e) {
                return "undefined" !== typeof HTMLImageElement && e instanceof HTMLImageElement ? (h.width = e.naturalWidth || e.width,
                h.height = e.naturalHeight || e.height) : "undefined" !== typeof VideoFrame && e instanceof VideoFrame ? (h.width = e.displayWidth,
                h.height = e.displayHeight) : (h.width = e.width,
                h.height = e.height),
                h
            }
            this.allocateTextureUnit = function() {
                var e = k;
                return e >= i.maxTextures && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + i.maxTextures),
                k += 1,
                e
            }
            ,
            this.resetTextureUnits = function() {
                k = 0
            }
            ,
            this.setTexture2D = P,
            this.setTexture2DArray = function(t, i) {
                var a = r.get(t);
                t.version > 0 && a.__version !== t.version ? K(a, t, i) : n.bindTexture(e.TEXTURE_2D_ARRAY, a.__webglTexture, e.TEXTURE0 + i)
            }
            ,
            this.setTexture3D = function(t, i) {
                var a = r.get(t);
                t.version > 0 && a.__version !== t.version ? K(a, t, i) : n.bindTexture(e.TEXTURE_3D, a.__webglTexture, e.TEXTURE0 + i)
            }
            ,
            this.setTextureCube = function(t, o) {
                var s = r.get(t);
                t.version > 0 && s.__version !== t.version ? function(t, o, s) {
                    if (6 !== o.image.length)
                        return;
                    var l = j(t, o)
                      , u = o.source;
                    n.bindTexture(e.TEXTURE_CUBE_MAP, t.__webglTexture, e.TEXTURE0 + s);
                    var c = r.get(u);
                    if (u.version !== c.__version || !0 === l) {
                        n.activeTexture(e.TEXTURE0 + s);
                        var d = Ut.getPrimaries(Ut.workingColorSpace)
                          , f = o.colorSpace === Ze ? null : Ut.getPrimaries(o.colorSpace)
                          , h = o.colorSpace === Ze || d === f ? e.NONE : e.BROWSER_DEFAULT_WEBGL;
                        e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, o.flipY),
                        e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, o.premultiplyAlpha),
                        e.pixelStorei(e.UNPACK_ALIGNMENT, o.unpackAlignment),
                        e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, h);
                        for (var p = o.isCompressedTexture || o.image[0].isCompressedTexture, m = o.image[0] && o.image[0].isDataTexture, v = [], g = 0; g < 6; g++)
                            v[g] = p || m ? m ? o.image[g].image : o.image[g] : x(o.image[g], !0, i.maxCubemapSize),
                            v[g] = se(o, v[g]);
                        var _, y = v[0], M = a.convert(o.format, o.colorSpace), T = a.convert(o.type), A = E(o.internalFormat, M, T, o.colorSpace), R = !0 !== o.isVideoTexture, C = void 0 === c.__version || !0 === l, k = u.dataReady, P = w(o, y);
                        if (W(e.TEXTURE_CUBE_MAP, o),
                        p) {
                            R && C && n.texStorage2D(e.TEXTURE_CUBE_MAP, P, A, y.width, y.height);
                            for (var L = 0; L < 6; L++) {
                                _ = v[L].mipmaps;
                                for (var U = 0; U < _.length; U++) {
                                    var D = _[U];
                                    o.format !== ne ? null !== M ? R ? k && n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + L, U, 0, 0, D.width, D.height, M, D.data) : n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + L, U, A, D.width, D.height, 0, D.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : R ? k && n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + L, U, 0, 0, D.width, D.height, M, T, D.data) : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + L, U, A, D.width, D.height, 0, M, T, D.data)
                                }
                            }
                        } else {
                            if (_ = o.mipmaps,
                            R && C) {
                                _.length > 0 && P++;
                                var N = le(v[0]);
                                n.texStorage2D(e.TEXTURE_CUBE_MAP, P, A, N.width, N.height)
                            }
                            for (var I = 0; I < 6; I++)
                                if (m) {
                                    R ? k && n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, 0, 0, 0, v[I].width, v[I].height, M, T, v[I].data) : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, 0, A, v[I].width, v[I].height, 0, M, T, v[I].data);
                                    for (var O = 0; O < _.length; O++) {
                                        var F = _[O].image[I].image;
                                        R ? k && n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, O + 1, 0, 0, F.width, F.height, M, T, F.data) : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, O + 1, A, F.width, F.height, 0, M, T, F.data)
                                    }
                                } else {
                                    R ? k && n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, 0, 0, 0, M, T, v[I]) : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, 0, A, M, T, v[I]);
                                    for (var z = 0; z < _.length; z++) {
                                        var B = _[z];
                                        R ? k && n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, z + 1, 0, 0, M, T, B.image[I]) : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + I, z + 1, A, M, T, B.image[I])
                                    }
                                }
                        }
                        b(o) && S(e.TEXTURE_CUBE_MAP),
                        c.__version = u.version,
                        o.onUpdate && o.onUpdate(o)
                    }
                    t.__version = o.version
                }(s, t, o) : n.bindTexture(e.TEXTURE_CUBE_MAP, s.__webglTexture, e.TEXTURE0 + o)
            }
            ,
            this.rebindTextures = function(t, n, i) {
                var a = r.get(t);
                void 0 !== n && Z(a.__webglFramebuffer, t, t.texture, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, 0),
                void 0 !== i && $(t)
            }
            ,
            this.setupRenderTarget = function(t) {
                var i = t.texture
                  , s = r.get(t)
                  , l = r.get(i);
                t.addEventListener("dispose", R);
                var u = t.textures
                  , c = !0 === t.isWebGLCubeRenderTarget
                  , d = u.length > 1;
                if (d || (void 0 === l.__webglTexture && (l.__webglTexture = e.createTexture()),
                l.__version = i.version,
                o.memory.textures++),
                c) {
                    s.__webglFramebuffer = [];
                    for (var f = 0; f < 6; f++)
                        if (i.mipmaps && i.mipmaps.length > 0) {
                            s.__webglFramebuffer[f] = [];
                            for (var h = 0; h < i.mipmaps.length; h++)
                                s.__webglFramebuffer[f][h] = e.createFramebuffer()
                        } else
                            s.__webglFramebuffer[f] = e.createFramebuffer()
                } else {
                    if (i.mipmaps && i.mipmaps.length > 0) {
                        s.__webglFramebuffer = [];
                        for (var p = 0; p < i.mipmaps.length; p++)
                            s.__webglFramebuffer[p] = e.createFramebuffer()
                    } else
                        s.__webglFramebuffer = e.createFramebuffer();
                    if (d)
                        for (var m = 0, v = u.length; m < v; m++) {
                            var g = r.get(u[m]);
                            void 0 === g.__webglTexture && (g.__webglTexture = e.createTexture(),
                            o.memory.textures++)
                        }
                    if (t.samples > 0 && !1 === ie(t)) {
                        s.__webglMultisampledFramebuffer = e.createFramebuffer(),
                        s.__webglColorRenderbuffer = [],
                        n.bindFramebuffer(e.FRAMEBUFFER, s.__webglMultisampledFramebuffer);
                        for (var _ = 0; _ < u.length; _++) {
                            var y = u[_];
                            s.__webglColorRenderbuffer[_] = e.createRenderbuffer(),
                            e.bindRenderbuffer(e.RENDERBUFFER, s.__webglColorRenderbuffer[_]);
                            var x = a.convert(y.format, y.colorSpace)
                              , M = a.convert(y.type)
                              , T = E(y.internalFormat, x, M, y.colorSpace, !0 === t.isXRRenderTarget)
                              , w = re(t);
                            e.renderbufferStorageMultisample(e.RENDERBUFFER, w, T, t.width, t.height),
                            e.framebufferRenderbuffer(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0 + _, e.RENDERBUFFER, s.__webglColorRenderbuffer[_])
                        }
                        e.bindRenderbuffer(e.RENDERBUFFER, null),
                        t.depthBuffer && (s.__webglDepthRenderbuffer = e.createRenderbuffer(),
                        Q(s.__webglDepthRenderbuffer, t, !0)),
                        n.bindFramebuffer(e.FRAMEBUFFER, null)
                    }
                }
                if (c) {
                    n.bindTexture(e.TEXTURE_CUBE_MAP, l.__webglTexture),
                    W(e.TEXTURE_CUBE_MAP, i);
                    for (var A = 0; A < 6; A++)
                        if (i.mipmaps && i.mipmaps.length > 0)
                            for (var C = 0; C < i.mipmaps.length; C++)
                                Z(s.__webglFramebuffer[A][C], t, i, e.COLOR_ATTACHMENT0, e.TEXTURE_CUBE_MAP_POSITIVE_X + A, C);
                        else
                            Z(s.__webglFramebuffer[A], t, i, e.COLOR_ATTACHMENT0, e.TEXTURE_CUBE_MAP_POSITIVE_X + A, 0);
                    b(i) && S(e.TEXTURE_CUBE_MAP),
                    n.unbindTexture()
                } else if (d) {
                    for (var k = 0, P = u.length; k < P; k++) {
                        var L = u[k]
                          , U = r.get(L);
                        n.bindTexture(e.TEXTURE_2D, U.__webglTexture),
                        W(e.TEXTURE_2D, L),
                        Z(s.__webglFramebuffer, t, L, e.COLOR_ATTACHMENT0 + k, e.TEXTURE_2D, 0),
                        b(L) && S(e.TEXTURE_2D)
                    }
                    n.unbindTexture()
                } else {
                    var D = e.TEXTURE_2D;
                    if ((t.isWebGL3DRenderTarget || t.isWebGLArrayRenderTarget) && (D = t.isWebGL3DRenderTarget ? e.TEXTURE_3D : e.TEXTURE_2D_ARRAY),
                    n.bindTexture(D, l.__webglTexture),
                    W(D, i),
                    i.mipmaps && i.mipmaps.length > 0)
                        for (var N = 0; N < i.mipmaps.length; N++)
                            Z(s.__webglFramebuffer[N], t, i, e.COLOR_ATTACHMENT0, D, N);
                    else
                        Z(s.__webglFramebuffer, t, i, e.COLOR_ATTACHMENT0, D, 0);
                    b(i) && S(D),
                    n.unbindTexture()
                }
                t.depthBuffer && $(t)
            }
            ,
            this.updateRenderTargetMipmap = function(e) {
                for (var t = e.textures, i = 0, a = t.length; i < a; i++) {
                    var o = t[i];
                    if (b(o)) {
                        var s = M(e)
                          , l = r.get(o).__webglTexture;
                        n.bindTexture(s, l),
                        S(s),
                        n.unbindTexture()
                    }
                }
            }
            ,
            this.updateMultisampleRenderTarget = function(t) {
                if (t.samples > 0)
                    if (!1 === ie(t)) {
                        var i = t.textures
                          , a = t.width
                          , o = t.height
                          , s = e.COLOR_BUFFER_BIT
                          , l = t.stencilBuffer ? e.DEPTH_STENCIL_ATTACHMENT : e.DEPTH_ATTACHMENT
                          , u = r.get(t)
                          , c = i.length > 1;
                        if (c)
                            for (var d = 0; d < i.length; d++)
                                n.bindFramebuffer(e.FRAMEBUFFER, u.__webglMultisampledFramebuffer),
                                e.framebufferRenderbuffer(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0 + d, e.RENDERBUFFER, null),
                                n.bindFramebuffer(e.FRAMEBUFFER, u.__webglFramebuffer),
                                e.framebufferTexture2D(e.DRAW_FRAMEBUFFER, e.COLOR_ATTACHMENT0 + d, e.TEXTURE_2D, null, 0);
                        n.bindFramebuffer(e.READ_FRAMEBUFFER, u.__webglMultisampledFramebuffer),
                        n.bindFramebuffer(e.DRAW_FRAMEBUFFER, u.__webglFramebuffer);
                        for (var h = 0; h < i.length; h++) {
                            if (t.resolveDepthBuffer && (t.depthBuffer && (s |= e.DEPTH_BUFFER_BIT),
                            t.stencilBuffer && t.resolveStencilBuffer && (s |= e.STENCIL_BUFFER_BIT)),
                            c) {
                                e.framebufferRenderbuffer(e.READ_FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.RENDERBUFFER, u.__webglColorRenderbuffer[h]);
                                var p = r.get(i[h]).__webglTexture;
                                e.framebufferTexture2D(e.DRAW_FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.TEXTURE_2D, p, 0)
                            }
                            e.blitFramebuffer(0, 0, a, o, 0, 0, a, o, s, e.NEAREST),
                            !0 === f && (ee.length = 0,
                            te.length = 0,
                            ee.push(e.COLOR_ATTACHMENT0 + h),
                            t.depthBuffer && !1 === t.resolveDepthBuffer && (ee.push(l),
                            te.push(l),
                            e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER, te)),
                            e.invalidateFramebuffer(e.READ_FRAMEBUFFER, ee))
                        }
                        if (n.bindFramebuffer(e.READ_FRAMEBUFFER, null),
                        n.bindFramebuffer(e.DRAW_FRAMEBUFFER, null),
                        c)
                            for (var m = 0; m < i.length; m++) {
                                n.bindFramebuffer(e.FRAMEBUFFER, u.__webglMultisampledFramebuffer),
                                e.framebufferRenderbuffer(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0 + m, e.RENDERBUFFER, u.__webglColorRenderbuffer[m]);
                                var v = r.get(i[m]).__webglTexture;
                                n.bindFramebuffer(e.FRAMEBUFFER, u.__webglFramebuffer),
                                e.framebufferTexture2D(e.DRAW_FRAMEBUFFER, e.COLOR_ATTACHMENT0 + m, e.TEXTURE_2D, v, 0)
                            }
                        n.bindFramebuffer(e.DRAW_FRAMEBUFFER, u.__webglMultisampledFramebuffer)
                    } else if (t.depthBuffer && !1 === t.resolveDepthBuffer && f) {
                        var g = t.stencilBuffer ? e.DEPTH_STENCIL_ATTACHMENT : e.DEPTH_ATTACHMENT;
                        e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER, [g])
                    }
            }
            ,
            this.setupDepthRenderbuffer = $,
            this.setupFrameBufferTexture = Z,
            this.useMultisampledRTT = ie
        }
        function Sl(e, t) {
            return {
                convert: function(n) {
                    var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Ze, a = Ut.getTransfer(i);
                    if (n === H)
                        return e.UNSIGNED_BYTE;
                    if (n === Z)
                        return e.UNSIGNED_SHORT_4_4_4_4;
                    if (n === Q)
                        return e.UNSIGNED_SHORT_5_5_5_1;
                    if (n === $)
                        return e.UNSIGNED_INT_5_9_9_9_REV;
                    if (n === G)
                        return e.BYTE;
                    if (n === W)
                        return e.SHORT;
                    if (n === X)
                        return e.UNSIGNED_SHORT;
                    if (n === j)
                        return e.INT;
                    if (n === q)
                        return e.UNSIGNED_INT;
                    if (n === Y)
                        return e.FLOAT;
                    if (n === K)
                        return e.HALF_FLOAT;
                    if (n === ee)
                        return e.ALPHA;
                    if (n === te)
                        return e.RGB;
                    if (n === ne)
                        return e.RGBA;
                    if (n === re)
                        return e.LUMINANCE;
                    if (n === ie)
                        return e.LUMINANCE_ALPHA;
                    if (n === ae)
                        return e.DEPTH_COMPONENT;
                    if (n === oe)
                        return e.DEPTH_STENCIL;
                    if (n === se)
                        return e.RED;
                    if (n === le)
                        return e.RED_INTEGER;
                    if (n === ue)
                        return e.RG;
                    if (n === ce)
                        return e.RG_INTEGER;
                    if (n === de)
                        return e.RGBA_INTEGER;
                    if (n === fe || n === he || n === pe || n === me)
                        if (a === et) {
                            if (null === (r = t.get("WEBGL_compressed_texture_s3tc_srgb")))
                                return null;
                            if (n === fe)
                                return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                            if (n === he)
                                return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                            if (n === pe)
                                return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                            if (n === me)
                                return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
                        } else {
                            if (null === (r = t.get("WEBGL_compressed_texture_s3tc")))
                                return null;
                            if (n === fe)
                                return r.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (n === he)
                                return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (n === pe)
                                return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (n === me)
                                return r.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                    if (n === ve || n === ge || n === _e || n === ye) {
                        if (null === (r = t.get("WEBGL_compressed_texture_pvrtc")))
                            return null;
                        if (n === ve)
                            return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                        if (n === ge)
                            return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                        if (n === _e)
                            return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                        if (n === ye)
                            return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                    }
                    if (n === xe || n === be || n === Se) {
                        if (null === (r = t.get("WEBGL_compressed_texture_etc")))
                            return null;
                        if (n === xe || n === be)
                            return a === et ? r.COMPRESSED_SRGB8_ETC2 : r.COMPRESSED_RGB8_ETC2;
                        if (n === Se)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : r.COMPRESSED_RGBA8_ETC2_EAC
                    }
                    if (n === Me || n === Ee || n === Te || n === we || n === Ae || n === Re || n === Ce || n === ke || n === Pe || n === Le || n === Ue || n === De || n === Ne || n === Ie) {
                        if (null === (r = t.get("WEBGL_compressed_texture_astc")))
                            return null;
                        if (n === Me)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : r.COMPRESSED_RGBA_ASTC_4x4_KHR;
                        if (n === Ee)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : r.COMPRESSED_RGBA_ASTC_5x4_KHR;
                        if (n === Te)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : r.COMPRESSED_RGBA_ASTC_5x5_KHR;
                        if (n === we)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : r.COMPRESSED_RGBA_ASTC_6x5_KHR;
                        if (n === Ae)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : r.COMPRESSED_RGBA_ASTC_6x6_KHR;
                        if (n === Re)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : r.COMPRESSED_RGBA_ASTC_8x5_KHR;
                        if (n === Ce)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : r.COMPRESSED_RGBA_ASTC_8x6_KHR;
                        if (n === ke)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : r.COMPRESSED_RGBA_ASTC_8x8_KHR;
                        if (n === Pe)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : r.COMPRESSED_RGBA_ASTC_10x5_KHR;
                        if (n === Le)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : r.COMPRESSED_RGBA_ASTC_10x6_KHR;
                        if (n === Ue)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : r.COMPRESSED_RGBA_ASTC_10x8_KHR;
                        if (n === De)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : r.COMPRESSED_RGBA_ASTC_10x10_KHR;
                        if (n === Ne)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : r.COMPRESSED_RGBA_ASTC_12x10_KHR;
                        if (n === Ie)
                            return a === et ? r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : r.COMPRESSED_RGBA_ASTC_12x12_KHR
                    }
                    if (n === Oe || n === Fe || n === ze) {
                        if (null === (r = t.get("EXT_texture_compression_bptc")))
                            return null;
                        if (n === Oe)
                            return a === et ? r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : r.COMPRESSED_RGBA_BPTC_UNORM_EXT;
                        if (n === Fe)
                            return r.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
                        if (n === ze)
                            return r.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT
                    }
                    if (n === Be || n === Ve || n === He || n === Ge) {
                        if (null === (r = t.get("EXT_texture_compression_rgtc")))
                            return null;
                        if (n === Oe)
                            return r.COMPRESSED_RED_RGTC1_EXT;
                        if (n === Ve)
                            return r.COMPRESSED_SIGNED_RED_RGTC1_EXT;
                        if (n === He)
                            return r.COMPRESSED_RED_GREEN_RGTC2_EXT;
                        if (n === Ge)
                            return r.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
                    }
                    return n === J ? e.UNSIGNED_INT_24_8 : void 0 !== e[n] ? e[n] : null
                }
            }
        }
        var Ml = {
            type: "move"
        }
          , El = function() {
            function e() {
                _(this, e),
                this._targetRay = null,
                this._grip = null,
                this._hand = null
            }
            return x(e, [{
                key: "getHandSpace",
                value: function() {
                    return null === this._hand && (this._hand = new ea,
                    this._hand.matrixAutoUpdate = !1,
                    this._hand.visible = !1,
                    this._hand.joints = {},
                    this._hand.inputState = {
                        pinching: !1
                    }),
                    this._hand
                }
            }, {
                key: "getTargetRaySpace",
                value: function() {
                    return null === this._targetRay && (this._targetRay = new ea,
                    this._targetRay.matrixAutoUpdate = !1,
                    this._targetRay.visible = !1,
                    this._targetRay.hasLinearVelocity = !1,
                    this._targetRay.linearVelocity = new Yt,
                    this._targetRay.hasAngularVelocity = !1,
                    this._targetRay.angularVelocity = new Yt),
                    this._targetRay
                }
            }, {
                key: "getGripSpace",
                value: function() {
                    return null === this._grip && (this._grip = new ea,
                    this._grip.matrixAutoUpdate = !1,
                    this._grip.visible = !1,
                    this._grip.hasLinearVelocity = !1,
                    this._grip.linearVelocity = new Yt,
                    this._grip.hasAngularVelocity = !1,
                    this._grip.angularVelocity = new Yt),
                    this._grip
                }
            }, {
                key: "dispatchEvent",
                value: function(e) {
                    return null !== this._targetRay && this._targetRay.dispatchEvent(e),
                    null !== this._grip && this._grip.dispatchEvent(e),
                    null !== this._hand && this._hand.dispatchEvent(e),
                    this
                }
            }, {
                key: "connect",
                value: function(e) {
                    if (e && e.hand) {
                        var t = this._hand;
                        if (t) {
                            var n, r = g(e.hand.values());
                            try {
                                for (r.s(); !(n = r.n()).done; ) {
                                    var i = n.value;
                                    this._getHandJoint(t, i)
                                }
                            } catch (a) {
                                r.e(a)
                            } finally {
                                r.f()
                            }
                        }
                    }
                    return this.dispatchEvent({
                        type: "connected",
                        data: e
                    }),
                    this
                }
            }, {
                key: "disconnect",
                value: function(e) {
                    return this.dispatchEvent({
                        type: "disconnected",
                        data: e
                    }),
                    null !== this._targetRay && (this._targetRay.visible = !1),
                    null !== this._grip && (this._grip.visible = !1),
                    null !== this._hand && (this._hand.visible = !1),
                    this
                }
            }, {
                key: "update",
                value: function(e, t, n) {
                    var r = null
                      , i = null
                      , a = null
                      , o = this._targetRay
                      , s = this._grip
                      , l = this._hand;
                    if (e && "visible-blurred" !== t.session.visibilityState) {
                        if (l && e.hand) {
                            a = !0;
                            var u, c = g(e.hand.values());
                            try {
                                for (c.s(); !(u = c.n()).done; ) {
                                    var d = u.value
                                      , f = t.getJointPose(d, n)
                                      , h = this._getHandJoint(l, d);
                                    null !== f && (h.matrix.fromArray(f.transform.matrix),
                                    h.matrix.decompose(h.position, h.rotation, h.scale),
                                    h.matrixWorldNeedsUpdate = !0,
                                    h.jointRadius = f.radius),
                                    h.visible = null !== f
                                }
                            } catch (_) {
                                c.e(_)
                            } finally {
                                c.f()
                            }
                            var p = l.joints["index-finger-tip"]
                              , m = l.joints["thumb-tip"]
                              , v = p.position.distanceTo(m.position);
                            l.inputState.pinching && v > .025 ? (l.inputState.pinching = !1,
                            this.dispatchEvent({
                                type: "pinchend",
                                handedness: e.handedness,
                                target: this
                            })) : !l.inputState.pinching && v <= .015 && (l.inputState.pinching = !0,
                            this.dispatchEvent({
                                type: "pinchstart",
                                handedness: e.handedness,
                                target: this
                            }))
                        } else
                            null !== s && e.gripSpace && null !== (i = t.getPose(e.gripSpace, n)) && (s.matrix.fromArray(i.transform.matrix),
                            s.matrix.decompose(s.position, s.rotation, s.scale),
                            s.matrixWorldNeedsUpdate = !0,
                            i.linearVelocity ? (s.hasLinearVelocity = !0,
                            s.linearVelocity.copy(i.linearVelocity)) : s.hasLinearVelocity = !1,
                            i.angularVelocity ? (s.hasAngularVelocity = !0,
                            s.angularVelocity.copy(i.angularVelocity)) : s.hasAngularVelocity = !1);
                        null !== o && (null === (r = t.getPose(e.targetRaySpace, n)) && null !== i && (r = i),
                        null !== r && (o.matrix.fromArray(r.transform.matrix),
                        o.matrix.decompose(o.position, o.rotation, o.scale),
                        o.matrixWorldNeedsUpdate = !0,
                        r.linearVelocity ? (o.hasLinearVelocity = !0,
                        o.linearVelocity.copy(r.linearVelocity)) : o.hasLinearVelocity = !1,
                        r.angularVelocity ? (o.hasAngularVelocity = !0,
                        o.angularVelocity.copy(r.angularVelocity)) : o.hasAngularVelocity = !1,
                        this.dispatchEvent(Ml)))
                    }
                    return null !== o && (o.visible = null !== r),
                    null !== s && (s.visible = null !== i),
                    null !== l && (l.visible = null !== a),
                    this
                }
            }, {
                key: "_getHandJoint",
                value: function(e, t) {
                    if (void 0 === e.joints[t.jointName]) {
                        var n = new ea;
                        n.matrixAutoUpdate = !1,
                        n.visible = !1,
                        e.joints[t.jointName] = n,
                        e.add(n)
                    }
                    return e.joints[t.jointName]
                }
            }]),
            e
        }()
          , Tl = function() {
            function e() {
                _(this, e),
                this.texture = null,
                this.mesh = null,
                this.depthNear = 0,
                this.depthFar = 0
            }
            return x(e, [{
                key: "init",
                value: function(e, t, n) {
                    if (null === this.texture) {
                        var r = new Vt;
                        e.properties.get(r).__webglTexture = t.texture,
                        t.depthNear === n.depthNear && t.depthFar === n.depthFar || (this.depthNear = t.depthNear,
                        this.depthFar = t.depthFar),
                        this.texture = r
                    }
                }
            }, {
                key: "getMesh",
                value: function(e) {
                    if (null !== this.texture && null === this.mesh) {
                        var t = e.cameras[0].viewport
                          , n = new ti({
                            vertexShader: "\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}",
                            fragmentShader: "\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}",
                            uniforms: {
                                depthColor: {
                                    value: this.texture
                                },
                                depthWidth: {
                                    value: t.z
                                },
                                depthHeight: {
                                    value: t.w
                                }
                            }
                        });
                        this.mesh = new qr(new ia(20,20),n)
                    }
                    return this.mesh
                }
            }, {
                key: "reset",
                value: function() {
                    this.texture = null,
                    this.mesh = null
                }
            }, {
                key: "getDepthTexture",
                value: function() {
                    return this.texture
                }
            }]),
            e
        }()
          , wl = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r) {
                var a;
                _(this, n);
                var l = s(a = t.call(this))
                  , u = null
                  , c = 1
                  , d = null
                  , f = "local-floor"
                  , h = 1
                  , p = null
                  , m = null
                  , v = null
                  , g = null
                  , y = null
                  , x = null
                  , b = new Tl
                  , S = r.getContextAttributes()
                  , M = null
                  , E = null
                  , T = []
                  , w = []
                  , A = new _t
                  , R = null
                  , C = new oi;
                C.viewport = new Ht;
                var k = new oi;
                k.viewport = new Ht;
                var P = [C, k]
                  , L = new Na
                  , U = null
                  , D = null;
                function N(e) {
                    var t = w.indexOf(e.inputSource);
                    if (-1 !== t) {
                        var n = T[t];
                        void 0 !== n && (n.update(e.inputSource, e.frame, p || d),
                        n.dispatchEvent({
                            type: e.type,
                            data: e.inputSource
                        }))
                    }
                }
                function I() {
                    u.removeEventListener("select", N),
                    u.removeEventListener("selectstart", N),
                    u.removeEventListener("selectend", N),
                    u.removeEventListener("squeeze", N),
                    u.removeEventListener("squeezestart", N),
                    u.removeEventListener("squeezeend", N),
                    u.removeEventListener("end", I),
                    u.removeEventListener("inputsourceschange", O);
                    for (var t = 0; t < T.length; t++) {
                        var n = w[t];
                        null !== n && (w[t] = null,
                        T[t].disconnect(n))
                    }
                    U = null,
                    D = null,
                    b.reset(),
                    e.setRenderTarget(M),
                    y = null,
                    g = null,
                    v = null,
                    u = null,
                    E = null,
                    G.stop(),
                    l.isPresenting = !1,
                    e.setPixelRatio(R),
                    e.setSize(A.width, A.height, !1),
                    l.dispatchEvent({
                        type: "sessionend"
                    })
                }
                function O(e) {
                    for (var t = 0; t < e.removed.length; t++) {
                        var n = e.removed[t]
                          , r = w.indexOf(n);
                        r >= 0 && (w[r] = null,
                        T[r].disconnect(n))
                    }
                    for (var i = 0; i < e.added.length; i++) {
                        var a = e.added[i]
                          , o = w.indexOf(a);
                        if (-1 === o) {
                            for (var s = 0; s < T.length; s++) {
                                if (s >= w.length) {
                                    w.push(a),
                                    o = s;
                                    break
                                }
                                if (null === w[s]) {
                                    w[s] = a,
                                    o = s;
                                    break
                                }
                            }
                            if (-1 === o)
                                break
                        }
                        var l = T[o];
                        l && l.connect(a)
                    }
                }
                a.cameraAutoUpdate = !0,
                a.enabled = !1,
                a.isPresenting = !1,
                a.getController = function(e) {
                    var t = T[e];
                    return void 0 === t && (t = new El,
                    T[e] = t),
                    t.getTargetRaySpace()
                }
                ,
                a.getControllerGrip = function(e) {
                    var t = T[e];
                    return void 0 === t && (t = new El,
                    T[e] = t),
                    t.getGripSpace()
                }
                ,
                a.getHand = function(e) {
                    var t = T[e];
                    return void 0 === t && (t = new El,
                    T[e] = t),
                    t.getHandSpace()
                }
                ,
                a.setFramebufferScaleFactor = function(e) {
                    c = e,
                    !0 === l.isPresenting && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")
                }
                ,
                a.setReferenceSpaceType = function(e) {
                    f = e,
                    !0 === l.isPresenting && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")
                }
                ,
                a.getReferenceSpace = function() {
                    return p || d
                }
                ,
                a.setReferenceSpace = function(e) {
                    p = e
                }
                ,
                a.getBaseLayer = function() {
                    return null !== g ? g : y
                }
                ,
                a.getBinding = function() {
                    return v
                }
                ,
                a.getFrame = function() {
                    return x
                }
                ,
                a.getSession = function() {
                    return u
                }
                ,
                a.setSession = function() {
                    var t = o(i().mark((function t(n) {
                        var a, o, s, m, _;
                        return i().wrap((function(t) {
                            for (; ; )
                                switch (t.prev = t.next) {
                                case 0:
                                    if (null === (u = n)) {
                                        t.next = 28;
                                        break
                                    }
                                    if (M = e.getRenderTarget(),
                                    u.addEventListener("select", N),
                                    u.addEventListener("selectstart", N),
                                    u.addEventListener("selectend", N),
                                    u.addEventListener("squeeze", N),
                                    u.addEventListener("squeezestart", N),
                                    u.addEventListener("squeezeend", N),
                                    u.addEventListener("end", I),
                                    u.addEventListener("inputsourceschange", O),
                                    !0 === S.xrCompatible) {
                                        t.next = 14;
                                        break
                                    }
                                    return t.next = 14,
                                    r.makeXRCompatible();
                                case 14:
                                    return R = e.getPixelRatio(),
                                    e.getSize(A),
                                    void 0 !== u.enabledFeatures && u.enabledFeatures.includes("layers") ? (o = null,
                                    s = null,
                                    m = null,
                                    S.depth && (m = S.stencil ? r.DEPTH24_STENCIL8 : r.DEPTH_COMPONENT24,
                                    o = S.stencil ? oe : ae,
                                    s = S.stencil ? J : q),
                                    _ = {
                                        colorFormat: r.RGBA8,
                                        depthFormat: m,
                                        scaleFactor: c
                                    },
                                    v = new XRWebGLBinding(u,r),
                                    g = v.createProjectionLayer(_),
                                    u.updateRenderState({
                                        layers: [g]
                                    }),
                                    e.setPixelRatio(1),
                                    e.setSize(g.textureWidth, g.textureHeight, !1),
                                    E = new Wt(g.textureWidth,g.textureHeight,{
                                        format: ne,
                                        type: H,
                                        depthTexture: new na(g.textureWidth,g.textureHeight,s,void 0,void 0,void 0,void 0,void 0,void 0,o),
                                        stencilBuffer: S.stencil,
                                        colorSpace: e.outputColorSpace,
                                        samples: S.antialias ? 4 : 0,
                                        resolveDepthBuffer: !1 === g.ignoreDepthValues
                                    })) : (a = {
                                        antialias: S.antialias,
                                        alpha: !0,
                                        depth: S.depth,
                                        stencil: S.stencil,
                                        framebufferScaleFactor: c
                                    },
                                    y = new XRWebGLLayer(u,r,a),
                                    u.updateRenderState({
                                        baseLayer: y
                                    }),
                                    e.setPixelRatio(1),
                                    e.setSize(y.framebufferWidth, y.framebufferHeight, !1),
                                    E = new Wt(y.framebufferWidth,y.framebufferHeight,{
                                        format: ne,
                                        type: H,
                                        colorSpace: e.outputColorSpace,
                                        stencilBuffer: S.stencil
                                    })),
                                    E.isXRRenderTarget = !0,
                                    this.setFoveation(h),
                                    p = null,
                                    t.next = 23,
                                    u.requestReferenceSpace(f);
                                case 23:
                                    d = t.sent,
                                    G.setContext(u),
                                    G.start(),
                                    l.isPresenting = !0,
                                    l.dispatchEvent({
                                        type: "sessionstart"
                                    });
                                case 28:
                                case "end":
                                    return t.stop()
                                }
                        }
                        ), t, this)
                    }
                    )));
                    return function(e) {
                        return t.apply(this, arguments)
                    }
                }(),
                a.getEnvironmentBlendMode = function() {
                    if (null !== u)
                        return u.environmentBlendMode
                }
                ,
                a.getDepthTexture = function() {
                    return b.getDepthTexture()
                }
                ;
                var F = new Yt
                  , z = new Yt;
                function B(e, t) {
                    null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix),
                    e.matrixWorldInverse.copy(e.matrixWorld).invert()
                }
                a.updateCamera = function(e) {
                    if (null !== u) {
                        var t = e.near
                          , n = e.far;
                        null !== b.texture && (b.depthNear > 0 && (t = b.depthNear),
                        b.depthFar > 0 && (n = b.depthFar)),
                        L.near = k.near = C.near = t,
                        L.far = k.far = C.far = n,
                        U === L.near && D === L.far || (u.updateRenderState({
                            depthNear: L.near,
                            depthFar: L.far
                        }),
                        U = L.near,
                        D = L.far),
                        C.layers.mask = 2 | e.layers.mask,
                        k.layers.mask = 4 | e.layers.mask,
                        L.layers.mask = C.layers.mask | k.layers.mask;
                        var r = e.parent
                          , i = L.cameras;
                        B(L, r);
                        for (var a = 0; a < i.length; a++)
                            B(i[a], r);
                        2 === i.length ? function(e, t, n) {
                            F.setFromMatrixPosition(t.matrixWorld),
                            z.setFromMatrixPosition(n.matrixWorld);
                            var r = F.distanceTo(z)
                              , i = t.projectionMatrix.elements
                              , a = n.projectionMatrix.elements
                              , o = i[14] / (i[10] - 1)
                              , s = i[14] / (i[10] + 1)
                              , l = (i[9] + 1) / i[5]
                              , u = (i[9] - 1) / i[5]
                              , c = (i[8] - 1) / i[0]
                              , d = (a[8] + 1) / a[0]
                              , f = o * c
                              , h = o * d
                              , p = r / (-c + d)
                              , m = p * -c;
                            if (t.matrixWorld.decompose(e.position, e.quaternion, e.scale),
                            e.translateX(m),
                            e.translateZ(p),
                            e.matrixWorld.compose(e.position, e.quaternion, e.scale),
                            e.matrixWorldInverse.copy(e.matrixWorld).invert(),
                            -1 === i[10])
                                e.projectionMatrix.copy(t.projectionMatrix),
                                e.projectionMatrixInverse.copy(t.projectionMatrixInverse);
                            else {
                                var v = o + p
                                  , g = s + p
                                  , _ = f - m
                                  , y = h + (r - m)
                                  , x = l * s / g * v
                                  , b = u * s / g * v;
                                e.projectionMatrix.makePerspective(_, y, x, b, v, g),
                                e.projectionMatrixInverse.copy(e.projectionMatrix).invert()
                            }
                        }(L, C, k) : L.projectionMatrix.copy(C.projectionMatrix),
                        function(e, t, n) {
                            null === n ? e.matrix.copy(t.matrixWorld) : (e.matrix.copy(n.matrixWorld),
                            e.matrix.invert(),
                            e.matrix.multiply(t.matrixWorld));
                            e.matrix.decompose(e.position, e.quaternion, e.scale),
                            e.updateMatrixWorld(!0),
                            e.projectionMatrix.copy(t.projectionMatrix),
                            e.projectionMatrixInverse.copy(t.projectionMatrixInverse),
                            e.isPerspectiveCamera && (e.fov = 2 * ct * Math.atan(1 / e.projectionMatrix.elements[5]),
                            e.zoom = 1)
                        }(e, L, r)
                    }
                }
                ,
                a.getCamera = function() {
                    return L
                }
                ,
                a.getFoveation = function() {
                    if (null !== g || null !== y)
                        return h
                }
                ,
                a.setFoveation = function(e) {
                    h = e,
                    null !== g && (g.fixedFoveation = e),
                    null !== y && void 0 !== y.fixedFoveation && (y.fixedFoveation = e)
                }
                ,
                a.hasDepthSensing = function() {
                    return null !== b.texture
                }
                ,
                a.getDepthSensingMesh = function() {
                    return b.getMesh(L)
                }
                ;
                var V = null;
                var G = new Ya;
                return G.setAnimationLoop((function(t, n) {
                    if (m = n.getViewerPose(p || d),
                    x = n,
                    null !== m) {
                        var r = m.views;
                        null !== y && (e.setRenderTargetFramebuffer(E, y.framebuffer),
                        e.setRenderTarget(E));
                        var i = !1;
                        r.length !== L.cameras.length && (L.cameras.length = 0,
                        i = !0);
                        for (var a = 0; a < r.length; a++) {
                            var o = r[a]
                              , s = null;
                            if (null !== y)
                                s = y.getViewport(o);
                            else {
                                var c = v.getViewSubImage(g, o);
                                s = c.viewport,
                                0 === a && (e.setRenderTargetTextures(E, c.colorTexture, g.ignoreDepthValues ? void 0 : c.depthStencilTexture),
                                e.setRenderTarget(E))
                            }
                            var f = P[a];
                            void 0 === f && ((f = new oi).layers.enable(a),
                            f.viewport = new Ht,
                            P[a] = f),
                            f.matrix.fromArray(o.transform.matrix),
                            f.matrix.decompose(f.position, f.quaternion, f.scale),
                            f.projectionMatrix.fromArray(o.projectionMatrix),
                            f.projectionMatrixInverse.copy(f.projectionMatrix).invert(),
                            f.viewport.set(s.x, s.y, s.width, s.height),
                            0 === a && (L.matrix.copy(f.matrix),
                            L.matrix.decompose(L.position, L.quaternion, L.scale)),
                            !0 === i && L.cameras.push(f)
                        }
                        var h = u.enabledFeatures;
                        if (h && h.includes("depth-sensing")) {
                            var _ = v.getDepthInformation(r[0]);
                            _ && _.isValid && _.texture && b.init(e, _, u.renderState)
                        }
                    }
                    for (var S = 0; S < T.length; S++) {
                        var M = w[S]
                          , A = T[S];
                        null !== M && void 0 !== A && A.update(M, n, p || d)
                    }
                    V && V(t, n),
                    n.detectedPlanes && l.dispatchEvent({
                        type: "planesdetected",
                        data: n
                    }),
                    x = null
                }
                )),
                a.setAnimationLoop = function(e) {
                    V = e
                }
                ,
                a.dispose = function() {}
                ,
                a
            }
            return x(n)
        }(ot)
          , Al = new Nn
          , Rl = new Tn;
        function Cl(e, t) {
            function n(e, t) {
                !0 === e.matrixAutoUpdate && e.updateMatrix(),
                t.value.copy(e.matrix)
            }
            function r(e, r) {
                e.opacity.value = r.opacity,
                r.color && e.diffuse.value.copy(r.color),
                r.emissive && e.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),
                r.map && (e.map.value = r.map,
                n(r.map, e.mapTransform)),
                r.alphaMap && (e.alphaMap.value = r.alphaMap,
                n(r.alphaMap, e.alphaMapTransform)),
                r.bumpMap && (e.bumpMap.value = r.bumpMap,
                n(r.bumpMap, e.bumpMapTransform),
                e.bumpScale.value = r.bumpScale,
                1 === r.side && (e.bumpScale.value *= -1)),
                r.normalMap && (e.normalMap.value = r.normalMap,
                n(r.normalMap, e.normalMapTransform),
                e.normalScale.value.copy(r.normalScale),
                1 === r.side && e.normalScale.value.negate()),
                r.displacementMap && (e.displacementMap.value = r.displacementMap,
                n(r.displacementMap, e.displacementMapTransform),
                e.displacementScale.value = r.displacementScale,
                e.displacementBias.value = r.displacementBias),
                r.emissiveMap && (e.emissiveMap.value = r.emissiveMap,
                n(r.emissiveMap, e.emissiveMapTransform)),
                r.specularMap && (e.specularMap.value = r.specularMap,
                n(r.specularMap, e.specularMapTransform)),
                r.alphaTest > 0 && (e.alphaTest.value = r.alphaTest);
                var i = t.get(r)
                  , a = i.envMap
                  , o = i.envMapRotation;
                a && (e.envMap.value = a,
                Al.copy(o),
                Al.x *= -1,
                Al.y *= -1,
                Al.z *= -1,
                a.isCubeTexture && !1 === a.isRenderTargetTexture && (Al.y *= -1,
                Al.z *= -1),
                e.envMapRotation.value.setFromMatrix4(Rl.makeRotationFromEuler(Al)),
                e.flipEnvMap.value = a.isCubeTexture && !1 === a.isRenderTargetTexture ? -1 : 1,
                e.reflectivity.value = r.reflectivity,
                e.ior.value = r.ior,
                e.refractionRatio.value = r.refractionRatio),
                r.lightMap && (e.lightMap.value = r.lightMap,
                e.lightMapIntensity.value = r.lightMapIntensity,
                n(r.lightMap, e.lightMapTransform)),
                r.aoMap && (e.aoMap.value = r.aoMap,
                e.aoMapIntensity.value = r.aoMapIntensity,
                n(r.aoMap, e.aoMapTransform))
            }
            return {
                refreshFogUniforms: function(t, n) {
                    n.color.getRGB(t.fogColor.value, Jr(e)),
                    n.isFog ? (t.fogNear.value = n.near,
                    t.fogFar.value = n.far) : n.isFogExp2 && (t.fogDensity.value = n.density)
                },
                refreshMaterialUniforms: function(e, i, a, o, s) {
                    i.isMeshBasicMaterial || i.isMeshLambertMaterial ? r(e, i) : i.isMeshToonMaterial ? (r(e, i),
                    function(e, t) {
                        t.gradientMap && (e.gradientMap.value = t.gradientMap)
                    }(e, i)) : i.isMeshPhongMaterial ? (r(e, i),
                    function(e, t) {
                        e.specular.value.copy(t.specular),
                        e.shininess.value = Math.max(t.shininess, 1e-4)
                    }(e, i)) : i.isMeshStandardMaterial ? (r(e, i),
                    function(e, t) {
                        e.metalness.value = t.metalness,
                        t.metalnessMap && (e.metalnessMap.value = t.metalnessMap,
                        n(t.metalnessMap, e.metalnessMapTransform));
                        e.roughness.value = t.roughness,
                        t.roughnessMap && (e.roughnessMap.value = t.roughnessMap,
                        n(t.roughnessMap, e.roughnessMapTransform));
                        t.envMap && (e.envMapIntensity.value = t.envMapIntensity)
                    }(e, i),
                    i.isMeshPhysicalMaterial && function(e, t, r) {
                        e.ior.value = t.ior,
                        t.sheen > 0 && (e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),
                        e.sheenRoughness.value = t.sheenRoughness,
                        t.sheenColorMap && (e.sheenColorMap.value = t.sheenColorMap,
                        n(t.sheenColorMap, e.sheenColorMapTransform)),
                        t.sheenRoughnessMap && (e.sheenRoughnessMap.value = t.sheenRoughnessMap,
                        n(t.sheenRoughnessMap, e.sheenRoughnessMapTransform)));
                        t.clearcoat > 0 && (e.clearcoat.value = t.clearcoat,
                        e.clearcoatRoughness.value = t.clearcoatRoughness,
                        t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap,
                        n(t.clearcoatMap, e.clearcoatMapTransform)),
                        t.clearcoatRoughnessMap && (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap,
                        n(t.clearcoatRoughnessMap, e.clearcoatRoughnessMapTransform)),
                        t.clearcoatNormalMap && (e.clearcoatNormalMap.value = t.clearcoatNormalMap,
                        n(t.clearcoatNormalMap, e.clearcoatNormalMapTransform),
                        e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),
                        1 === t.side && e.clearcoatNormalScale.value.negate()));
                        t.dispersion > 0 && (e.dispersion.value = t.dispersion);
                        t.iridescence > 0 && (e.iridescence.value = t.iridescence,
                        e.iridescenceIOR.value = t.iridescenceIOR,
                        e.iridescenceThicknessMinimum.value = t.iridescenceThicknessRange[0],
                        e.iridescenceThicknessMaximum.value = t.iridescenceThicknessRange[1],
                        t.iridescenceMap && (e.iridescenceMap.value = t.iridescenceMap,
                        n(t.iridescenceMap, e.iridescenceMapTransform)),
                        t.iridescenceThicknessMap && (e.iridescenceThicknessMap.value = t.iridescenceThicknessMap,
                        n(t.iridescenceThicknessMap, e.iridescenceThicknessMapTransform)));
                        t.transmission > 0 && (e.transmission.value = t.transmission,
                        e.transmissionSamplerMap.value = r.texture,
                        e.transmissionSamplerSize.value.set(r.width, r.height),
                        t.transmissionMap && (e.transmissionMap.value = t.transmissionMap,
                        n(t.transmissionMap, e.transmissionMapTransform)),
                        e.thickness.value = t.thickness,
                        t.thicknessMap && (e.thicknessMap.value = t.thicknessMap,
                        n(t.thicknessMap, e.thicknessMapTransform)),
                        e.attenuationDistance.value = t.attenuationDistance,
                        e.attenuationColor.value.copy(t.attenuationColor));
                        t.anisotropy > 0 && (e.anisotropyVector.value.set(t.anisotropy * Math.cos(t.anisotropyRotation), t.anisotropy * Math.sin(t.anisotropyRotation)),
                        t.anisotropyMap && (e.anisotropyMap.value = t.anisotropyMap,
                        n(t.anisotropyMap, e.anisotropyMapTransform)));
                        e.specularIntensity.value = t.specularIntensity,
                        e.specularColor.value.copy(t.specularColor),
                        t.specularColorMap && (e.specularColorMap.value = t.specularColorMap,
                        n(t.specularColorMap, e.specularColorMapTransform));
                        t.specularIntensityMap && (e.specularIntensityMap.value = t.specularIntensityMap,
                        n(t.specularIntensityMap, e.specularIntensityMapTransform))
                    }(e, i, s)) : i.isMeshMatcapMaterial ? (r(e, i),
                    function(e, t) {
                        t.matcap && (e.matcap.value = t.matcap)
                    }(e, i)) : i.isMeshDepthMaterial ? r(e, i) : i.isMeshDistanceMaterial ? (r(e, i),
                    function(e, n) {
                        var r = t.get(n).light;
                        e.referencePosition.value.setFromMatrixPosition(r.matrixWorld),
                        e.nearDistance.value = r.shadow.camera.near,
                        e.farDistance.value = r.shadow.camera.far
                    }(e, i)) : i.isMeshNormalMaterial ? r(e, i) : i.isLineBasicMaterial ? (function(e, t) {
                        e.diffuse.value.copy(t.color),
                        e.opacity.value = t.opacity,
                        t.map && (e.map.value = t.map,
                        n(t.map, e.mapTransform))
                    }(e, i),
                    i.isLineDashedMaterial && function(e, t) {
                        e.dashSize.value = t.dashSize,
                        e.totalSize.value = t.dashSize + t.gapSize,
                        e.scale.value = t.scale
                    }(e, i)) : i.isPointsMaterial ? function(e, t, r, i) {
                        e.diffuse.value.copy(t.color),
                        e.opacity.value = t.opacity,
                        e.size.value = t.size * r,
                        e.scale.value = .5 * i,
                        t.map && (e.map.value = t.map,
                        n(t.map, e.uvTransform));
                        t.alphaMap && (e.alphaMap.value = t.alphaMap,
                        n(t.alphaMap, e.alphaMapTransform));
                        t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest)
                    }(e, i, a, o) : i.isSpriteMaterial ? function(e, t) {
                        e.diffuse.value.copy(t.color),
                        e.opacity.value = t.opacity,
                        e.rotation.value = t.rotation,
                        t.map && (e.map.value = t.map,
                        n(t.map, e.mapTransform));
                        t.alphaMap && (e.alphaMap.value = t.alphaMap,
                        n(t.alphaMap, e.alphaMapTransform));
                        t.alphaTest > 0 && (e.alphaTest.value = t.alphaTest)
                    }(e, i) : i.isShadowMaterial ? (e.color.value.copy(i.color),
                    e.opacity.value = i.opacity) : i.isShaderMaterial && (i.uniformsNeedUpdate = !1)
                }
            }
        }
        function kl(e, t, n, r) {
            var i = {}
              , a = {}
              , o = []
              , s = e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);
            function l(e, t, n, r) {
                var i = e.value
                  , a = t + "_" + n;
                if (void 0 === r[a])
                    return r[a] = "number" === typeof i || "boolean" === typeof i ? i : i.clone(),
                    !0;
                var o = r[a];
                if ("number" === typeof i || "boolean" === typeof i) {
                    if (o !== i)
                        return r[a] = i,
                        !0
                } else if (!1 === o.equals(i))
                    return o.copy(i),
                    !0;
                return !1
            }
            function u(e) {
                var t = {
                    boundary: 0,
                    storage: 0
                };
                return "number" === typeof e || "boolean" === typeof e ? (t.boundary = 4,
                t.storage = 4) : e.isVector2 ? (t.boundary = 8,
                t.storage = 8) : e.isVector3 || e.isColor ? (t.boundary = 16,
                t.storage = 12) : e.isVector4 ? (t.boundary = 16,
                t.storage = 16) : e.isMatrix3 ? (t.boundary = 48,
                t.storage = 48) : e.isMatrix4 ? (t.boundary = 64,
                t.storage = 64) : e.isTexture ? console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.") : console.warn("THREE.WebGLRenderer: Unsupported uniform value type.", e),
                t
            }
            function c(t) {
                var n = t.target;
                n.removeEventListener("dispose", c);
                var r = o.indexOf(n.__bindingPointIndex);
                o.splice(r, 1),
                e.deleteBuffer(i[n.id]),
                delete i[n.id],
                delete a[n.id]
            }
            return {
                bind: function(e, t) {
                    var n = t.program;
                    r.uniformBlockBinding(e, n)
                },
                update: function(n, d) {
                    var f = i[n.id];
                    void 0 === f && (!function(e) {
                        for (var t = e.uniforms, n = 0, r = 16, i = 0, a = t.length; i < a; i++)
                            for (var o = Array.isArray(t[i]) ? t[i] : [t[i]], s = 0, l = o.length; s < l; s++)
                                for (var c = o[s], d = Array.isArray(c.value) ? c.value : [c.value], f = 0, h = d.length; f < h; f++) {
                                    var p = u(d[f])
                                      , m = n % r
                                      , v = m % p.boundary
                                      , g = m + v;
                                    n += v,
                                    0 !== g && r - g < p.storage && (n += r - g),
                                    c.__data = new Float32Array(p.storage / Float32Array.BYTES_PER_ELEMENT),
                                    c.__offset = n,
                                    n += p.storage
                                }
                        var _ = n % r;
                        _ > 0 && (n += r - _);
                        e.__size = n,
                        e.__cache = {}
                    }(n),
                    f = function(t) {
                        var n = function() {
                            for (var e = 0; e < s; e++)
                                if (-1 === o.indexOf(e))
                                    return o.push(e),
                                    e;
                            return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),
                            0
                        }();
                        t.__bindingPointIndex = n;
                        var r = e.createBuffer()
                          , i = t.__size
                          , a = t.usage;
                        return e.bindBuffer(e.UNIFORM_BUFFER, r),
                        e.bufferData(e.UNIFORM_BUFFER, i, a),
                        e.bindBuffer(e.UNIFORM_BUFFER, null),
                        e.bindBufferBase(e.UNIFORM_BUFFER, n, r),
                        r
                    }(n),
                    i[n.id] = f,
                    n.addEventListener("dispose", c));
                    var h = d.program;
                    r.updateUBOMapping(n, h);
                    var p = t.render.frame;
                    a[n.id] !== p && (!function(t) {
                        var n = i[t.id]
                          , r = t.uniforms
                          , a = t.__cache;
                        e.bindBuffer(e.UNIFORM_BUFFER, n);
                        for (var o = 0, s = r.length; o < s; o++)
                            for (var c = Array.isArray(r[o]) ? r[o] : [r[o]], d = 0, f = c.length; d < f; d++) {
                                var h = c[d];
                                if (!0 === l(h, o, d, a)) {
                                    for (var p = h.__offset, m = Array.isArray(h.value) ? h.value : [h.value], v = 0, g = 0; g < m.length; g++) {
                                        var _ = m[g]
                                          , y = u(_);
                                        "number" === typeof _ || "boolean" === typeof _ ? (h.__data[0] = _,
                                        e.bufferSubData(e.UNIFORM_BUFFER, p + v, h.__data)) : _.isMatrix3 ? (h.__data[0] = _.elements[0],
                                        h.__data[1] = _.elements[1],
                                        h.__data[2] = _.elements[2],
                                        h.__data[3] = 0,
                                        h.__data[4] = _.elements[3],
                                        h.__data[5] = _.elements[4],
                                        h.__data[6] = _.elements[5],
                                        h.__data[7] = 0,
                                        h.__data[8] = _.elements[6],
                                        h.__data[9] = _.elements[7],
                                        h.__data[10] = _.elements[8],
                                        h.__data[11] = 0) : (_.toArray(h.__data, v),
                                        v += y.storage / Float32Array.BYTES_PER_ELEMENT)
                                    }
                                    e.bufferSubData(e.UNIFORM_BUFFER, p, h.__data)
                                }
                            }
                        e.bindBuffer(e.UNIFORM_BUFFER, null)
                    }(n),
                    a[n.id] = p)
                },
                dispose: function() {
                    for (var t in i)
                        e.deleteBuffer(i[t]);
                    o = [],
                    i = {},
                    a = {}
                }
            }
        }
        var Pl = function() {
            function e() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                _(this, e);
                var n, r = t.canvas, a = void 0 === r ? Mt() : r, s = t.context, l = void 0 === s ? null : s, u = t.depth, c = void 0 === u || u, d = t.stencil, f = void 0 !== d && d, h = t.alpha, p = void 0 !== h && h, m = t.antialias, v = void 0 !== m && m, g = t.premultipliedAlpha, y = void 0 === g || g, x = t.preserveDrawingBuffer, b = void 0 !== x && x, S = t.powerPreference, M = void 0 === S ? "default" : S, E = t.failIfMajorPerformanceCaveat, T = void 0 !== E && E, w = t.reverseDepthBuffer, R = void 0 !== w && w;
                if (this.isWebGLRenderer = !0,
                null !== l) {
                    if ("undefined" !== typeof WebGLRenderingContext && l instanceof WebGLRenderingContext)
                        throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");
                    n = l.getContextAttributes().alpha
                } else
                    n = p;
                var C = new Uint32Array(4)
                  , k = new Int32Array(4)
                  , P = null
                  , L = null
                  , U = []
                  , D = [];
                this.domElement = a,
                this.debug = {
                    checkShaderErrors: !0,
                    onShaderError: null
                },
                this.autoClear = !0,
                this.autoClearColor = !0,
                this.autoClearDepth = !0,
                this.autoClearStencil = !0,
                this.sortObjects = !0,
                this.clippingPlanes = [],
                this.localClippingEnabled = !1,
                this._outputColorSpace = Qe,
                this.toneMapping = 0,
                this.toneMappingExposure = 1;
                var N = this
                  , I = !1
                  , O = 0
                  , F = 0
                  , z = null
                  , B = -1
                  , G = null
                  , W = new Ht
                  , j = new Ht
                  , Y = null
                  , $ = new gr(0)
                  , ee = 0
                  , te = a.width
                  , ne = a.height
                  , re = 1
                  , ie = null
                  , ae = null
                  , oe = new Ht(0,0,te,ne)
                  , se = new Ht(0,0,te,ne)
                  , ue = !1
                  , fe = new Ii
                  , he = !1
                  , pe = !1;
                this.transmissionResolutionScale = 1;
                var me = new Tn
                  , ve = new Tn
                  , ge = new Yt
                  , _e = new Ht
                  , ye = {
                    background: null,
                    fog: null,
                    environment: null,
                    overrideMaterial: null,
                    isScene: !0
                }
                  , xe = !1;
                function be() {
                    return null === z ? re : 1
                }
                var Se, Me, Ee, Te, we, Ae, Re, Ce, ke, Pe, Le, Ue, De, Ne, Ie, Oe, Fe, ze, Be, Ve, He, Ge, We, Xe, je = l;
                function qe(e, t) {
                    return a.getContext(e, t)
                }
                try {
                    var Ye = {
                        alpha: !0,
                        depth: c,
                        stencil: f,
                        antialias: v,
                        premultipliedAlpha: y,
                        preserveDrawingBuffer: b,
                        powerPreference: M,
                        failIfMajorPerformanceCaveat: T
                    };
                    if ("setAttribute"in a && a.setAttribute("data-engine", "three.js r".concat(A)),
                    a.addEventListener("webglcontextlost", et, !1),
                    a.addEventListener("webglcontextrestored", tt, !1),
                    a.addEventListener("webglcontextcreationerror", nt, !1),
                    null === je) {
                        var Ke = "webgl2";
                        if (null === (je = qe(Ke, Ye)))
                            throw qe(Ke) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.")
                    }
                } catch (Pt) {
                    throw console.error("THREE.WebGLRenderer: " + Pt.message),
                    Pt
                }
                function Ze() {
                    (Se = new wo(je)).init(),
                    Ge = new Sl(je,Se),
                    Me = new ao(je,Se,t,Ge),
                    Ee = new xl(je,Se),
                    Me.reverseDepthBuffer && R && Ee.buffers.depth.setReversed(!0),
                    Te = new Co(je),
                    we = new sl,
                    Ae = new bl(je,Se,Ee,we,Me,Ge,Te),
                    Re = new so(N),
                    Ce = new To(N),
                    ke = new Ka(je),
                    We = new ro(je,ke),
                    Pe = new Ao(je,ke,Te,We),
                    Le = new Po(je,Pe,ke,Te),
                    Be = new ko(je,Me,Ae),
                    Oe = new oo(we),
                    Ue = new ol(N,Re,Ce,Se,Me,We,Oe),
                    De = new Cl(N,we),
                    Ne = new dl,
                    Ie = new gl(Se),
                    ze = new no(N,Re,Ce,Ee,Le,n,y),
                    Fe = new _l(N,Le,Me),
                    Xe = new kl(je,Te,Me,Ee),
                    Ve = new io(je,Se,Te),
                    He = new Ro(je,Se,Te),
                    Te.programs = Ue.programs,
                    N.capabilities = Me,
                    N.extensions = Se,
                    N.properties = we,
                    N.renderLists = Ne,
                    N.shadowMap = Fe,
                    N.state = Ee,
                    N.info = Te
                }
                Ze();
                var $e = new wl(N,je);
                function et(e) {
                    e.preventDefault(),
                    console.log("THREE.WebGLRenderer: Context Lost."),
                    I = !0
                }
                function tt() {
                    console.log("THREE.WebGLRenderer: Context Restored."),
                    I = !1;
                    var e = Te.autoReset
                      , t = Fe.enabled
                      , n = Fe.autoUpdate
                      , r = Fe.needsUpdate
                      , i = Fe.type;
                    Ze(),
                    Te.autoReset = e,
                    Fe.enabled = t,
                    Fe.autoUpdate = n,
                    Fe.needsUpdate = r,
                    Fe.type = i
                }
                function nt(e) {
                    console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ", e.statusMessage)
                }
                function rt(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", rt),
                    it(t)
                }
                function it(e) {
                    at(e),
                    we.remove(e)
                }
                function at(e) {
                    var t = we.get(e).programs;
                    void 0 !== t && (t.forEach((function(e) {
                        Ue.releaseProgram(e)
                    }
                    )),
                    e.isShaderMaterial && Ue.releaseShaderCache(e))
                }
                function ot(e, t, n) {
                    !0 === e.transparent && 2 === e.side && !1 === e.forceSinglePass ? (e.side = 1,
                    e.needsUpdate = !0,
                    gt(e, t, n),
                    e.side = 0,
                    e.needsUpdate = !0,
                    gt(e, t, n),
                    e.side = 2) : gt(e, t, n)
                }
                this.xr = $e,
                this.getContext = function() {
                    return je
                }
                ,
                this.getContextAttributes = function() {
                    return je.getContextAttributes()
                }
                ,
                this.forceContextLoss = function() {
                    var e = Se.get("WEBGL_lose_context");
                    e && e.loseContext()
                }
                ,
                this.forceContextRestore = function() {
                    var e = Se.get("WEBGL_lose_context");
                    e && e.restoreContext()
                }
                ,
                this.getPixelRatio = function() {
                    return re
                }
                ,
                this.setPixelRatio = function(e) {
                    void 0 !== e && (re = e,
                    this.setSize(te, ne, !1))
                }
                ,
                this.getSize = function(e) {
                    return e.set(te, ne)
                }
                ,
                this.setSize = function(e, t) {
                    var n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                    $e.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (te = e,
                    ne = t,
                    a.width = Math.floor(e * re),
                    a.height = Math.floor(t * re),
                    !0 === n && (a.style.width = e + "px",
                    a.style.height = t + "px"),
                    this.setViewport(0, 0, e, t))
                }
                ,
                this.getDrawingBufferSize = function(e) {
                    return e.set(te * re, ne * re).floor()
                }
                ,
                this.setDrawingBufferSize = function(e, t, n) {
                    te = e,
                    ne = t,
                    re = n,
                    a.width = Math.floor(e * n),
                    a.height = Math.floor(t * n),
                    this.setViewport(0, 0, e, t)
                }
                ,
                this.getCurrentViewport = function(e) {
                    return e.copy(W)
                }
                ,
                this.getViewport = function(e) {
                    return e.copy(oe)
                }
                ,
                this.setViewport = function(e, t, n, r) {
                    e.isVector4 ? oe.set(e.x, e.y, e.z, e.w) : oe.set(e, t, n, r),
                    Ee.viewport(W.copy(oe).multiplyScalar(re).round())
                }
                ,
                this.getScissor = function(e) {
                    return e.copy(se)
                }
                ,
                this.setScissor = function(e, t, n, r) {
                    e.isVector4 ? se.set(e.x, e.y, e.z, e.w) : se.set(e, t, n, r),
                    Ee.scissor(j.copy(se).multiplyScalar(re).round())
                }
                ,
                this.getScissorTest = function() {
                    return ue
                }
                ,
                this.setScissorTest = function(e) {
                    Ee.setScissorTest(ue = e)
                }
                ,
                this.setOpaqueSort = function(e) {
                    ie = e
                }
                ,
                this.setTransparentSort = function(e) {
                    ae = e
                }
                ,
                this.getClearColor = function(e) {
                    return e.copy(ze.getClearColor())
                }
                ,
                this.setClearColor = function() {
                    ze.setClearColor.apply(ze, arguments)
                }
                ,
                this.getClearAlpha = function() {
                    return ze.getClearAlpha()
                }
                ,
                this.setClearAlpha = function() {
                    ze.setClearAlpha.apply(ze, arguments)
                }
                ,
                this.clear = function() {
                    var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]
                      , t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1]
                      , n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
                      , r = 0;
                    if (e) {
                        var i = !1;
                        if (null !== z) {
                            var a = z.texture.format;
                            i = a === de || a === ce || a === le
                        }
                        if (i) {
                            var o = z.texture.type
                              , s = o === H || o === q || o === X || o === J || o === Z || o === Q
                              , l = ze.getClearColor()
                              , u = ze.getClearAlpha()
                              , c = l.r
                              , d = l.g
                              , f = l.b;
                            s ? (C[0] = c,
                            C[1] = d,
                            C[2] = f,
                            C[3] = u,
                            je.clearBufferuiv(je.COLOR, 0, C)) : (k[0] = c,
                            k[1] = d,
                            k[2] = f,
                            k[3] = u,
                            je.clearBufferiv(je.COLOR, 0, k))
                        } else
                            r |= je.COLOR_BUFFER_BIT
                    }
                    t && (r |= je.DEPTH_BUFFER_BIT),
                    n && (r |= je.STENCIL_BUFFER_BIT,
                    this.state.buffers.stencil.setMask(4294967295)),
                    je.clear(r)
                }
                ,
                this.clearColor = function() {
                    this.clear(!0, !1, !1)
                }
                ,
                this.clearDepth = function() {
                    this.clear(!1, !0, !1)
                }
                ,
                this.clearStencil = function() {
                    this.clear(!1, !1, !0)
                }
                ,
                this.dispose = function() {
                    a.removeEventListener("webglcontextlost", et, !1),
                    a.removeEventListener("webglcontextrestored", tt, !1),
                    a.removeEventListener("webglcontextcreationerror", nt, !1),
                    ze.dispose(),
                    Ne.dispose(),
                    Ie.dispose(),
                    we.dispose(),
                    Re.dispose(),
                    Ce.dispose(),
                    Le.dispose(),
                    We.dispose(),
                    Xe.dispose(),
                    Ue.dispose(),
                    $e.dispose(),
                    $e.removeEventListener("sessionstart", ut),
                    $e.removeEventListener("sessionend", ct),
                    dt.stop()
                }
                ,
                this.renderBufferDirect = function(e, t, n, r, i, a) {
                    null === t && (t = ye);
                    var o = i.isMesh && i.matrixWorld.determinant() < 0
                      , s = xt(e, t, n, r, i);
                    Ee.setMaterial(r, o);
                    var l = n.index
                      , u = 1;
                    if (!0 === r.wireframe) {
                        if (void 0 === (l = Pe.getWireframeAttribute(n)))
                            return;
                        u = 2
                    }
                    var c = n.drawRange
                      , d = n.attributes.position
                      , f = c.start * u
                      , h = (c.start + c.count) * u;
                    null !== a && (f = Math.max(f, a.start * u),
                    h = Math.min(h, (a.start + a.count) * u)),
                    null !== l ? (f = Math.max(f, 0),
                    h = Math.min(h, l.count)) : void 0 !== d && null !== d && (f = Math.max(f, 0),
                    h = Math.min(h, d.count));
                    var p = h - f;
                    if (!(p < 0 || p === 1 / 0)) {
                        var m;
                        We.setup(i, r, s, n, l);
                        var v = Ve;
                        if (null !== l && (m = ke.get(l),
                        (v = He).setIndex(m)),
                        i.isMesh)
                            !0 === r.wireframe ? (Ee.setLineWidth(r.wireframeLinewidth * be()),
                            v.setMode(je.LINES)) : v.setMode(je.TRIANGLES);
                        else if (i.isLine) {
                            var g = r.linewidth;
                            void 0 === g && (g = 1),
                            Ee.setLineWidth(g * be()),
                            i.isLineSegments ? v.setMode(je.LINES) : i.isLineLoop ? v.setMode(je.LINE_LOOP) : v.setMode(je.LINE_STRIP)
                        } else
                            i.isPoints ? v.setMode(je.POINTS) : i.isSprite && v.setMode(je.TRIANGLES);
                        if (i.isBatchedMesh)
                            if (null !== i._multiDrawInstances)
                                v.renderMultiDrawInstances(i._multiDrawStarts, i._multiDrawCounts, i._multiDrawCount, i._multiDrawInstances);
                            else if (Se.get("WEBGL_multi_draw"))
                                v.renderMultiDraw(i._multiDrawStarts, i._multiDrawCounts, i._multiDrawCount);
                            else
                                for (var _ = i._multiDrawStarts, y = i._multiDrawCounts, x = i._multiDrawCount, b = l ? ke.get(l).bytesPerElement : 1, S = we.get(r).currentProgram.getUniforms(), M = 0; M < x; M++)
                                    S.setValue(je, "_gl_DrawID", M),
                                    v.render(_[M] / b, y[M]);
                        else if (i.isInstancedMesh)
                            v.renderInstances(f, p, i.count);
                        else if (n.isInstancedBufferGeometry) {
                            var E = void 0 !== n._maxInstanceCount ? n._maxInstanceCount : 1 / 0
                              , T = Math.min(n.instanceCount, E);
                            v.renderInstances(f, p, T)
                        } else
                            v.render(f, p)
                    }
                }
                ,
                this.compile = function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                    null === n && (n = e),
                    (L = Ie.get(n)).init(t),
                    D.push(L),
                    n.traverseVisible((function(e) {
                        e.isLight && e.layers.test(t.layers) && (L.pushLight(e),
                        e.castShadow && L.pushShadow(e))
                    }
                    )),
                    e !== n && e.traverseVisible((function(e) {
                        e.isLight && e.layers.test(t.layers) && (L.pushLight(e),
                        e.castShadow && L.pushShadow(e))
                    }
                    )),
                    L.setupLights();
                    var r = new Set;
                    return e.traverse((function(e) {
                        if (e.isMesh || e.isPoints || e.isLine || e.isSprite) {
                            var t = e.material;
                            if (t)
                                if (Array.isArray(t))
                                    for (var i = 0; i < t.length; i++) {
                                        var a = t[i];
                                        ot(a, n, e),
                                        r.add(a)
                                    }
                                else
                                    ot(t, n, e),
                                    r.add(t)
                        }
                    }
                    )),
                    D.pop(),
                    L = null,
                    r
                }
                ,
                this.compileAsync = function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                      , r = this.compile(e, t, n);
                    return new Promise((function(t) {
                        function n() {
                            r.forEach((function(e) {
                                we.get(e).currentProgram.isReady() && r.delete(e)
                            }
                            )),
                            0 !== r.size ? setTimeout(n, 10) : t(e)
                        }
                        null !== Se.get("KHR_parallel_shader_compile") ? n() : setTimeout(n, 10)
                    }
                    ))
                }
                ;
                var st = null;
                function lt(e) {
                    st && st(e)
                }
                function ut() {
                    dt.stop()
                }
                function ct() {
                    dt.start()
                }
                var dt = new Ya;
                function ft(e, t, n, r) {
                    if (!1 !== e.visible) {
                        if (e.layers.test(t.layers))
                            if (e.isGroup)
                                n = e.renderOrder;
                            else if (e.isLOD)
                                !0 === e.autoUpdate && e.update(t);
                            else if (e.isLight)
                                L.pushLight(e),
                                e.castShadow && L.pushShadow(e);
                            else if (e.isSprite) {
                                if (!e.frustumCulled || fe.intersectsSprite(e)) {
                                    r && _e.setFromMatrixPosition(e.matrixWorld).applyMatrix4(ve);
                                    var i = Le.update(e)
                                      , a = e.material;
                                    a.visible && P.push(e, i, a, n, _e.z, null)
                                }
                            } else if ((e.isMesh || e.isLine || e.isPoints) && (!e.frustumCulled || fe.intersectsObject(e))) {
                                var o = Le.update(e)
                                  , s = e.material;
                                if (r && (void 0 !== e.boundingSphere ? (null === e.boundingSphere && e.computeBoundingSphere(),
                                _e.copy(e.boundingSphere.center)) : (null === o.boundingSphere && o.computeBoundingSphere(),
                                _e.copy(o.boundingSphere.center)),
                                _e.applyMatrix4(e.matrixWorld).applyMatrix4(ve)),
                                Array.isArray(s))
                                    for (var l = o.groups, u = 0, c = l.length; u < c; u++) {
                                        var d = l[u]
                                          , f = s[d.materialIndex];
                                        f && f.visible && P.push(e, o, f, n, _e.z, d)
                                    }
                                else
                                    s.visible && P.push(e, o, s, n, _e.z, null)
                            }
                        for (var h = e.children, p = 0, m = h.length; p < m; p++)
                            ft(h[p], t, n, r)
                    }
                }
                function ht(e, t, n, r) {
                    var i = e.opaque
                      , a = e.transmissive
                      , o = e.transparent;
                    L.setupLightsView(n),
                    !0 === he && Oe.setGlobalState(N.clippingPlanes, n),
                    r && Ee.viewport(W.copy(r)),
                    i.length > 0 && mt(i, t, n),
                    a.length > 0 && mt(a, t, n),
                    o.length > 0 && mt(o, t, n),
                    Ee.buffers.depth.setTest(!0),
                    Ee.buffers.depth.setMask(!0),
                    Ee.buffers.color.setMask(!0),
                    Ee.setPolygonOffset(!1)
                }
                function pt(e, t, n, r) {
                    if (null === (!0 === n.isScene ? n.overrideMaterial : null)) {
                        void 0 === L.state.transmissionRenderTarget[r.id] && (L.state.transmissionRenderTarget[r.id] = new Wt(1,1,{
                            generateMipmaps: !0,
                            type: Se.has("EXT_color_buffer_half_float") || Se.has("EXT_color_buffer_float") ? K : H,
                            minFilter: V,
                            samples: 4,
                            stencilBuffer: f,
                            resolveDepthBuffer: !1,
                            resolveStencilBuffer: !1,
                            colorSpace: Ut.workingColorSpace
                        }));
                        var i = L.state.transmissionRenderTarget[r.id]
                          , a = r.viewport || W;
                        i.setSize(a.z * N.transmissionResolutionScale, a.w * N.transmissionResolutionScale);
                        var o = N.getRenderTarget();
                        N.setRenderTarget(i),
                        N.getClearColor($),
                        (ee = N.getClearAlpha()) < 1 && N.setClearColor(16777215, .5),
                        N.clear(),
                        xe && ze.render(n);
                        var s = N.toneMapping;
                        N.toneMapping = 0;
                        var l = r.viewport;
                        if (void 0 !== r.viewport && (r.viewport = void 0),
                        L.setupLightsView(r),
                        !0 === he && Oe.setGlobalState(N.clippingPlanes, r),
                        mt(e, n, r),
                        Ae.updateMultisampleRenderTarget(i),
                        Ae.updateRenderTargetMipmap(i),
                        !1 === Se.has("WEBGL_multisampled_render_to_texture")) {
                            for (var u = !1, c = 0, d = t.length; c < d; c++) {
                                var h = t[c]
                                  , p = h.object
                                  , m = h.geometry
                                  , v = h.material
                                  , g = h.group;
                                if (2 === v.side && p.layers.test(r.layers)) {
                                    var _ = v.side;
                                    v.side = 1,
                                    v.needsUpdate = !0,
                                    vt(p, n, r, m, v, g),
                                    v.side = _,
                                    v.needsUpdate = !0,
                                    u = !0
                                }
                            }
                            !0 === u && (Ae.updateMultisampleRenderTarget(i),
                            Ae.updateRenderTargetMipmap(i))
                        }
                        N.setRenderTarget(o),
                        N.setClearColor($, ee),
                        void 0 !== l && (r.viewport = l),
                        N.toneMapping = s
                    }
                }
                function mt(e, t, n) {
                    for (var r = !0 === t.isScene ? t.overrideMaterial : null, i = 0, a = e.length; i < a; i++) {
                        var o = e[i]
                          , s = o.object
                          , l = o.geometry
                          , u = null === r ? o.material : r
                          , c = o.group;
                        s.layers.test(n.layers) && vt(s, t, n, l, u, c)
                    }
                }
                function vt(e, t, n, r, i, a) {
                    e.onBeforeRender(N, t, n, r, i, a),
                    e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld),
                    e.normalMatrix.getNormalMatrix(e.modelViewMatrix),
                    i.onBeforeRender(N, t, n, r, e, a),
                    !0 === i.transparent && 2 === i.side && !1 === i.forceSinglePass ? (i.side = 1,
                    i.needsUpdate = !0,
                    N.renderBufferDirect(n, t, r, i, e, a),
                    i.side = 0,
                    i.needsUpdate = !0,
                    N.renderBufferDirect(n, t, r, i, e, a),
                    i.side = 2) : N.renderBufferDirect(n, t, r, i, e, a),
                    e.onAfterRender(N, t, n, r, i, a)
                }
                function gt(e, t, n) {
                    !0 !== t.isScene && (t = ye);
                    var r = we.get(e)
                      , i = L.state.lights
                      , a = L.state.shadowsArray
                      , o = i.state.version
                      , s = Ue.getParameters(e, i.state, a, t, n)
                      , l = Ue.getProgramCacheKey(s)
                      , u = r.programs;
                    r.environment = e.isMeshStandardMaterial ? t.environment : null,
                    r.fog = t.fog,
                    r.envMap = (e.isMeshStandardMaterial ? Ce : Re).get(e.envMap || r.environment),
                    r.envMapRotation = null !== r.environment && null === e.envMap ? t.environmentRotation : e.envMapRotation,
                    void 0 === u && (e.addEventListener("dispose", rt),
                    u = new Map,
                    r.programs = u);
                    var c = u.get(l);
                    if (void 0 !== c) {
                        if (r.currentProgram === c && r.lightsStateVersion === o)
                            return yt(e, s),
                            c
                    } else
                        s.uniforms = Ue.getUniforms(e),
                        e.onBeforeCompile(s, N),
                        c = Ue.acquireProgram(s, l),
                        u.set(l, c),
                        r.uniforms = s.uniforms;
                    var d = r.uniforms;
                    return (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (d.clippingPlanes = Oe.uniform),
                    yt(e, s),
                    r.needsLights = St(e),
                    r.lightsStateVersion = o,
                    r.needsLights && (d.ambientLightColor.value = i.state.ambient,
                    d.lightProbe.value = i.state.probe,
                    d.directionalLights.value = i.state.directional,
                    d.directionalLightShadows.value = i.state.directionalShadow,
                    d.spotLights.value = i.state.spot,
                    d.spotLightShadows.value = i.state.spotShadow,
                    d.rectAreaLights.value = i.state.rectArea,
                    d.ltc_1.value = i.state.rectAreaLTC1,
                    d.ltc_2.value = i.state.rectAreaLTC2,
                    d.pointLights.value = i.state.point,
                    d.pointLightShadows.value = i.state.pointShadow,
                    d.hemisphereLights.value = i.state.hemi,
                    d.directionalShadowMap.value = i.state.directionalShadowMap,
                    d.directionalShadowMatrix.value = i.state.directionalShadowMatrix,
                    d.spotShadowMap.value = i.state.spotShadowMap,
                    d.spotLightMatrix.value = i.state.spotLightMatrix,
                    d.spotLightMap.value = i.state.spotLightMap,
                    d.pointShadowMap.value = i.state.pointShadowMap,
                    d.pointShadowMatrix.value = i.state.pointShadowMatrix),
                    r.currentProgram = c,
                    r.uniformsList = null,
                    c
                }
                function _t(e) {
                    if (null === e.uniformsList) {
                        var t = e.currentProgram.getUniforms();
                        e.uniformsList = Is.seqWithValue(t.seq, e.uniforms)
                    }
                    return e.uniformsList
                }
                function yt(e, t) {
                    var n = we.get(e);
                    n.outputColorSpace = t.outputColorSpace,
                    n.batching = t.batching,
                    n.batchingColor = t.batchingColor,
                    n.instancing = t.instancing,
                    n.instancingColor = t.instancingColor,
                    n.instancingMorph = t.instancingMorph,
                    n.skinning = t.skinning,
                    n.morphTargets = t.morphTargets,
                    n.morphNormals = t.morphNormals,
                    n.morphColors = t.morphColors,
                    n.morphTargetsCount = t.morphTargetsCount,
                    n.numClippingPlanes = t.numClippingPlanes,
                    n.numIntersection = t.numClipIntersection,
                    n.vertexAlphas = t.vertexAlphas,
                    n.vertexTangents = t.vertexTangents,
                    n.toneMapping = t.toneMapping
                }
                function xt(e, t, n, r, i) {
                    !0 !== t.isScene && (t = ye),
                    Ae.resetTextureUnits();
                    var a = t.fog
                      , o = r.isMeshStandardMaterial ? t.environment : null
                      , s = null === z ? N.outputColorSpace : !0 === z.isXRRenderTarget ? z.texture.colorSpace : Je
                      , l = (r.isMeshStandardMaterial ? Ce : Re).get(r.envMap || o)
                      , u = !0 === r.vertexColors && !!n.attributes.color && 4 === n.attributes.color.itemSize
                      , c = !!n.attributes.tangent && (!!r.normalMap || r.anisotropy > 0)
                      , d = !!n.morphAttributes.position
                      , f = !!n.morphAttributes.normal
                      , h = !!n.morphAttributes.color
                      , p = 0;
                    r.toneMapped && (null !== z && !0 !== z.isXRRenderTarget || (p = N.toneMapping));
                    var m = n.morphAttributes.position || n.morphAttributes.normal || n.morphAttributes.color
                      , v = void 0 !== m ? m.length : 0
                      , g = we.get(r)
                      , _ = L.state.lights;
                    if (!0 === he && (!0 === pe || e !== G)) {
                        var y = e === G && r.id === B;
                        Oe.setState(r, e, y)
                    }
                    var x = !1;
                    r.version === g.__version ? g.needsLights && g.lightsStateVersion !== _.state.version || g.outputColorSpace !== s || i.isBatchedMesh && !1 === g.batching ? x = !0 : i.isBatchedMesh || !0 !== g.batching ? i.isBatchedMesh && !0 === g.batchingColor && null === i.colorTexture || i.isBatchedMesh && !1 === g.batchingColor && null !== i.colorTexture || i.isInstancedMesh && !1 === g.instancing ? x = !0 : i.isInstancedMesh || !0 !== g.instancing ? i.isSkinnedMesh && !1 === g.skinning ? x = !0 : i.isSkinnedMesh || !0 !== g.skinning ? i.isInstancedMesh && !0 === g.instancingColor && null === i.instanceColor || i.isInstancedMesh && !1 === g.instancingColor && null !== i.instanceColor || i.isInstancedMesh && !0 === g.instancingMorph && null === i.morphTexture || i.isInstancedMesh && !1 === g.instancingMorph && null !== i.morphTexture || g.envMap !== l || !0 === r.fog && g.fog !== a ? x = !0 : void 0 === g.numClippingPlanes || g.numClippingPlanes === Oe.numPlanes && g.numIntersection === Oe.numIntersection ? (g.vertexAlphas !== u || g.vertexTangents !== c || g.morphTargets !== d || g.morphNormals !== f || g.morphColors !== h || g.toneMapping !== p || g.morphTargetsCount !== v) && (x = !0) : x = !0 : x = !0 : x = !0 : x = !0 : (x = !0,
                    g.__version = r.version);
                    var b = g.currentProgram;
                    !0 === x && (b = gt(r, t, i));
                    var S = !1
                      , M = !1
                      , E = !1
                      , T = b.getUniforms()
                      , w = g.uniforms;
                    if (Ee.useProgram(b.program) && (S = !0,
                    M = !0,
                    E = !0),
                    r.id !== B && (B = r.id,
                    M = !0),
                    S || G !== e) {
                        Ee.buffers.depth.getReversed() ? (me.copy(e.projectionMatrix),
                        At(me),
                        Rt(me),
                        T.setValue(je, "projectionMatrix", me)) : T.setValue(je, "projectionMatrix", e.projectionMatrix),
                        T.setValue(je, "viewMatrix", e.matrixWorldInverse);
                        var A = T.map.cameraPosition;
                        void 0 !== A && A.setValue(je, ge.setFromMatrixPosition(e.matrixWorld)),
                        Me.logarithmicDepthBuffer && T.setValue(je, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)),
                        (r.isMeshPhongMaterial || r.isMeshToonMaterial || r.isMeshLambertMaterial || r.isMeshBasicMaterial || r.isMeshStandardMaterial || r.isShaderMaterial) && T.setValue(je, "isOrthographic", !0 === e.isOrthographicCamera),
                        G !== e && (G = e,
                        M = !0,
                        E = !0)
                    }
                    if (i.isSkinnedMesh) {
                        T.setOptional(je, i, "bindMatrix"),
                        T.setOptional(je, i, "bindMatrixInverse");
                        var R = i.skeleton;
                        R && (null === R.boneTexture && R.computeBoneTexture(),
                        T.setValue(je, "boneTexture", R.boneTexture, Ae))
                    }
                    i.isBatchedMesh && (T.setOptional(je, i, "batchingTexture"),
                    T.setValue(je, "batchingTexture", i._matricesTexture, Ae),
                    T.setOptional(je, i, "batchingIdTexture"),
                    T.setValue(je, "batchingIdTexture", i._indirectTexture, Ae),
                    T.setOptional(je, i, "batchingColorTexture"),
                    null !== i._colorsTexture && T.setValue(je, "batchingColorTexture", i._colorsTexture, Ae));
                    var C = n.morphAttributes;
                    if (void 0 === C.position && void 0 === C.normal && void 0 === C.color || Be.update(i, n, b),
                    (M || g.receiveShadow !== i.receiveShadow) && (g.receiveShadow = i.receiveShadow,
                    T.setValue(je, "receiveShadow", i.receiveShadow)),
                    r.isMeshGouraudMaterial && null !== r.envMap && (w.envMap.value = l,
                    w.flipEnvMap.value = l.isCubeTexture && !1 === l.isRenderTargetTexture ? -1 : 1),
                    r.isMeshStandardMaterial && null === r.envMap && null !== t.environment && (w.envMapIntensity.value = t.environmentIntensity),
                    M && (T.setValue(je, "toneMappingExposure", N.toneMappingExposure),
                    g.needsLights && bt(w, E),
                    a && !0 === r.fog && De.refreshFogUniforms(w, a),
                    De.refreshMaterialUniforms(w, r, re, ne, L.state.transmissionRenderTarget[e.id]),
                    Is.upload(je, _t(g), w, Ae)),
                    r.isShaderMaterial && !0 === r.uniformsNeedUpdate && (Is.upload(je, _t(g), w, Ae),
                    r.uniformsNeedUpdate = !1),
                    r.isSpriteMaterial && T.setValue(je, "center", i.center),
                    T.setValue(je, "modelViewMatrix", i.modelViewMatrix),
                    T.setValue(je, "normalMatrix", i.normalMatrix),
                    T.setValue(je, "modelMatrix", i.matrixWorld),
                    r.isShaderMaterial || r.isRawShaderMaterial)
                        for (var k = r.uniformsGroups, P = 0, U = k.length; P < U; P++) {
                            var D = k[P];
                            Xe.update(D, b),
                            Xe.bind(D, b)
                        }
                    return b
                }
                function bt(e, t) {
                    e.ambientLightColor.needsUpdate = t,
                    e.lightProbe.needsUpdate = t,
                    e.directionalLights.needsUpdate = t,
                    e.directionalLightShadows.needsUpdate = t,
                    e.pointLights.needsUpdate = t,
                    e.pointLightShadows.needsUpdate = t,
                    e.spotLights.needsUpdate = t,
                    e.spotLightShadows.needsUpdate = t,
                    e.rectAreaLights.needsUpdate = t,
                    e.hemisphereLights.needsUpdate = t
                }
                function St(e) {
                    return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
                }
                dt.setAnimationLoop(lt),
                "undefined" !== typeof self && dt.setContext(self),
                this.setAnimationLoop = function(e) {
                    st = e,
                    $e.setAnimationLoop(e),
                    null === e ? dt.stop() : dt.start()
                }
                ,
                $e.addEventListener("sessionstart", ut),
                $e.addEventListener("sessionend", ct),
                this.render = function(e, t) {
                    if (void 0 === t || !0 === t.isCamera) {
                        if (!0 !== I) {
                            if (!0 === e.matrixWorldAutoUpdate && e.updateMatrixWorld(),
                            null === t.parent && !0 === t.matrixWorldAutoUpdate && t.updateMatrixWorld(),
                            !0 === $e.enabled && !0 === $e.isPresenting && (!0 === $e.cameraAutoUpdate && $e.updateCamera(t),
                            t = $e.getCamera()),
                            !0 === e.isScene && e.onBeforeRender(N, e, t, z),
                            (L = Ie.get(e, D.length)).init(t),
                            D.push(L),
                            ve.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
                            fe.setFromProjectionMatrix(ve),
                            pe = this.localClippingEnabled,
                            he = Oe.init(this.clippingPlanes, pe),
                            (P = Ne.get(e, U.length)).init(),
                            U.push(P),
                            !0 === $e.enabled && !0 === $e.isPresenting) {
                                var n = N.xr.getDepthSensingMesh();
                                null !== n && ft(n, t, -1 / 0, N.sortObjects)
                            }
                            ft(e, t, 0, N.sortObjects),
                            P.finish(),
                            !0 === N.sortObjects && P.sort(ie, ae),
                            (xe = !1 === $e.enabled || !1 === $e.isPresenting || !1 === $e.hasDepthSensing()) && ze.addToRenderList(P, e),
                            this.info.render.frame++,
                            !0 === he && Oe.beginShadows();
                            var r = L.state.shadowsArray;
                            Fe.render(r, e, t),
                            !0 === he && Oe.endShadows(),
                            !0 === this.info.autoReset && this.info.reset();
                            var i = P.opaque
                              , a = P.transmissive;
                            if (L.setupLights(),
                            t.isArrayCamera) {
                                var o = t.cameras;
                                if (a.length > 0)
                                    for (var s = 0, l = o.length; s < l; s++) {
                                        pt(i, a, e, o[s])
                                    }
                                xe && ze.render(e);
                                for (var u = 0, c = o.length; u < c; u++) {
                                    var d = o[u];
                                    ht(P, e, d, d.viewport)
                                }
                            } else
                                a.length > 0 && pt(i, a, e, t),
                                xe && ze.render(e),
                                ht(P, e, t);
                            null !== z && 0 === F && (Ae.updateMultisampleRenderTarget(z),
                            Ae.updateRenderTargetMipmap(z)),
                            !0 === e.isScene && e.onAfterRender(N, e, t),
                            We.resetDefaultState(),
                            B = -1,
                            G = null,
                            D.pop(),
                            D.length > 0 ? (L = D[D.length - 1],
                            !0 === he && Oe.setGlobalState(N.clippingPlanes, L.state.camera)) : L = null,
                            U.pop(),
                            P = U.length > 0 ? U[U.length - 1] : null
                        }
                    } else
                        console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
                }
                ,
                this.getActiveCubeFace = function() {
                    return O
                }
                ,
                this.getActiveMipmapLevel = function() {
                    return F
                }
                ,
                this.getRenderTarget = function() {
                    return z
                }
                ,
                this.setRenderTargetTextures = function(e, t, n) {
                    we.get(e.texture).__webglTexture = t,
                    we.get(e.depthTexture).__webglTexture = n;
                    var r = we.get(e);
                    r.__hasExternalTextures = !0,
                    r.__autoAllocateDepthBuffer = void 0 === n,
                    r.__autoAllocateDepthBuffer || !0 === Se.has("WEBGL_multisampled_render_to_texture") && (console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),
                    r.__useRenderToTexture = !1)
                }
                ,
                this.setRenderTargetFramebuffer = function(e, t) {
                    var n = we.get(e);
                    n.__webglFramebuffer = t,
                    n.__useDefaultFramebuffer = void 0 === t
                }
                ;
                var Et = je.createFramebuffer();
                this.setRenderTarget = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                      , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    z = e,
                    O = t,
                    F = n;
                    var r = !0
                      , i = null
                      , a = !1
                      , o = !1;
                    if (e) {
                        var s = we.get(e);
                        if (void 0 !== s.__useDefaultFramebuffer)
                            Ee.bindFramebuffer(je.FRAMEBUFFER, null),
                            r = !1;
                        else if (void 0 === s.__webglFramebuffer)
                            Ae.setupRenderTarget(e);
                        else if (s.__hasExternalTextures)
                            Ae.rebindTextures(e, we.get(e.texture).__webglTexture, we.get(e.depthTexture).__webglTexture);
                        else if (e.depthBuffer) {
                            var l = e.depthTexture;
                            if (s.__boundDepthTexture !== l) {
                                if (null !== l && we.has(l) && (e.width !== l.image.width || e.height !== l.image.height))
                                    throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");
                                Ae.setupDepthRenderbuffer(e)
                            }
                        }
                        var u = e.texture;
                        (u.isData3DTexture || u.isDataArrayTexture || u.isCompressedArrayTexture) && (o = !0);
                        var c = we.get(e).__webglFramebuffer;
                        e.isWebGLCubeRenderTarget ? (i = Array.isArray(c[t]) ? c[t][n] : c[t],
                        a = !0) : i = e.samples > 0 && !1 === Ae.useMultisampledRTT(e) ? we.get(e).__webglMultisampledFramebuffer : Array.isArray(c) ? c[n] : c,
                        W.copy(e.viewport),
                        j.copy(e.scissor),
                        Y = e.scissorTest
                    } else
                        W.copy(oe).multiplyScalar(re).floor(),
                        j.copy(se).multiplyScalar(re).floor(),
                        Y = ue;
                    0 !== n && (i = Et);
                    var d = Ee.bindFramebuffer(je.FRAMEBUFFER, i);
                    if (d && r && Ee.drawBuffers(e, i),
                    Ee.viewport(W),
                    Ee.scissor(j),
                    Ee.setScissorTest(Y),
                    a) {
                        var f = we.get(e.texture);
                        je.framebufferTexture2D(je.FRAMEBUFFER, je.COLOR_ATTACHMENT0, je.TEXTURE_CUBE_MAP_POSITIVE_X + t, f.__webglTexture, n)
                    } else if (o) {
                        var h = we.get(e.texture)
                          , p = t;
                        je.framebufferTextureLayer(je.FRAMEBUFFER, je.COLOR_ATTACHMENT0, h.__webglTexture, n, p)
                    } else if (null !== e && 0 !== n) {
                        var m = we.get(e.texture);
                        je.framebufferTexture2D(je.FRAMEBUFFER, je.COLOR_ATTACHMENT0, je.TEXTURE_2D, m.__webglTexture, n)
                    }
                    B = -1
                }
                ,
                this.readRenderTargetPixels = function(e, t, n, r, i, a, o) {
                    if (e && e.isWebGLRenderTarget) {
                        var s = we.get(e).__webglFramebuffer;
                        if (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]),
                        s) {
                            Ee.bindFramebuffer(je.FRAMEBUFFER, s);
                            try {
                                var l = e.texture
                                  , u = l.format
                                  , c = l.type;
                                if (!Me.textureFormatReadable(u))
                                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                                if (!Me.textureTypeReadable(c))
                                    return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                                t >= 0 && t <= e.width - r && n >= 0 && n <= e.height - i && je.readPixels(t, n, r, i, Ge.convert(u), Ge.convert(c), a)
                            } finally {
                                var d = null !== z ? we.get(z).__webglFramebuffer : null;
                                Ee.bindFramebuffer(je.FRAMEBUFFER, d)
                            }
                        }
                    } else
                        console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
                }
                ,
                this.readRenderTargetPixelsAsync = function() {
                    var e = o(i().mark((function e(t, n, r, a, o, s, l) {
                        var u, c, d, f, h, p, m;
                        return i().wrap((function(e) {
                            for (; ; )
                                switch (e.prev = e.next) {
                                case 0:
                                    if (t && t.isWebGLRenderTarget) {
                                        e.next = 2;
                                        break
                                    }
                                    throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");
                                case 2:
                                    if (u = we.get(t).__webglFramebuffer,
                                    t.isWebGLCubeRenderTarget && void 0 !== l && (u = u[l]),
                                    !u) {
                                        e.next = 32;
                                        break
                                    }
                                    if (c = t.texture,
                                    d = c.format,
                                    f = c.type,
                                    Me.textureFormatReadable(d)) {
                                        e.next = 10;
                                        break
                                    }
                                    throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");
                                case 10:
                                    if (Me.textureTypeReadable(f)) {
                                        e.next = 12;
                                        break
                                    }
                                    throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");
                                case 12:
                                    if (!(n >= 0 && n <= t.width - a && r >= 0 && r <= t.height - o)) {
                                        e.next = 31;
                                        break
                                    }
                                    return Ee.bindFramebuffer(je.FRAMEBUFFER, u),
                                    h = je.createBuffer(),
                                    je.bindBuffer(je.PIXEL_PACK_BUFFER, h),
                                    je.bufferData(je.PIXEL_PACK_BUFFER, s.byteLength, je.STREAM_READ),
                                    je.readPixels(n, r, a, o, Ge.convert(d), Ge.convert(f), 0),
                                    p = null !== z ? we.get(z).__webglFramebuffer : null,
                                    Ee.bindFramebuffer(je.FRAMEBUFFER, p),
                                    m = je.fenceSync(je.SYNC_GPU_COMMANDS_COMPLETE, 0),
                                    je.flush(),
                                    e.next = 24,
                                    wt(je, m, 4);
                                case 24:
                                    return je.bindBuffer(je.PIXEL_PACK_BUFFER, h),
                                    je.getBufferSubData(je.PIXEL_PACK_BUFFER, 0, s),
                                    je.deleteBuffer(h),
                                    je.deleteSync(m),
                                    e.abrupt("return", s);
                                case 31:
                                    throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.");
                                case 32:
                                case "end":
                                    return e.stop()
                                }
                        }
                        ), e)
                    }
                    )));
                    return function(t, n, r, i, a, o, s) {
                        return e.apply(this, arguments)
                    }
                }(),
                this.copyFramebufferToTexture = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
                      , n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    !0 !== e.isTexture && (Tt("WebGLRenderer: copyFramebufferToTexture function signature has changed."),
                    t = arguments[0] || null,
                    e = arguments[1]);
                    var r = Math.pow(2, -n)
                      , i = Math.floor(e.image.width * r)
                      , a = Math.floor(e.image.height * r)
                      , o = null !== t ? t.x : 0
                      , s = null !== t ? t.y : 0;
                    Ae.setTexture2D(e, 0),
                    je.copyTexSubImage2D(je.TEXTURE_2D, n, 0, 0, o, s, i, a),
                    Ee.unbindTexture()
                }
                ;
                var Ct = je.createFramebuffer()
                  , kt = je.createFramebuffer();
                this.copyTextureToTexture = function(e, t) {
                    var n, r, i, a, o, s, l, u, c, d = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, f = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, h = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, p = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null;
                    !0 !== e.isTexture && (Tt("WebGLRenderer: copyTextureToTexture function signature has changed."),
                    f = arguments[0] || null,
                    e = arguments[1],
                    t = arguments[2],
                    p = arguments[3] || 0,
                    d = null),
                    null === p && (0 !== h ? (Tt("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),
                    p = h,
                    h = 0) : p = 0);
                    var m = e.isCompressedTexture ? e.mipmaps[p] : e.image;
                    if (null !== d)
                        n = d.max.x - d.min.x,
                        r = d.max.y - d.min.y,
                        i = d.isBox3 ? d.max.z - d.min.z : 1,
                        a = d.min.x,
                        o = d.min.y,
                        s = d.isBox3 ? d.min.z : 0;
                    else {
                        var v = Math.pow(2, -h);
                        n = Math.floor(m.width * v),
                        r = Math.floor(m.height * v),
                        i = e.isDataArrayTexture ? m.depth : e.isData3DTexture ? Math.floor(m.depth * v) : 1,
                        a = 0,
                        o = 0,
                        s = 0
                    }
                    null !== f ? (l = f.x,
                    u = f.y,
                    c = f.z) : (l = 0,
                    u = 0,
                    c = 0);
                    var g, _ = Ge.convert(t.format), y = Ge.convert(t.type);
                    t.isData3DTexture ? (Ae.setTexture3D(t, 0),
                    g = je.TEXTURE_3D) : t.isDataArrayTexture || t.isCompressedArrayTexture ? (Ae.setTexture2DArray(t, 0),
                    g = je.TEXTURE_2D_ARRAY) : (Ae.setTexture2D(t, 0),
                    g = je.TEXTURE_2D),
                    je.pixelStorei(je.UNPACK_FLIP_Y_WEBGL, t.flipY),
                    je.pixelStorei(je.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultiplyAlpha),
                    je.pixelStorei(je.UNPACK_ALIGNMENT, t.unpackAlignment);
                    var x = je.getParameter(je.UNPACK_ROW_LENGTH)
                      , b = je.getParameter(je.UNPACK_IMAGE_HEIGHT)
                      , S = je.getParameter(je.UNPACK_SKIP_PIXELS)
                      , M = je.getParameter(je.UNPACK_SKIP_ROWS)
                      , E = je.getParameter(je.UNPACK_SKIP_IMAGES);
                    je.pixelStorei(je.UNPACK_ROW_LENGTH, m.width),
                    je.pixelStorei(je.UNPACK_IMAGE_HEIGHT, m.height),
                    je.pixelStorei(je.UNPACK_SKIP_PIXELS, a),
                    je.pixelStorei(je.UNPACK_SKIP_ROWS, o),
                    je.pixelStorei(je.UNPACK_SKIP_IMAGES, s);
                    var T = e.isDataArrayTexture || e.isData3DTexture
                      , w = t.isDataArrayTexture || t.isData3DTexture;
                    if (e.isDepthTexture) {
                        var A = we.get(e)
                          , R = we.get(t)
                          , C = we.get(A.__renderTarget)
                          , k = we.get(R.__renderTarget);
                        Ee.bindFramebuffer(je.READ_FRAMEBUFFER, C.__webglFramebuffer),
                        Ee.bindFramebuffer(je.DRAW_FRAMEBUFFER, k.__webglFramebuffer);
                        for (var P = 0; P < i; P++)
                            T && (je.framebufferTextureLayer(je.READ_FRAMEBUFFER, je.COLOR_ATTACHMENT0, we.get(e).__webglTexture, h, s + P),
                            je.framebufferTextureLayer(je.DRAW_FRAMEBUFFER, je.COLOR_ATTACHMENT0, we.get(t).__webglTexture, p, c + P)),
                            je.blitFramebuffer(a, o, n, r, l, u, n, r, je.DEPTH_BUFFER_BIT, je.NEAREST);
                        Ee.bindFramebuffer(je.READ_FRAMEBUFFER, null),
                        Ee.bindFramebuffer(je.DRAW_FRAMEBUFFER, null)
                    } else if (0 !== h || e.isRenderTargetTexture || we.has(e)) {
                        var L = we.get(e)
                          , U = we.get(t);
                        Ee.bindFramebuffer(je.READ_FRAMEBUFFER, Ct),
                        Ee.bindFramebuffer(je.DRAW_FRAMEBUFFER, kt);
                        for (var D = 0; D < i; D++)
                            T ? je.framebufferTextureLayer(je.READ_FRAMEBUFFER, je.COLOR_ATTACHMENT0, L.__webglTexture, h, s + D) : je.framebufferTexture2D(je.READ_FRAMEBUFFER, je.COLOR_ATTACHMENT0, je.TEXTURE_2D, L.__webglTexture, h),
                            w ? je.framebufferTextureLayer(je.DRAW_FRAMEBUFFER, je.COLOR_ATTACHMENT0, U.__webglTexture, p, c + D) : je.framebufferTexture2D(je.DRAW_FRAMEBUFFER, je.COLOR_ATTACHMENT0, je.TEXTURE_2D, U.__webglTexture, p),
                            0 !== h ? je.blitFramebuffer(a, o, n, r, l, u, n, r, je.COLOR_BUFFER_BIT, je.NEAREST) : w ? je.copyTexSubImage3D(g, p, l, u, c + D, a, o, n, r) : je.copyTexSubImage2D(g, p, l, u, a, o, n, r);
                        Ee.bindFramebuffer(je.READ_FRAMEBUFFER, null),
                        Ee.bindFramebuffer(je.DRAW_FRAMEBUFFER, null)
                    } else
                        w ? e.isDataTexture || e.isData3DTexture ? je.texSubImage3D(g, p, l, u, c, n, r, i, _, y, m.data) : t.isCompressedArrayTexture ? je.compressedTexSubImage3D(g, p, l, u, c, n, r, i, _, m.data) : je.texSubImage3D(g, p, l, u, c, n, r, i, _, y, m) : e.isDataTexture ? je.texSubImage2D(je.TEXTURE_2D, p, l, u, n, r, _, y, m.data) : e.isCompressedTexture ? je.compressedTexSubImage2D(je.TEXTURE_2D, p, l, u, m.width, m.height, _, m.data) : je.texSubImage2D(je.TEXTURE_2D, p, l, u, n, r, _, y, m);
                    je.pixelStorei(je.UNPACK_ROW_LENGTH, x),
                    je.pixelStorei(je.UNPACK_IMAGE_HEIGHT, b),
                    je.pixelStorei(je.UNPACK_SKIP_PIXELS, S),
                    je.pixelStorei(je.UNPACK_SKIP_ROWS, M),
                    je.pixelStorei(je.UNPACK_SKIP_IMAGES, E),
                    0 === p && t.generateMipmaps && je.generateMipmap(g),
                    Ee.unbindTexture()
                }
                ,
                this.copyTextureToTexture3D = function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                      , r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null
                      , i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                    return !0 !== e.isTexture && (Tt("WebGLRenderer: copyTextureToTexture3D function signature has changed."),
                    n = arguments[0] || null,
                    r = arguments[1] || null,
                    e = arguments[2],
                    t = arguments[3],
                    i = arguments[4] || 0),
                    Tt('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),
                    this.copyTextureToTexture(e, t, n, r, i)
                }
                ,
                this.initRenderTarget = function(e) {
                    void 0 === we.get(e).__webglFramebuffer && Ae.setupRenderTarget(e)
                }
                ,
                this.initTexture = function(e) {
                    e.isCubeTexture ? Ae.setTextureCube(e, 0) : e.isData3DTexture ? Ae.setTexture3D(e, 0) : e.isDataArrayTexture || e.isCompressedArrayTexture ? Ae.setTexture2DArray(e, 0) : Ae.setTexture2D(e, 0),
                    Ee.unbindTexture()
                }
                ,
                this.resetState = function() {
                    O = 0,
                    F = 0,
                    z = null,
                    Ee.reset(),
                    We.reset()
                }
                ,
                "undefined" !== typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{
                    detail: this
                }))
            }
            return x(e, [{
                key: "coordinateSystem",
                get: function() {
                    return it
                }
            }, {
                key: "outputColorSpace",
                get: function() {
                    return this._outputColorSpace
                },
                set: function(e) {
                    this._outputColorSpace = e;
                    var t = this.getContext();
                    t.drawingBufferColorspace = Ut._getDrawingBufferColorSpace(e),
                    t.unpackColorSpace = Ut._getUnpackColorSpace()
                }
            }]),
            e
        }()
          , Ll = n(166);
        var Ul = function() {
            return (0,
            Ll.jsxs)("div", {
                style: {
                    position: "absolute",
                    top: "10px",
                    left: "50%",
                    transform: "translateX(-50%)",
                    textAlign: "center",
                    fontFamily: "Cinzel, serif",
                    fontSize: "30px",
                    color: "#da0000",
                    textTransform: "uppercase",
                    letterSpacing: "2px",
                    textShadow: "\n        2px 2px 4px rgba(139, 0, 0, 0.7)  /* Dark red shadow for depth */\n      "
                },
                children: ["ETERNIFY", (0,
                Ll.jsx)("div", {
                    style: {
                        fontSize: "16px",
                        marginTop: "5px"
                    },
                    children: "YOVR MIND, ETERNAL"
                })]
            })
        }
          , Dl = n.p + "static/media/SongForTheUnificationOfEurope.d55f92af9e6995ee0e91.mp3";
        var Nl = function() {
            var t = M((0,
            e.useState)(!1), 2)
              , n = t[0]
              , r = t[1]
              , i = (0,
            e.useRef)(new Audio(Dl));
            return (0,
            e.useEffect)((function() {
                i.current.loop = !0
            }
            ), []),
            (0,
            Ll.jsx)("button", {
                onClick: function() {
                    n ? i.current.pause() : i.current.play(),
                    r(!n)
                },
                style: {
                    position: "fixed",
                    top: "10px",
                    right: "10px",
                    padding: "10px",
                    backgroundColor: "transparent",
                    color: "white",
                    border: "none",
                    borderRadius: "5px",
                    cursor: "pointer",
                    fontSize: "24px"
                },
                children: n ? "\ud83d\udd0a" : "\ud83d\udd07"
            })
        }
          , Il = n.p + "images/telegram.png"
          , Ol = n.p + "images/x.svg"
          , PPl = n.p + "images/aigentfi.jpg"
          , Fl = n.p + "images/dexscreener.svg";
        var zl = function() {
            var e = "36px";
            return (0,
            Ll.jsxs)("div", {
                style: {
                    position: "absolute",
                    bottom: "10px",
                    left: "50%",
                    transform: "translateX(-50%)",
                    fontFamily: "Cinzel, serif",
                    fontSize: "24px",
                    color: "#da0000",
                    textTransform: "uppercase",
                    letterSpacing: "2px",
                    display: "flex",
                    gap: "50px",
                    textShadow: "\n        2px 2px 4px rgba(139, 0, 0, 0.7)  /* Dark red shadow for depth */\n      "
                },
                children: [(0,
                Ll.jsx)("a", {
                    href: "https://x.com/EternifyDNA",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: (0,
                    Ll.jsx)("img", {
                        src: Ol,
                        alt: "Twitter",
                        style: {
                            width: e,
                            height: e,
                            cursor: "pointer"
                        }
                    })
                }), (0,
                Ll.jsx)("a", {
                    href: "https://t.me/EternifyDNA",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: (0,
                    Ll.jsx)("img", {
                        src: Il,
                        alt: "Telegram",
                        style: {
                            width: e,
                            height: e,
                            cursor: "pointer"
                        }
                    })
                }), (0,
                Ll.jsx)("a", {
                    href: "https://dexscreener.com",
                    target: "_blank",
                    rel: "noopener noreferrer",
                    children: (0,
                    Ll.jsx)("img", {
                        src: Fl,
                        alt: "Dex Screener",
                        style: {
                            width: e,
                            height: e,
                            cursor: "pointer"
                        }
                    })
                }), (0,
                    Ll.jsx)("a", {
                        href: "link_aigentfi",
                        target: "_blank",
                        rel: "noopener noreferrer",
                        children: (0,
                        Ll.jsx)("img", {
                            src: PPl,
                            alt: "Aigentfi",
                            style: {
                                width: e,
                                height: e,
                                cursor: "pointer"
                            }
                        })
                    })]
            })
        }
          , Bl = {
            name: "CopyShader",
            uniforms: {
                tDiffuse: {
                    value: null
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: "\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",
            fragmentShader: "\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}"
        }
          , Vl = function() {
            function e() {
                _(this, e),
                this.isPass = !0,
                this.enabled = !0,
                this.needsSwap = !0,
                this.clear = !1,
                this.renderToScreen = !1
            }
            return x(e, [{
                key: "setSize",
                value: function() {}
            }, {
                key: "render",
                value: function() {
                    console.error("THREE.Pass: .render() must be implemented in derived pass.")
                }
            }, {
                key: "dispose",
                value: function() {}
            }]),
            e
        }()
          , Hl = new Pa(-1,1,1,-1,0,1)
          , Gl = new (function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this)).setAttribute("position", new Ar([-1, 3, 0, -1, -1, 0, 3, -1, 0],3)),
                e.setAttribute("uv", new Ar([0, 2, 0, 0, 2, 0],2)),
                e
            }
            return x(n)
        }(Nr))
          , Wl = function() {
            function e(t) {
                _(this, e),
                this._mesh = new qr(Gl,t)
            }
            return x(e, [{
                key: "dispose",
                value: function() {
                    this._mesh.geometry.dispose()
                }
            }, {
                key: "render",
                value: function(e) {
                    e.render(this._mesh, Hl)
                }
            }, {
                key: "material",
                get: function() {
                    return this._mesh.material
                },
                set: function(e) {
                    this._mesh.material = e
                }
            }]),
            e
        }()
          , Xl = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r) {
                var i;
                return _(this, n),
                (i = t.call(this)).textureID = void 0 !== r ? r : "tDiffuse",
                e instanceof ti ? (i.uniforms = e.uniforms,
                i.material = e) : e && (i.uniforms = ei.clone(e.uniforms),
                i.material = new ti({
                    name: void 0 !== e.name ? e.name : "unspecified",
                    defines: Object.assign({}, e.defines),
                    uniforms: i.uniforms,
                    vertexShader: e.vertexShader,
                    fragmentShader: e.fragmentShader
                })),
                i.fsQuad = new Wl(i.material),
                i
            }
            return x(n, [{
                key: "render",
                value: function(e, t, n) {
                    this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = n.texture),
                    this.fsQuad.material = this.material,
                    this.renderToScreen ? (e.setRenderTarget(null),
                    this.fsQuad.render(e)) : (e.setRenderTarget(t),
                    this.clear && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
                    this.fsQuad.render(e))
                }
            }, {
                key: "dispose",
                value: function() {
                    this.material.dispose(),
                    this.fsQuad.dispose()
                }
            }]),
            n
        }(Vl)
          , jl = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r) {
                var i;
                return _(this, n),
                (i = t.call(this)).scene = e,
                i.camera = r,
                i.clear = !0,
                i.needsSwap = !1,
                i.inverse = !1,
                i
            }
            return x(n, [{
                key: "render",
                value: function(e, t, n) {
                    var r, i, a = e.getContext(), o = e.state;
                    o.buffers.color.setMask(!1),
                    o.buffers.depth.setMask(!1),
                    o.buffers.color.setLocked(!0),
                    o.buffers.depth.setLocked(!0),
                    this.inverse ? (r = 0,
                    i = 1) : (r = 1,
                    i = 0),
                    o.buffers.stencil.setTest(!0),
                    o.buffers.stencil.setOp(a.REPLACE, a.REPLACE, a.REPLACE),
                    o.buffers.stencil.setFunc(a.ALWAYS, r, 4294967295),
                    o.buffers.stencil.setClear(i),
                    o.buffers.stencil.setLocked(!0),
                    e.setRenderTarget(n),
                    this.clear && e.clear(),
                    e.render(this.scene, this.camera),
                    e.setRenderTarget(t),
                    this.clear && e.clear(),
                    e.render(this.scene, this.camera),
                    o.buffers.color.setLocked(!1),
                    o.buffers.depth.setLocked(!1),
                    o.buffers.color.setMask(!0),
                    o.buffers.depth.setMask(!0),
                    o.buffers.stencil.setLocked(!1),
                    o.buffers.stencil.setFunc(a.EQUAL, 1, 4294967295),
                    o.buffers.stencil.setOp(a.KEEP, a.KEEP, a.KEEP),
                    o.buffers.stencil.setLocked(!0)
                }
            }]),
            n
        }(Vl)
          , ql = function(e) {
            u(n, e);
            var t = h(n);
            function n() {
                var e;
                return _(this, n),
                (e = t.call(this)).needsSwap = !1,
                e
            }
            return x(n, [{
                key: "render",
                value: function(e) {
                    e.state.buffers.stencil.setLocked(!1),
                    e.state.buffers.stencil.setTest(!1)
                }
            }]),
            n
        }(Vl)
          , Yl = function() {
            function e(t, n) {
                if (_(this, e),
                this.renderer = t,
                this._pixelRatio = t.getPixelRatio(),
                void 0 === n) {
                    var r = t.getSize(new _t);
                    this._width = r.width,
                    this._height = r.height,
                    (n = new Wt(this._width * this._pixelRatio,this._height * this._pixelRatio,{
                        type: K
                    })).texture.name = "EffectComposer.rt1"
                } else
                    this._width = n.width,
                    this._height = n.height;
                this.renderTarget1 = n,
                this.renderTarget2 = n.clone(),
                this.renderTarget2.texture.name = "EffectComposer.rt2",
                this.writeBuffer = this.renderTarget1,
                this.readBuffer = this.renderTarget2,
                this.renderToScreen = !0,
                this.passes = [],
                this.copyPass = new Xl(Bl),
                this.copyPass.material.blending = 0,
                this.clock = new Ia
            }
            return x(e, [{
                key: "swapBuffers",
                value: function() {
                    var e = this.readBuffer;
                    this.readBuffer = this.writeBuffer,
                    this.writeBuffer = e
                }
            }, {
                key: "addPass",
                value: function(e) {
                    this.passes.push(e),
                    e.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio)
                }
            }, {
                key: "insertPass",
                value: function(e, t) {
                    this.passes.splice(t, 0, e),
                    e.setSize(this._width * this._pixelRatio, this._height * this._pixelRatio)
                }
            }, {
                key: "removePass",
                value: function(e) {
                    var t = this.passes.indexOf(e);
                    -1 !== t && this.passes.splice(t, 1)
                }
            }, {
                key: "isLastEnabledPass",
                value: function(e) {
                    for (var t = e + 1; t < this.passes.length; t++)
                        if (this.passes[t].enabled)
                            return !1;
                    return !0
                }
            }, {
                key: "render",
                value: function(e) {
                    void 0 === e && (e = this.clock.getDelta());
                    for (var t = this.renderer.getRenderTarget(), n = !1, r = 0, i = this.passes.length; r < i; r++) {
                        var a = this.passes[r];
                        if (!1 !== a.enabled) {
                            if (a.renderToScreen = this.renderToScreen && this.isLastEnabledPass(r),
                            a.render(this.renderer, this.writeBuffer, this.readBuffer, e, n),
                            a.needsSwap) {
                                if (n) {
                                    var o = this.renderer.getContext()
                                      , s = this.renderer.state.buffers.stencil;
                                    s.setFunc(o.NOTEQUAL, 1, 4294967295),
                                    this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, e),
                                    s.setFunc(o.EQUAL, 1, 4294967295)
                                }
                                this.swapBuffers()
                            }
                            void 0 !== jl && (a instanceof jl ? n = !0 : a instanceof ql && (n = !1))
                        }
                    }
                    this.renderer.setRenderTarget(t)
                }
            }, {
                key: "reset",
                value: function(e) {
                    if (void 0 === e) {
                        var t = this.renderer.getSize(new _t);
                        this._pixelRatio = this.renderer.getPixelRatio(),
                        this._width = t.width,
                        this._height = t.height,
                        (e = this.renderTarget1.clone()).setSize(this._width * this._pixelRatio, this._height * this._pixelRatio)
                    }
                    this.renderTarget1.dispose(),
                    this.renderTarget2.dispose(),
                    this.renderTarget1 = e,
                    this.renderTarget2 = e.clone(),
                    this.writeBuffer = this.renderTarget1,
                    this.readBuffer = this.renderTarget2
                }
            }, {
                key: "setSize",
                value: function(e, t) {
                    this._width = e,
                    this._height = t;
                    var n = this._width * this._pixelRatio
                      , r = this._height * this._pixelRatio;
                    this.renderTarget1.setSize(n, r),
                    this.renderTarget2.setSize(n, r);
                    for (var i = 0; i < this.passes.length; i++)
                        this.passes[i].setSize(n, r)
                }
            }, {
                key: "setPixelRatio",
                value: function(e) {
                    this._pixelRatio = e,
                    this.setSize(this._width, this._height)
                }
            }, {
                key: "dispose",
                value: function() {
                    this.renderTarget1.dispose(),
                    this.renderTarget2.dispose(),
                    this.copyPass.dispose()
                }
            }]),
            e
        }()
          , Kl = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r) {
                var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null;
                return _(this, n),
                (i = t.call(this)).scene = e,
                i.camera = r,
                i.overrideMaterial = a,
                i.clearColor = o,
                i.clearAlpha = s,
                i.clear = !0,
                i.clearDepth = !1,
                i.needsSwap = !1,
                i._oldClearColor = new gr,
                i
            }
            return x(n, [{
                key: "render",
                value: function(e, t, n) {
                    var r, i, a = e.autoClear;
                    e.autoClear = !1,
                    null !== this.overrideMaterial && (i = this.scene.overrideMaterial,
                    this.scene.overrideMaterial = this.overrideMaterial),
                    null !== this.clearColor && (e.getClearColor(this._oldClearColor),
                    e.setClearColor(this.clearColor, e.getClearAlpha())),
                    null !== this.clearAlpha && (r = e.getClearAlpha(),
                    e.setClearAlpha(this.clearAlpha)),
                    1 == this.clearDepth && e.clearDepth(),
                    e.setRenderTarget(this.renderToScreen ? null : n),
                    !0 === this.clear && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil),
                    e.render(this.scene, this.camera),
                    null !== this.clearColor && e.setClearColor(this._oldClearColor),
                    null !== this.clearAlpha && e.setClearAlpha(r),
                    null !== this.overrideMaterial && (this.scene.overrideMaterial = i),
                    e.autoClear = a
                }
            }]),
            n
        }(Vl)
          , Zl = {
            name: "LuminosityHighPassShader",
            shaderID: "luminosityHighPass",
            uniforms: {
                tDiffuse: {
                    value: null
                },
                luminosityThreshold: {
                    value: 1
                },
                smoothWidth: {
                    value: 1
                },
                defaultColor: {
                    value: new gr(0)
                },
                defaultOpacity: {
                    value: 0
                }
            },
            vertexShader: "\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}",
            fragmentShader: "\n\n\t\tuniform sampler2D tDiffuse;\n\t\tuniform vec3 defaultColor;\n\t\tuniform float defaultOpacity;\n\t\tuniform float luminosityThreshold;\n\t\tuniform float smoothWidth;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\n\t\t\tfloat v = luminance( texel.xyz );\n\n\t\t\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );\n\n\t\t\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\n\n\t\t\tgl_FragColor = mix( outputColor, texel, alpha );\n\n\t\t}"
        }
          , Ql = function(e) {
            u(n, e);
            var t = h(n);
            function n(e, r, i, a) {
                var o;
                _(this, n),
                (o = t.call(this)).strength = void 0 !== r ? r : 1,
                o.radius = i,
                o.threshold = a,
                o.resolution = void 0 !== e ? new _t(e.x,e.y) : new _t(256,256),
                o.clearColor = new gr(0,0,0),
                o.renderTargetsHorizontal = [],
                o.renderTargetsVertical = [],
                o.nMips = 5;
                var s = Math.round(o.resolution.x / 2)
                  , l = Math.round(o.resolution.y / 2);
                o.renderTargetBright = new Wt(s,l,{
                    type: K
                }),
                o.renderTargetBright.texture.name = "UnrealBloomPass.bright",
                o.renderTargetBright.texture.generateMipmaps = !1;
                for (var u = 0; u < o.nMips; u++) {
                    var c = new Wt(s,l,{
                        type: K
                    });
                    c.texture.name = "UnrealBloomPass.h" + u,
                    c.texture.generateMipmaps = !1,
                    o.renderTargetsHorizontal.push(c);
                    var d = new Wt(s,l,{
                        type: K
                    });
                    d.texture.name = "UnrealBloomPass.v" + u,
                    d.texture.generateMipmaps = !1,
                    o.renderTargetsVertical.push(d),
                    s = Math.round(s / 2),
                    l = Math.round(l / 2)
                }
                var f = Zl;
                o.highPassUniforms = ei.clone(f.uniforms),
                o.highPassUniforms.luminosityThreshold.value = a,
                o.highPassUniforms.smoothWidth.value = .01,
                o.materialHighPassFilter = new ti({
                    uniforms: o.highPassUniforms,
                    vertexShader: f.vertexShader,
                    fragmentShader: f.fragmentShader
                }),
                o.separableBlurMaterials = [];
                var h = [3, 5, 7, 9, 11];
                s = Math.round(o.resolution.x / 2),
                l = Math.round(o.resolution.y / 2);
                for (var p = 0; p < o.nMips; p++)
                    o.separableBlurMaterials.push(o.getSeparableBlurMaterial(h[p])),
                    o.separableBlurMaterials[p].uniforms.invSize.value = new _t(1 / s,1 / l),
                    s = Math.round(s / 2),
                    l = Math.round(l / 2);
                o.compositeMaterial = o.getCompositeMaterial(o.nMips),
                o.compositeMaterial.uniforms.blurTexture1.value = o.renderTargetsVertical[0].texture,
                o.compositeMaterial.uniforms.blurTexture2.value = o.renderTargetsVertical[1].texture,
                o.compositeMaterial.uniforms.blurTexture3.value = o.renderTargetsVertical[2].texture,
                o.compositeMaterial.uniforms.blurTexture4.value = o.renderTargetsVertical[3].texture,
                o.compositeMaterial.uniforms.blurTexture5.value = o.renderTargetsVertical[4].texture,
                o.compositeMaterial.uniforms.bloomStrength.value = r,
                o.compositeMaterial.uniforms.bloomRadius.value = .1;
                o.compositeMaterial.uniforms.bloomFactors.value = [1, .8, .6, .4, .2],
                o.bloomTintColors = [new Yt(1,1,1), new Yt(1,1,1), new Yt(1,1,1), new Yt(1,1,1), new Yt(1,1,1)],
                o.compositeMaterial.uniforms.bloomTintColors.value = o.bloomTintColors;
                var m = Bl;
                return o.copyUniforms = ei.clone(m.uniforms),
                o.blendMaterial = new ti({
                    uniforms: o.copyUniforms,
                    vertexShader: m.vertexShader,
                    fragmentShader: m.fragmentShader,
                    blending: 2,
                    depthTest: !1,
                    depthWrite: !1,
                    transparent: !0
                }),
                o.enabled = !0,
                o.needsSwap = !1,
                o._oldClearColor = new gr,
                o.oldClearAlpha = 1,
                o.basic = new br,
                o.fsQuad = new Wl(null),
                o
            }
            return x(n, [{
                key: "dispose",
                value: function() {
                    for (var e = 0; e < this.renderTargetsHorizontal.length; e++)
                        this.renderTargetsHorizontal[e].dispose();
                    for (var t = 0; t < this.renderTargetsVertical.length; t++)
                        this.renderTargetsVertical[t].dispose();
                    this.renderTargetBright.dispose();
                    for (var n = 0; n < this.separableBlurMaterials.length; n++)
                        this.separableBlurMaterials[n].dispose();
                    this.compositeMaterial.dispose(),
                    this.blendMaterial.dispose(),
                    this.basic.dispose(),
                    this.fsQuad.dispose()
                }
            }, {
                key: "setSize",
                value: function(e, t) {
                    var n = Math.round(e / 2)
                      , r = Math.round(t / 2);
                    this.renderTargetBright.setSize(n, r);
                    for (var i = 0; i < this.nMips; i++)
                        this.renderTargetsHorizontal[i].setSize(n, r),
                        this.renderTargetsVertical[i].setSize(n, r),
                        this.separableBlurMaterials[i].uniforms.invSize.value = new _t(1 / n,1 / r),
                        n = Math.round(n / 2),
                        r = Math.round(r / 2)
                }
            }, {
                key: "render",
                value: function(e, t, r, i, a) {
                    e.getClearColor(this._oldClearColor),
                    this.oldClearAlpha = e.getClearAlpha();
                    var o = e.autoClear;
                    e.autoClear = !1,
                    e.setClearColor(this.clearColor, 0),
                    a && e.state.buffers.stencil.setTest(!1),
                    this.renderToScreen && (this.fsQuad.material = this.basic,
                    this.basic.map = r.texture,
                    e.setRenderTarget(null),
                    e.clear(),
                    this.fsQuad.render(e)),
                    this.highPassUniforms.tDiffuse.value = r.texture,
                    this.highPassUniforms.luminosityThreshold.value = this.threshold,
                    this.fsQuad.material = this.materialHighPassFilter,
                    e.setRenderTarget(this.renderTargetBright),
                    e.clear(),
                    this.fsQuad.render(e);
                    for (var s = this.renderTargetBright, l = 0; l < this.nMips; l++)
                        this.fsQuad.material = this.separableBlurMaterials[l],
                        this.separableBlurMaterials[l].uniforms.colorTexture.value = s.texture,
                        this.separableBlurMaterials[l].uniforms.direction.value = n.BlurDirectionX,
                        e.setRenderTarget(this.renderTargetsHorizontal[l]),
                        e.clear(),
                        this.fsQuad.render(e),
                        this.separableBlurMaterials[l].uniforms.colorTexture.value = this.renderTargetsHorizontal[l].texture,
                        this.separableBlurMaterials[l].uniforms.direction.value = n.BlurDirectionY,
                        e.setRenderTarget(this.renderTargetsVertical[l]),
                        e.clear(),
                        this.fsQuad.render(e),
                        s = this.renderTargetsVertical[l];
                    this.fsQuad.material = this.compositeMaterial,
                    this.compositeMaterial.uniforms.bloomStrength.value = this.strength,
                    this.compositeMaterial.uniforms.bloomRadius.value = this.radius,
                    this.compositeMaterial.uniforms.bloomTintColors.value = this.bloomTintColors,
                    e.setRenderTarget(this.renderTargetsHorizontal[0]),
                    e.clear(),
                    this.fsQuad.render(e),
                    this.fsQuad.material = this.blendMaterial,
                    this.copyUniforms.tDiffuse.value = this.renderTargetsHorizontal[0].texture,
                    a && e.state.buffers.stencil.setTest(!0),
                    this.renderToScreen ? (e.setRenderTarget(null),
                    this.fsQuad.render(e)) : (e.setRenderTarget(r),
                    this.fsQuad.render(e)),
                    e.setClearColor(this._oldClearColor, this.oldClearAlpha),
                    e.autoClear = o
                }
            }, {
                key: "getSeparableBlurMaterial",
                value: function(e) {
                    for (var t = [], n = 0; n < e; n++)
                        t.push(.39894 * Math.exp(-.5 * n * n / (e * e)) / e);
                    return new ti({
                        defines: {
                            KERNEL_RADIUS: e
                        },
                        uniforms: {
                            colorTexture: {
                                value: null
                            },
                            invSize: {
                                value: new _t(.5,.5)
                            },
                            direction: {
                                value: new _t(.5,.5)
                            },
                            gaussianCoefficients: {
                                value: t
                            }
                        },
                        vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                        fragmentShader: "#include <common>\n\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 invSize;\n\t\t\t\tuniform vec2 direction;\n\t\t\t\tuniform float gaussianCoefficients[KERNEL_RADIUS];\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tfloat weightSum = gaussianCoefficients[0];\n\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;\n\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n\t\t\t\t\t\tfloat x = float(i);\n\t\t\t\t\t\tfloat w = gaussianCoefficients[i];\n\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\n\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;\n\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;\n\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\n\t\t\t\t\t\tweightSum += 2.0 * w;\n\t\t\t\t\t}\n\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"
                    })
                }
            }, {
                key: "getCompositeMaterial",
                value: function(e) {
                    return new ti({
                        defines: {
                            NUM_MIPS: e
                        },
                        uniforms: {
                            blurTexture1: {
                                value: null
                            },
                            blurTexture2: {
                                value: null
                            },
                            blurTexture3: {
                                value: null
                            },
                            blurTexture4: {
                                value: null
                            },
                            blurTexture5: {
                                value: null
                            },
                            bloomStrength: {
                                value: 1
                            },
                            bloomFactors: {
                                value: null
                            },
                            bloomTintColors: {
                                value: null
                            },
                            bloomRadius: {
                                value: 0
                            }
                        },
                        vertexShader: "varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",
                        fragmentShader: "varying vec2 vUv;\n\t\t\t\tuniform sampler2D blurTexture1;\n\t\t\t\tuniform sampler2D blurTexture2;\n\t\t\t\tuniform sampler2D blurTexture3;\n\t\t\t\tuniform sampler2D blurTexture4;\n\t\t\t\tuniform sampler2D blurTexture5;\n\t\t\t\tuniform float bloomStrength;\n\t\t\t\tuniform float bloomRadius;\n\t\t\t\tuniform float bloomFactors[NUM_MIPS];\n\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\n\n\t\t\t\tfloat lerpBloomFactor(const in float factor) {\n\t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\n\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +\n\t\t\t\t\t\tlerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\n\t\t\t\t}"
                    })
                }
            }]),
            n
        }(Vl);
        Ql.BlurDirectionX = new _t(1,0),
        Ql.BlurDirectionY = new _t(0,1);
        var Jl = function() {
            var t = (0,
            e.useRef)(null);
            return (0,
            e.useEffect)((function() {
                var e = t.current
                  , n = new Pl({
                    canvas: e,
                    antialias: !0
                });
                n.setSize(window.innerWidth, window.innerHeight);
                var r = new di;
                r.background = new gr(0);
                var i = new oi(75,window.innerWidth / window.innerHeight,.1,1e3);
                i.position.set(0, 0, 30),
                r.add(i);
                var a = new Da(16777215,.6);
                r.add(a);
                var o = new Ua(16777215,.6);
                o.position.set(5, 10, 5),
                r.add(o);
                var s = new ea;
                r.add(s);
                var l = new oa({
                    color: "#FFFFFF",
                    emissive: "#000000",
                    emissiveIntensity: 1,
                    metalness: .9,
                    roughness: .05,
                    transparent: !0,
                    opacity: .25
                })
                  , u = new ra(3,3,10,32,1,!0)
                  , c = new qr(u,l);
                s.add(c);
                var d = new aa(3,32,16,0,2 * Math.PI,0,Math.PI / 2)
                  , f = new qr(d,l);
                f.position.y = 5,
                s.add(f);
                var h = new aa(3,32,16,0,2 * Math.PI,Math.PI / 2,Math.PI / 2)
                  , p = new qr(h,l);
                p.position.y = -5,
                s.add(p);
                var m = new ea;
                s.add(m);
                var v = 8 * Math.PI;
                function g(e, t) {
                    var n = 64
                      , r = document.createElement("canvas");
                    r.width = n,
                    r.height = n;
                    var i = r.getContext("2d");
                    return i.fillStyle = "rgba(255, 255, 255, 0)",
                    i.fillRect(0, 0, n, n),
                    i.fillStyle = t,
                    i.font = "bold 48px Arial",
                    i.textAlign = "center",
                    i.textBaseline = "middle",
                    i.fillText(e, 32, 32),
                    r
                }
                for (var _ = g("0", "#da0000"), y = g("1", "#da0000"), x = new ta(_), b = new ta(y), S = ["#424242", "#FFFFFF", "#1A237E", "#00BCD4", "#FFD700"], M = 0; M < 200; M++) {
                    var E = M / 199
                      , T = 12 * (E - .5)
                      , w = E * v
                      , A = 2 * Math.cos(w)
                      , R = 2 * Math.sin(w)
                      , C = T
                      , k = w + Math.PI
                      , P = 2 * Math.cos(k)
                      , L = 2 * Math.sin(k)
                      , U = T
                      , D = Math.random() < .5 ? 0 : 1
                      , N = Math.random() < .5 ? 0 : 1
                      , I = "#da0000"
                      , O = new mi({
                        map: 0 === D ? x : b,
                        color: I,
                        transparent: !0,
                        depthTest: !1
                    })
                      , F = new Ri(O);
                    F.scale.set(.8, .8, .8),
                    F.position.set(A, C, R),
                    m.add(F);
                    var z = new mi({
                        map: 0 === N ? x : b,
                        color: I,
                        transparent: !0,
                        depthTest: !1
                    })
                      , B = new Ri(z);
                    B.scale.set(.8, .8, .8),
                    B.position.set(P, U, L),
                    m.add(B);
                    var V = S[Math.floor(Math.random() * S.length)]
                      , H = new Oi({
                        color: V
                    })
                      , G = [new Yt(A,C,R), new Yt(P,U,L)]
                      , W = (new Nr).setFromPoints(G)
                      , X = new Xi(W,H);
                    m.add(X)
                }
                var j = new Yl(n);
                j.addPass(new Kl(r,i));
                var q = new Ql(new _t(window.innerWidth,window.innerHeight),0,0,0);
                j.addPass(q);
                for (var Y = new Nr, K = [], Z = 0; Z < 1e3; Z++) {
                    var Q = gt.randFloatSpread(2e3)
                      , J = gt.randFloatSpread(2e3)
                      , $ = gt.randFloatSpread(2e3);
                    K.push(Q, J, $)
                }
                Y.setAttribute("position", new Ar(K,3));
                var ee = new qi({
                    color: 16777215,
                    size: 1,
                    sizeAttenuation: !0,
                    transparent: !0,
                    opacity: .8
                })
                  , te = new Ji(Y,ee);
                function ne() {
                    i.aspect = window.innerWidth / window.innerHeight,
                    i.updateProjectionMatrix(),
                    n.setSize(window.innerWidth, window.innerHeight),
                    j.setSize(window.innerWidth, window.innerHeight)
                }
                return r.add(te),
                window.addEventListener("resize", ne),
                function e() {
                    requestAnimationFrame(e),
                    s.rotation.y += .02,
                    s.rotation.x += .01,
                    te.rotation.y += 5e-4,
                    j.render()
                }(),
                function() {
                    window.removeEventListener("resize", ne),
                    n.dispose(),
                    j.dispose()
                }
            }
            ), []),
            (0,
            Ll.jsxs)("div", {
                style: {
                    margin: 0,
                    overflow: "hidden",
                    position: "relative"
                },
                children: [(0,
                Ll.jsx)(Ul, {}), (0,
                Ll.jsx)(Nl, {}), (0,
                Ll.jsx)(zl, {}), (0,
                Ll.jsx)("canvas", {
                    ref: t
                })]
            })
        }
          , $l = function(e) {
            e && e instanceof Function && n.e(18).then(n.bind(n, 18)).then((function(t) {
                var n = t.getCLS
                  , r = t.getFID
                  , i = t.getFCP
                  , a = t.getLCP
                  , o = t.getTTFB;
                n(e),
                r(e),
                i(e),
                a(e),
                o(e)
            }
            ))
        };
        t.render((0,
        Ll.jsx)(e.StrictMode, {
            children: (0,
            Ll.jsx)(Jl, {})
        }), document.getElementById("root")),
        $l((function(e) {}
        ))
    }()
}();
//# sourceMappingURL=main.cad8a1d6.js.map
